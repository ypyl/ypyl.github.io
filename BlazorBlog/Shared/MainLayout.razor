@inherits LayoutComponentBase
@using Services
@inject ArticleService articleService
@implements IDisposable

<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Dense="true" ToolBarClass="flex-nowrap">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudText Typo="Typo.h5" Class="flex-grow-1" Style="white-space: nowrap; text-overflow: ellipsis; overflow: hidden;">@articleService.ArticleName</MudText>
        <MudIconButton Icon="@Icons.Custom.Brands.LinkedIn" Color="Color.Inherit" Href="https://www.linkedin.com/in/yauhenpyl"/>
        <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" Href="https://github.com/ypyl"/>
        <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" Href="https://github.com/eapyl"/>
    </MudAppBar>
    <MudDrawer @bind-Open="@_drawerOpen">
        <MyNavMenu/>
    </MudDrawer>
    <MudMainContent>
        <MudContainer>
            <MudPaper Elevation="0" Class="pa-8 mx-auto article">@Body</MudPaper>
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    protected override void OnInitialized()
    {
        articleService.OnArticleChange += StateHasChanged;
    }

    public void Dispose()
    {
        articleService.OnArticleChange -= StateHasChanged;
    }
}
