using System.Collections.Generic;
namespace Blog;
public static class Articles
{
    public static Dictionary<string, (Dictionary<string, string>, string)> Value()
    {
        return new Dictionary<string, (Dictionary<string, string>, string)>
        {
            ["""2010-10-16-Linq-and-Group"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Linq and Group
""""",
["""date"""] =
"""""
 2010-10-16
""""",
["""tags"""] =
"""""
 dotnet
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<p>Description. There are modules that have the input and output parameters (type and number of parameters may be different). The goal is to select some first modules that have no input parameters, then the modules whose inputs are the output parameters of the previously selected modules and so on. Until the last module will not output parameters.</p>
<p>The database stores all displayed modules and displays of all parameters where the parameter mapping to the mapping of modules is many-to-one.
Initially, we choose to do all the settings using a simple SQL query.</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">private</span> <span style="color:#569CD6;">static</span> SqlCeDataReader SelectAllParamterAndModuleName()
{
    <span style="color:#569CD6;">return</span> ExecuteDataReader(String.Format(QSelectAllParamterANdModuleName));
}
</pre></div>
<p>where QSelectAllParamterANdModuleName is text of the query.</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">private</span> <span style="color:#569CD6;">static</span> IEnumerable&lt;ParameterType&gt; SelectAllParameterToArray()
{
    <span style="color:#569CD6;">var</span> query =
        <span style="color:#569CD6;">from</span> row <span style="color:#569CD6;">in</span> SelectAllParamterAndModuleName().Cast()
        <span style="color:#569CD6;">select</span> <span style="color:#569CD6;">new</span> ParameterType
        {
            Id = (<span style="color:#569CD6;">int</span>)row[<span style="color:#D69D85;">&quot;FID&quot;</span>],
            Name = (<span style="color:#569CD6;">string</span>)row[<span style="color:#D69D85;">&quot;FNAME&quot;</span>],
            TypeName = (<span style="color:#569CD6;">string</span>)row[<span style="color:#D69D85;">&quot;FTYPE&quot;</span>],
            ModuleId = (<span style="color:#569CD6;">int</span>)row[<span style="color:#D69D85;">&quot;FMODULEID&quot;</span>],
                        ModuleName = (<span style="color:#569CD6;">string</span>)row[<span style="color:#D69D85;">&quot;FMODULE&quot;</span>], Number = (<span style="color:#569CD6;">int</span>)row[<span style="color:#D69D85;">&quot;FNUMBER&quot;</span>], TypeOfPar = (<span style="color:#569CD6;">bool</span>)row[<span style="color:#D69D85;">&quot;FTYPEOFPARAMETER&quot;</span>]};
    <span style="color:#569CD6;">return</span> query.ToArray();
}
</pre></div>
<p>create from selected SqlReader array of elements of ParameterType. The result can be cached.</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">public</span> <span style="color:#569CD6;">static</span> List&lt;ModuleType&gt; SelectModuleByInputParameter(List&lt;ParameterType&gt; inputParameter)
{
    <span style="color:#569CD6;">if</span> (inputParameter == <span style="color:#569CD6;">null</span>)
    {
        <span style="color:#569CD6;">throw</span> <span style="color:#569CD6;">new</span> ArgumentNullException();
    }
    <span style="color:#569CD6;">var</span> res = <span style="color:#569CD6;">new</span> List();
    <span style="color:#569CD6;">var</span> para = SelectAllParameterToArray();
    <span style="color:#569CD6;">if</span> (inputParameter.Count == <span style="color:#B5CEA8;">0</span>)
    {
        <span style="color:#569CD6;">var</span> par = <span style="color:#569CD6;">from</span> parameter <span style="color:#569CD6;">in</span> para
                    <span style="color:#569CD6;">where</span> !(<span style="color:#569CD6;">from</span> parameter2 <span style="color:#569CD6;">in</span> para
                            <span style="color:#569CD6;">where</span> parameter2.TypeOfPar
                            <span style="color:#569CD6;">select</span> parameter2.ModuleId).Contains(parameter.ModuleId)
                    <span style="color:#569CD6;">select</span> parameter;
        <span style="color:#569CD6;">return</span> par.Select(x =&amp;gt; <span style="color:#569CD6;">new</span> ModuleType {Id = x.ModuleId, Name = x.ModuleName}).ToList();
    }

    <span style="color:#569CD6;">var</span> parGr = <span style="color:#569CD6;">from</span> parameter <span style="color:#569CD6;">in</span> para
                <span style="color:#569CD6;">where</span> parameter.TypeOfPar
                <span style="color:#569CD6;">group</span> parameter <span style="color:#569CD6;">by</span> parameter.ModuleId
                <span style="color:#569CD6;">into</span> modPara
                <span style="color:#569CD6;">where</span> modPara.Count() == inputParameter.Count
                <span style="color:#569CD6;">select</span> modPara;

    <span style="color:#569CD6;">foreach</span> (<span style="color:#569CD6;">var</span> paramGr <span style="color:#569CD6;">in</span> parGr)
    {
        <span style="color:#569CD6;">bool</span> AddInRes = <span style="color:#569CD6;">true</span>;
        <span style="color:#569CD6;">var</span> listParaGr = paramGr.ToList();
        <span style="color:#569CD6;">for</span> (<span style="color:#569CD6;">int</span> i = <span style="color:#B5CEA8;">0</span>; i &amp;lt; listParaGr.Count; i++)
        {
            <span style="color:#569CD6;">if</span> (listParaGr[i].Number != inputParameter[i].Number ||
            listParaGr[i].TypeName != inputParameter[i].TypeName)
                AddInRes = <span style="color:#569CD6;">false</span>;
        }
        <span style="color:#569CD6;">if</span> (AddInRes)
        {
            res.Add(<span style="color:#569CD6;">new</span> ModuleType(){Id =  listParaGr[<span style="color:#B5CEA8;">0</span>].ModuleId, Name = listParaGr[<span style="color:#B5CEA8;">0</span>].ModuleName});
        }
    }
    <span style="color:#569CD6;">return</span> res;
}
</pre></div>
<p>This method returns a collection of our modules, which contains defined input parameters. Thus, this method should be called justbefore the loop until the result will contain at least one value. It should be noted that calls to this method will generally be bifurcate (the first layer selected modules, and for everyone in this layer, called again, this method and so on). But this is not Linq.</p>

"""""
),
            ["""2011-02-10-Sniffer-of-TCP-packets"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Sniffer of TCP packets
""""",
["""date"""] =
"""""
 2011-02-10
""""",
["""tags"""] =
"""""
 dotnet
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<p>Поставновка задачи: Необходимо создать сниффер, который позволяет получить инфрмацию, которая хранится внутри tcp-пакета (например, мы снифферим загрузку html-страниц). Следует отметить, что tcp-пакеты могут приходить на машину назначение беспорядочно. Таким образом класс Sniffer, используя библиотеку WinPcap упорядочивает все пакеты.</p>
<p>Проект на VS2008 <a href="https://docs.google.com/open?id=0BwVmorgjT-W1OWVmY2M1MzktNGRhNS00MjEwLWIyOTktMWMzODI3YmM3Mzc3">SharkTrace</a>.</p>
<p>Важно! Библиотека SharpPcap уже давно имеет новый интерфейс.</p>
<p>Далее в тексте, под соединением я понимаю соответствие адресов и портов на клиенте и сервере.</p>
<p>Для работы необходима открытая библиотека SharpPcap, она предоставляет удобный интерфейс для работы с приложением WinPcap (<a href="http://sourceforge.net/projects/sharppcap/">Sharppcap</a>).</p>
<p>Класс соединения используется для хранения информации об адресе клиента и сервера, о портах, а так же об текущем ожидаемом tcp-пакете.</p>
<p>Больше о флагах tcp-пакета можно посмотреть <a href="http://www.firewall.cx/">http://www.firewall.cx.</a></p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#608B4E;">///</span><span style="color:#608B4E;">&lt;summary&gt;</span>
<span style="color:#608B4E;">///</span><span style="color:#608B4E;">class for connection</span>
<span style="color:#608B4E;">///</span><span style="color:#608B4E;">&lt;/summary&gt;</span>
<span style="color:#569CD6;">internal</span> <span style="color:#569CD6;">class</span> Connection
{
    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">long</span> ClientAddress; <span style="color:#57A64A;">// client initiating the connection</span>
    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">int</span> ClientPort;
    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">long</span> HostAddress; <span style="color:#57A64A;">// host receiving the connection</span>
    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">int</span> HostPort;
    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">long</span> ClientSyn; <span style="color:#57A64A;">// starting syn sent from client</span>
    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">long</span> HostSyn; <span style="color:#57A64A;">// starting syn sent from host;</span>
    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">long</span> NextClientSeq; <span style="color:#57A64A;">// this must be in SequenceNumber field of TCP packet if it is from client</span>
    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">long</span> NextHostSeq; <span style="color:#57A64A;">// this must be in SequenceNumber field of TCP packet if it is from host</span>
    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">bool</span> HostClosed;
    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">bool</span> ClientClosed;
    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">long</span> TimeIdentifier;
    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">bool</span> ThreeWayCompleted = <span style="color:#569CD6;">false</span>; <span style="color:#57A64A;">// three way connection is completed</span>

    <span style="color:#57A64A;">// Fragments , used when we get newer packets that expected.</span>
    <span style="color:#57A64A;">// so we need to wait for expected before adding them.</span>
    <span style="color:#569CD6;">public</span> SortedDictionary&lt;<span style="color:#569CD6;">long</span>, TcpPacket&gt; HostFragments = <span style="color:#569CD6;">new</span> SortedDictionary&lt;<span style="color:#569CD6;">long</span>, TcpPacket&gt;();
    <span style="color:#569CD6;">public</span> SortedDictionary&lt;<span style="color:#569CD6;">long</span>, TcpPacket&gt; ClientFragments = <span style="color:#569CD6;">new</span> SortedDictionary&lt;<span style="color:#569CD6;">long</span>, TcpPacket&gt;();

    <span style="color:#57A64A;">// returns client ip:client port as a string</span>
    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">string</span> GetClientAddressPort()
    {
        <span style="color:#569CD6;">return</span> <span style="color:#569CD6;">string</span>.Format(<span style="color:#D69D85;">&quot;{0}:{1}&quot;</span>, <span style="color:#569CD6;">new</span> IPAddress(ClientAddress).ToString(), ClientPort);
    }

    <span style="color:#57A64A;">// returns host ip:host port as a string</span>
    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">string</span> GetHostAddressPort()
    {
        <span style="color:#569CD6;">return</span> <span style="color:#569CD6;">string</span>.Format(<span style="color:#D69D85;">&quot;{0}:{1}&quot;</span>, <span style="color:#569CD6;">new</span> IPAddress(HostAddress).ToString(), HostPort);
    }

    <span style="color:#57A64A;">// packet is from host</span>
    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">bool</span> IsFromHost(TcpPacket tcp)
    {
        <span style="color:#569CD6;">return</span> ClientAddress == ((IpPacket)tcp.ParentPacket).DestinationAddress.Address &amp;&amp;
        ClientPort == tcp.DestinationPort &amp;&amp;
        HostAddress == ((IpPacket)tcp.ParentPacket).SourceAddress.Address &amp;&amp;
        HostPort == tcp.SourcePort;
    }

    <span style="color:#57A64A;">// packet is from client</span>
    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">bool</span> IsFromClient(TcpPacket tcp)
    {
        <span style="color:#569CD6;">return</span> ClientAddress == ((IpPacket)tcp.ParentPacket).SourceAddress.Address &amp;&amp;
        ClientPort == tcp.SourcePort &amp;&amp;
        HostAddress == ((IpPacket)tcp.ParentPacket).DestinationAddress.Address &amp;&amp;
        HostPort == tcp.DestinationPort;
    }

    <span style="color:#569CD6;">public</span> Connection(<span style="color:#569CD6;">long</span> clientAddress, <span style="color:#569CD6;">int</span> clientPort, <span style="color:#569CD6;">long</span> hostAddress, <span style="color:#569CD6;">int</span> hostPort, <span style="color:#569CD6;">long</span> clientSyn)
    {
        <span style="color:#569CD6;">this</span>.ClientAddress = clientAddress;
        <span style="color:#569CD6;">this</span>.ClientPort = clientPort;
        <span style="color:#569CD6;">this</span>.HostAddress = hostAddress;
        <span style="color:#569CD6;">this</span>.HostPort = hostPort;
        <span style="color:#569CD6;">this</span>.ClientSyn = clientSyn;
    }
}
</pre></div>
<p>Итак данный класс хранит информацию о соединении. В сниффере я пропускаю процесс установления соединения (так называемое тройное рукопожатие) так как возможно мы запустим сниффер когда уже соединения было установлено (о нем можно почитать <a href="http://en.wikipedia.org/wiki/Transmission_Control_Protocol#Connection_establishment">wikipedia.org</a>). Поэтому происходит попытка создания соединения, если оно еще не было создано. Ловятся пакеты, которые имеют &quot;полезную&quot; информацию в себе (payload data).</p>
<p>Больше о TCP пакетах <a href="http://ru.wikipedia.org/wiki/TCP">wikipedia.org</a>.</p>
<p>Методы RunSniffer и StopSniffer - запускают и останавливают сниффер соответственно. Метод AssemblePacket на вход получает tcp-пакет, и проверяет существует ли соединение, которому &quot;принадлежит&quot; этот пакет. Если нет - создается, если да - то работает логика по упорядочиванию пакетов. Два абстрактных метода позволяют получить доступ к &quot;полезным&quot; данным последовательно (AddHostData и AddClientData)</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#608B4E;">///</span> <span style="color:#608B4E;">&lt;summary&gt;</span>
<span style="color:#608B4E;">///</span><span style="color:#608B4E;"> Main class for sniffering</span>
<span style="color:#608B4E;">///</span> <span style="color:#608B4E;">&lt;/summary&gt;</span>
<span style="color:#608B4E;">///</span> <span style="color:#608B4E;">&lt;remarks&gt;</span>
<span style="color:#608B4E;">///</span><span style="color:#608B4E;"> 1. I see that there is new version of SharpPcap library with new interface (29/11/2011)</span>
<span style="color:#608B4E;">///</span><span style="color:#608B4E;"> So i just try to update some useful information about this class</span>
<span style="color:#608B4E;">///</span>
<span style="color:#608B4E;">///</span><span style="color:#608B4E;"> 2. I believe that SynchronizatedConnection class is just</span>
<span style="color:#608B4E;">///</span><span style="color:#608B4E;"> class SynchronizatedConnection : Connection</span>
<span style="color:#608B4E;">///</span><span style="color:#608B4E;"> {</span>
<span style="color:#608B4E;">///</span><span style="color:#608B4E;">     private object syncObject = new object();</span>
<span style="color:#608B4E;">///</span>
<span style="color:#608B4E;">///</span><span style="color:#608B4E;">     public Synchro {get {return syncObject;}}</span>
<span style="color:#608B4E;">///</span><span style="color:#608B4E;"> }</span>
<span style="color:#608B4E;">///</span>
<span style="color:#608B4E;">///</span><span style="color:#608B4E;"> 3. Coordinator is class with constants.</span>
<span style="color:#608B4E;">///</span> <span style="color:#608B4E;">&lt;/remarks&gt;</span>
<span style="color:#569CD6;">internal</span> <span style="color:#569CD6;">abstract</span> <span style="color:#569CD6;">class</span> Sniffer
{
    <span style="color:#569CD6;">private</span> Timer timer;
    <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">object</span> synchronizationObjectForConnection = <span style="color:#569CD6;">new</span> <span style="color:#569CD6;">object</span>();
    <span style="color:#569CD6;">private</span> List&lt;SynchronizatedConnection&gt; Connections = <span style="color:#569CD6;">new</span> List&lt;SynchronizatedConnection&gt;();
    <span style="color:#569CD6;">private</span> LibPcapLiveDevice _device;
    <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">readonly</span> List&lt;System.Net.IPAddress&gt; _hosts;

    <span style="color:#57A64A;">// when connected</span>
    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">abstract</span> <span style="color:#569CD6;">void</span> Connected(Object conn);
    <span style="color:#57A64A;">// when disconnected</span>
    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">abstract</span> <span style="color:#569CD6;">void</span> Disconnected(Object conn);
    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">abstract</span> <span style="color:#569CD6;">void</span> AddHostData(<span style="color:#569CD6;">byte</span>[] data, <span style="color:#569CD6;">string</span> host);
    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">abstract</span> <span style="color:#569CD6;">void</span> AddClientData(<span style="color:#569CD6;">byte</span>[] data, <span style="color:#569CD6;">string</span> client);

    <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">void</span> ClearConnections(<span style="color:#569CD6;">object</span> source)
    {
        <span style="color:#57A64A;">//sometimes purely the collection, just in case</span>
        <span style="color:#569CD6;">lock</span> (synchronizationObjectForConnection)
        {
            <span style="color:#569CD6;">foreach</span> (<span style="color:#569CD6;">var</span> key <span style="color:#569CD6;">in</span> Connections.Where(k =&gt; (DateTime.Now.ToFileTimeUtc() - k.TimeIdentifier) &gt; <span style="color:#B5CEA8;">600000000</span> * Coordinator.Config.HowLongWeSaveTransaction.TotalMinutes).ToList())
            {
                Connections.Remove(key);
            }
        }
    }

    <span style="color:#608B4E;">///</span> <span style="color:#608B4E;">&lt;summary&gt;</span>
    <span style="color:#608B4E;">///</span><span style="color:#608B4E;"> Create the exemplare of the class</span>
    <span style="color:#608B4E;">///</span> <span style="color:#608B4E;">&lt;/summary&gt;</span>
    <span style="color:#569CD6;">public</span> Sniffer(List&lt;System.Net.IPAddress&gt; hosts)
    {
        timer = <span style="color:#569CD6;">new</span> Timer(ClearConnections, <span style="color:#569CD6;">null</span>, Coordinator.Config.HowLongWeSaveTransaction, Coordinator.Config.HowLongWeSaveTransaction);
        _hosts = hosts;
    }

    <span style="color:#608B4E;">///</span> <span style="color:#608B4E;">&lt;summary&gt;</span>
    <span style="color:#608B4E;">///</span><span style="color:#608B4E;"> Start the tracing</span>
    <span style="color:#608B4E;">///</span> <span style="color:#608B4E;">&lt;/summary&gt;</span>
    <span style="color:#608B4E;">///</span> <span style="color:#608B4E;">&lt;param name=&quot;filter&quot;&gt;</span><span style="color:#608B4E;">See http://www.cs.ucr.edu/~marios/ethereal-tcpdump.pdf &lt;/param&gt;</span>
    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">void</span> RunSniffer(<span style="color:#569CD6;">string</span> filter)
    {
        <span style="color:#569CD6;">var</span> devices = LibPcapLiveDeviceList.Instance;
        <span style="color:#57A64A;">//</span>
        _device = devices[Coordinator.Config.ListeningInterface];
        <span style="color:#57A64A;">//Register our handler function to the &#39;packet arrival&#39; event</span>
        _device.OnPacketArrival += <span style="color:#569CD6;">new</span> PacketArrivalEventHandler(device_OnPacketArrival);
        <span style="color:#57A64A;">//Open the device for capturing</span>
        <span style="color:#569CD6;">int</span> readTimeoutMilliseconds = <span style="color:#B5CEA8;">1000</span>;
        _device.Open(DeviceMode.Normal, readTimeoutMilliseconds);
        <span style="color:#57A64A;">// tcpdump filter to capture only TCP/IP packets</span>
        _device.Filter = filter;
        <span style="color:#57A64A;">// Start capture packets</span>
        _device.StartCapture();
    }

    <span style="color:#608B4E;">///</span> <span style="color:#608B4E;">&lt;summary&gt;</span>
    <span style="color:#608B4E;">///</span><span style="color:#608B4E;"> Stop the tracing</span>
    <span style="color:#608B4E;">///</span> <span style="color:#608B4E;">&lt;/summary&gt;</span>
    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">void</span> StopSniffer()
    {
        _device.StopCapture();
        _device.Close();
    }

    <span style="color:#608B4E;">///</span> <span style="color:#608B4E;">&lt;summary&gt;</span>
    <span style="color:#608B4E;">///</span><span style="color:#608B4E;"> Catch the packet</span>
    <span style="color:#608B4E;">///</span> <span style="color:#608B4E;">&lt;/summary&gt;</span>
    <span style="color:#608B4E;">///</span> <span style="color:#608B4E;">&lt;param name=&quot;sender&quot;&gt;</span><span style="color:#608B4E;">&lt;/param&gt;</span>
    <span style="color:#608B4E;">///</span> <span style="color:#608B4E;">&lt;param name=&quot;e&quot;&gt;</span><span style="color:#608B4E;">&lt;/param&gt;</span>
    <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">void</span> device_OnPacketArrival(<span style="color:#569CD6;">object</span> sender, CaptureEventArgs e)
    {
        <span style="color:#569CD6;">try</span>
        {
            <span style="color:#57A64A;">// try to get TCP packet from Ip packet</span>
            <span style="color:#569CD6;">var</span> packet = PacketDotNet.Packet.ParsePacket(e.Packet.LinkLayerType, e.Packet.Data);
            <span style="color:#569CD6;">if</span> (packet <span style="color:#569CD6;">is</span> PacketDotNet.EthernetPacket)
            {
                <span style="color:#569CD6;">var</span> eth = ((PacketDotNet.EthernetPacket)packet);
                <span style="color:#569CD6;">var</span> ip = PacketDotNet.IpPacket.GetEncapsulated(packet);
                <span style="color:#569CD6;">if</span> (ip != <span style="color:#569CD6;">null</span>)
                {
                    <span style="color:#569CD6;">var</span> tcp = PacketDotNet.TcpPacket.GetEncapsulated(packet);
                    <span style="color:#569CD6;">if</span> (tcp != <span style="color:#569CD6;">null</span>)
                    {
                        AssemblePacket(tcp);
                    }
                }
            }
        }

        <span style="color:#57A64A;">// sometimes converting doesn&#39;t work - don&#39;t worry about it</span>
        <span style="color:#569CD6;">catch</span> (InvalidOperationException ex)
        {
        }
    }

    <span style="color:#608B4E;">///</span> <span style="color:#608B4E;">&lt;summary&gt;</span>
    <span style="color:#608B4E;">///</span><span style="color:#608B4E;"> Parse TCP packet</span>
    <span style="color:#608B4E;">///</span> <span style="color:#608B4E;">&lt;/summary&gt;</span>
    <span style="color:#608B4E;">///</span> <span style="color:#608B4E;">&lt;param name=&quot;tcp&quot;&gt;</span><span style="color:#608B4E;">TCP packet&lt;/param&gt;</span>
    <span style="color:#57A64A;">//     Description. There are modules that have the input and output parameters (type and number of parameters may be different). The goal is to select some first modules that have no input parameters, then the modules whose inputs are the output parameters of the previously selected modules and so on. Until the last module will not output parameters.</span>

    <span style="color:#57A64A;">// The database stores all displayed modules and displays of all parameters where the parameter mapping to the mapping of modules is many-to-one.</span>
    <span style="color:#57A64A;">// Initially, we choose to do all the settings using a simple SQL query.</span>
    <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">void</span> AssemblePacket(TcpPacket tcp)
    {
        <span style="color:#57A64A;">// pass the packets that :</span>
        <span style="color:#57A64A;">// 1. tcp.Syn &amp;&amp; tcp.PayloadData.Length == 0 - sent for synchronization</span>
        <span style="color:#57A64A;">// 2. tcp.PayloadData.Length &gt; 0 - no useful data in packet</span>
        <span style="color:#57A64A;">// 3. tcp.Fin || tcp.Rst - connection is finished or reseted</span>
        <span style="color:#569CD6;">if</span> (!(tcp.Syn &amp;&amp; tcp.PayloadData.Length == <span style="color:#B5CEA8;">0</span>) &amp;&amp; (tcp.PayloadData.Length &gt; <span style="color:#B5CEA8;">0</span>) &amp;&amp; !(tcp.Fin || tcp.Rst))
        {
            SynchronizatedConnection conn;
            <span style="color:#57A64A;">// try to find connection in collection</span>
            <span style="color:#569CD6;">bool</span>? res = IsTcpFromClient(tcp, <span style="color:#569CD6;">out</span> conn);

            <span style="color:#569CD6;">if</span> (res == <span style="color:#569CD6;">null</span>)
            {
                <span style="color:#57A64A;">// connection is new</span>
                SynchronizatedConnection con;
                <span style="color:#569CD6;">if</span> (_hosts.Contains(((IpPacket)tcp.ParentPacket).SourceAddress))
                {
                    <span style="color:#57A64A;">// packet from host to client</span>
                    conn = <span style="color:#569CD6;">new</span> SynchronizatedConnection(((IpPacket)tcp.ParentPacket).DestinationAddress.Address,
                    tcp.DestinationPort, ((IpPacket)tcp.ParentPacket).SourceAddress.Address, tcp.SourcePort, tcp.SequenceNumber);
                    conn.ClientSyn = tcp.AcknowledgmentNumber;
                    conn.HostSyn = tcp.SequenceNumber;
                    conn.NextClientSeq = tcp.AcknowledgmentNumber;
                    conn.NextHostSeq = tcp.SequenceNumber;
                    res = <span style="color:#569CD6;">false</span>;
                }
            <span style="color:#569CD6;">else</span>
                {
                    <span style="color:#57A64A;">// packet from host to client</span>
                    conn = <span style="color:#569CD6;">new</span> SynchronizatedConnection(((IpPacket)tcp.ParentPacket).SourceAddress.Address,
                    tcp.SourcePort, ((IpPacket)tcp.ParentPacket).DestinationAddress.Address, tcp.DestinationPort, tcp.SequenceNumber);
                    conn.ClientSyn = tcp.SequenceNumber;
                    conn.HostSyn = tcp.AcknowledgmentNumber;
                    conn.NextHostSeq = tcp.AcknowledgmentNumber;
                    conn.NextClientSeq = tcp.SequenceNumber;
                    res = <span style="color:#569CD6;">true</span>;
                }
                conn.TimeIdentifier = DateTime.Now.ToFileTimeUtc();
                conn.ThreeWayCompleted = <span style="color:#569CD6;">true</span>;
                <span style="color:#569CD6;">lock</span> (synchronizationObjectForConnection)
                {
                    Connections.Add(conn);
                }
            }
            <span style="color:#569CD6;">if</span> (res == <span style="color:#569CD6;">true</span>)
            {
                <span style="color:#57A64A;">// from client</span>
                <span style="color:#569CD6;">lock</span> (conn.Synchro)
                {
                    <span style="color:#569CD6;">if</span> (tcp.SequenceNumber &lt; conn.NextClientSeq)
                    <span style="color:#57A64A;">// old packet</span>
                    {
                        <span style="color:#57A64A;">// just drop these for now</span>
                        <span style="color:#569CD6;">return</span>;
                    }
                    <span style="color:#569CD6;">if</span> (tcp.SequenceNumber &gt; conn.NextClientSeq)
                    <span style="color:#57A64A;">// out of order data</span>
                    {
                        <span style="color:#569CD6;">if</span> (!conn.ClientFragments.ContainsKey(tcp.SequenceNumber))
                        {
                            conn.ClientFragments.Add(tcp.SequenceNumber, tcp);
                        }
                        <span style="color:#569CD6;">else</span>
                        <span style="color:#57A64A;">// expect new data to be better?</span>
                        {
                            conn.ClientFragments[tcp.SequenceNumber] = tcp;
                        }
                    }
                    <span style="color:#569CD6;">else</span>
                    {
                        <span style="color:#569CD6;">while</span> (tcp.SequenceNumber == conn.NextClientSeq)
                        {
                            conn.ClientFragments.Remove(tcp.SequenceNumber);
                            <span style="color:#57A64A;">// remove fragment</span>
                            <span style="color:#569CD6;">if</span> (tcp.PayloadData.Length == <span style="color:#B5CEA8;">0</span>)
                                <span style="color:#569CD6;">break</span>;
                            <span style="color:#57A64A;">// new NextClientSeq for client packet</span>
                            conn.NextClientSeq = conn.NextClientSeq + tcp.PayloadData.Length;
                            <span style="color:#57A64A;">// data should be valid here.</span>
                            AddClientData(GetUsefulData(tcp), GetIdOfConnection(conn));
                            <span style="color:#569CD6;">if</span> (conn.ClientFragments.ContainsKey(conn.NextClientSeq))
                            <span style="color:#57A64A;">// check if we have newer fragments which will now fit.</span>
                            {
                                tcp = conn.ClientFragments[conn.NextClientSeq];
                            }
                            <span style="color:#569CD6;">else</span>
                                <span style="color:#569CD6;">break</span>;
                        }
                    }
                }
            }
            <span style="color:#569CD6;">else</span>
            {
                <span style="color:#57A64A;">//from host</span>
                <span style="color:#569CD6;">lock</span> (conn.Synchro)
                {
                    <span style="color:#569CD6;">if</span> (tcp.SequenceNumber &lt; conn.NextHostSeq)
                    <span style="color:#57A64A;">// old packet</span>
                    {
                        <span style="color:#57A64A;">// just drop these for now</span>
                        <span style="color:#569CD6;">return</span>;
                    }
                    <span style="color:#569CD6;">if</span> (tcp.SequenceNumber &gt; conn.NextHostSeq)
                    <span style="color:#57A64A;">// newer out of order data</span>
                    {
                        <span style="color:#569CD6;">if</span> (!conn.HostFragments.ContainsKey(tcp.SequenceNumber))
                        {
                            conn.HostFragments.Add(tcp.SequenceNumber, tcp);
                        }
                        <span style="color:#569CD6;">else</span>
                        {
                            conn.HostFragments[tcp.SequenceNumber] = tcp;
                        }
                    }
                    <span style="color:#569CD6;">else</span>
                    <span style="color:#57A64A;">//</span>
                    {
                        <span style="color:#569CD6;">while</span> (tcp.SequenceNumber == conn.NextHostSeq)
                        <span style="color:#57A64A;">// on time</span>
                        {
                            conn.HostFragments.Remove(tcp.SequenceNumber);
                            <span style="color:#57A64A;">// remove fragment</span>
                            <span style="color:#569CD6;">if</span> (tcp.PayloadData.Length == <span style="color:#B5CEA8;">0</span>)
                                <span style="color:#569CD6;">break</span>;
                            conn.NextHostSeq = conn.NextHostSeq + tcp.PayloadData.Length;
                            <span style="color:#57A64A;">// data should be valid here</span>
                            AddHostData(GetUsefulData(tcp), GetIdOfConnection(conn));
                            <span style="color:#569CD6;">if</span> (conn.HostFragments.ContainsKey(conn.NextHostSeq))
                            <span style="color:#57A64A;">// check if we have newer fragments which will now fit.</span>
                            {
                                tcp = conn.HostFragments[conn.NextHostSeq];
                            }
                            <span style="color:#569CD6;">else</span>
                                <span style="color:#569CD6;">break</span>;
                        }
                    }
                }
            }
        }
    }

    <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">static</span> <span style="color:#569CD6;">string</span> GetIdOfConnection(SynchronizatedConnection conn)
    {
        <span style="color:#569CD6;">return</span> conn.ClientAddress.ToString() + conn.ClientPort.ToString() + conn.HostAddress.ToString()
        + conn.HostPort.ToString();
    }

    <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">bool</span>? IsTcpFromClient(TcpPacket tcp, <span style="color:#569CD6;">out</span> SynchronizatedConnection conn)
    {
        conn = <span style="color:#569CD6;">null</span>;
        <span style="color:#569CD6;">lock</span> (synchronizationObjectForConnection)
        {
            <span style="color:#569CD6;">foreach</span> (<span style="color:#569CD6;">var</span> connection <span style="color:#569CD6;">in</span> Connections)
            {
                <span style="color:#569CD6;">if</span> (connection.IsFromClient(tcp))
                {
                    conn = connection;
                    <span style="color:#569CD6;">return</span> <span style="color:#569CD6;">true</span>;
                }
                <span style="color:#569CD6;">if</span> (connection.IsFromHost(tcp))
                {
                    conn = connection;
                    <span style="color:#569CD6;">return</span> <span style="color:#569CD6;">false</span>;
                }
            }
        }
        <span style="color:#569CD6;">return</span> <span style="color:#569CD6;">null</span>;
    }

    <span style="color:#608B4E;">///</span> <span style="color:#608B4E;">&lt;summary&gt;</span>
    <span style="color:#608B4E;">///</span><span style="color:#608B4E;"> Get Payload Data from tcp packet</span>
    <span style="color:#608B4E;">///</span> <span style="color:#608B4E;">&lt;/summary&gt;</span>
    <span style="color:#608B4E;">///</span> <span style="color:#608B4E;">&lt;param name=&quot;tcp&quot;&gt;</span><span style="color:#608B4E;">TCP packet&lt;/param&gt;</span>
    <span style="color:#608B4E;">///</span> <span style="color:#608B4E;">&lt;returns&gt;</span><span style="color:#608B4E;">bytes of useful data&lt;/returns&gt;</span>
    <span style="color:#569CD6;">protected</span> <span style="color:#569CD6;">static</span> <span style="color:#569CD6;">byte</span>[] GetUsefulData(TcpPacket tcp)
    {
        <span style="color:#569CD6;">var</span> data = <span style="color:#569CD6;">new</span> <span style="color:#569CD6;">byte</span>[tcp.Bytes.Length - tcp.DataOffset * <span style="color:#B5CEA8;">4</span>];
        <span style="color:#569CD6;">for</span> (<span style="color:#569CD6;">int</span> i = tcp.DataOffset * <span style="color:#B5CEA8;">4</span>; i &lt; tcp.Bytes.Length; i++)
        {
            data[i - tcp.DataOffset * <span style="color:#B5CEA8;">4</span>] = tcp.Bytes[i];
        }
        <span style="color:#569CD6;">return</span> data;
    }
}
</pre></div>
<p>Проблемы данного класса/решения:</p>
<ol>
<li>Если &quot;словится&quot; первый пакет, который является неправильным - возникает проблема с получением дальнейшей информации, которая идет по данному соединению;</li>
<li>Не проверяется контрольная сумма принятого пакета;</li>
<li>Все манипуляции (приведение, извлечение TCP пакета из IP пакета, работа с этим пакетом) довольно времяемкие операции. Необходимо задавать хороший фильтр</li>
</ol>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
(<span style="color:#569CD6;">public</span> <span style="color:#569CD6;">void</span> RunSniffer(<span style="color:#569CD6;">string</span> filter))
</pre></div>
<p>или советую отказаться от этого решения для наблюдения за высоконагруженным сетевым траффиком.</p>

"""""
),
            ["""2011-05-05-Use-LogParser"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Use LogParser
""""",
["""date"""] =
"""""
 2011-05-05
""""",
["""tags"""] =
"""""
 dotnet
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<ol>
<li>Download LogParser 2.2.</li>
<li>C:&gt;tlbimp LogParser.dll /out:Interop.MSUtil.dll</li>
<li>Include Interop.MSUtil.dll in a project.</li>
<li></li>
</ol>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">using</span> LogQuery = Interop.MSUtil.LogQueryClassClass;
<span style="color:#569CD6;">using</span> IISW3CInputFormat = Interop.MSUtil.COMIISW3CInputContextClassClass;
<span style="color:#569CD6;">using</span> CsvOutputFormat = Interop.MSUtil.COMCSVOutputContextClassClass;
<span style="color:#569CD6;">using</span> LogRecordSet = Interop.MSUtil.ILogRecordset;

LogQuery oLogQuery = <span style="color:#569CD6;">new</span> LogQuery();

<span style="color:#57A64A;">// Instantiate the Event Log Input Format object</span>
IISW3CInputFormat oW3CInputFormat = <span style="color:#569CD6;">new</span> IISW3CInputFormat();

<span style="color:#569CD6;">string</span> query = String.Format(_queryPostOverall, _pathToLog, <span style="color:#D69D85;">&quot;200&quot;</span>, _date);
<span style="color:#569CD6;">var</span> oRecordSet = oLogQuery.Execute(query, oW3CInputFormat);
<span style="color:#569CD6;">for</span> (; !oRecordSet.atEnd(); oRecordSet.moveNext())
{
   <span style="color:#569CD6;">double</span> count = Convert.ToDouble(oRecordSet.getRecord().getValue(<span style="color:#D69D85;">&quot;count1&quot;</span>));
   _postCountOverall.overall += count;
}
oRecordSet.close();
</pre></div>
"""""
),
            ["""2011-05-05-Use-ZadGraph"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Use ZadGraph
""""",
["""date"""] =
"""""
 2011-05-05
""""",
["""tags"""] =
"""""
 dotnet
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<p>Library can be downloaded. License is LPGL 2.1.</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">if</span> (dates.Count &gt; <span style="color:#B5CEA8;">0</span> &amp;&amp; dates.Count == values.Count)
{
    <span style="color:#569CD6;">double</span> max = FindMax(values);
    <span style="color:#569CD6;">if</span> (!Directory.Exists(_imageFolderName))
    {
        Directory.CreateDirectory(_imageFolderName);
    }
    GraphPane myPane = <span style="color:#569CD6;">new</span> GraphPane();

    <span style="color:#57A64A;">// Set the titles and axis labels</span>
    myPane.Title.Text = <span style="color:#D69D85;">&quot;Statistic of errors&quot;</span>;
    myPane.XAxis.Title.Text = <span style="color:#D69D85;">&quot;Day&quot;</span>;
    myPane.YAxis.Title.Text = <span style="color:#D69D85;">&quot;Percent&quot;</span>;
    <span style="color:#57A64A;">// Make up some data points based on the Sine function</span>
    PointPairList list = <span style="color:#569CD6;">new</span> PointPairList();
    <span style="color:#569CD6;">for</span> (<span style="color:#569CD6;">int</span> i = <span style="color:#B5CEA8;">0</span>; i &lt; dates.Count; i++)
    {
        <span style="color:#569CD6;">double</span> x = dates[i].Date.ToOADate();
        <span style="color:#569CD6;">double</span> y = values[i];
        list.Add(x, y);
    }
    myPane.XAxis.CrossAuto = <span style="color:#569CD6;">true</span>;
    myPane.XAxis.Type = AxisType.Date;
    myPane.XAxis.Scale.MinorStep = <span style="color:#B5CEA8;">1</span>;
    myPane.XAxis.Scale.MajorStep = <span style="color:#B5CEA8;">1</span>;
    myPane.XAxis.Scale.Format = <span style="color:#D69D85;">&quot;dd.MM.yy&quot;</span>;
    myPane.XAxis.MajorTic.IsBetweenLabels = <span style="color:#569CD6;">true</span>;
    myPane.XAxis.Scale.Min = dates[<span style="color:#B5CEA8;">0</span>].ToOADate();
    myPane.XAxis.Scale.Max = dates[dates.Count - <span style="color:#B5CEA8;">1</span>].ToOADate();
    myPane.XAxis.AxisGap = 3f;

    myPane.YAxis.Scale.Max = max + <span style="color:#B5CEA8;">4</span>;
    myPane.YAxis.Scale.MinorStep = myPane.YAxis.Scale.Max/<span style="color:#B5CEA8;">10</span>;
    myPane.YAxis.MajorGrid.IsVisible = <span style="color:#569CD6;">true</span>;
    myPane.YAxis.Type = AxisType.Linear;
    LineItem myCurve2 = myPane.AddCurve(<span style="color:#D69D85;">&quot;Overall&quot;</span>,
            list, Color.Blue, SymbolType.Diamond);
    myPane.YAxis.Scale.MajorStep = myPane.YAxis.Scale.Max / <span style="color:#B5CEA8;">5</span>;

    myPane.Legend.Position = ZedGraph.LegendPos.Bottom;
    <span style="color:#569CD6;">int</span> width = <span style="color:#B5CEA8;">800</span>;
    <span style="color:#569CD6;">if</span> (<span style="color:#B5CEA8;">27</span> * dates.Count &gt; width)
        width = <span style="color:#B5CEA8;">27</span> * dates.Count;
    myPane.GetImage(width, <span style="color:#B5CEA8;">600</span>, 800f).Save(Path.Combine(_imageFolderName, _imageFileName), System.Drawing.Imaging.ImageFormat.Jpeg);
}
</pre></div>
"""""
),
            ["""2011-05-06-Create-line-chart-use-net-20"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Create line chart use .net 2.0
""""",
["""date"""] =
"""""
 2011-05-06
""""",
["""tags"""] =
"""""
 dotnet
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<p>See please <a href="https://drive.google.com/file/d/0BwVmorgjT-W1YzVhNmNmYzktOWM3Yy00OGUyLWExNzYtNTZkOGU0NmVkZTdi/view">ChatBuilder</a>. There are 4 files of simple source code.</p>

"""""
),
            ["""2011-06-21-Response-without-root-element"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Response without root element
""""",
["""date"""] =
"""""
 2011-06-21
""""",
["""tags"""] =
"""""
 wcf
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<p>Write WCF web-service that accepts SOAP 1.2 and SOAP 1.1 requests. Service should expose 1 operation (let it be &quot;GetResponse_1&quot;) with the following structure (just an example, please combine schema for the service):</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#808080;">&lt;</span><span style="color:#E6E6E6;">GetResponse_Request_1</span><span style="color:#808080;">&gt;</span>
    <span style="color:#808080;">&lt;</span><span style="color:#E6E6E6;">element1</span><span style="color:#808080;">&gt;</span>text1<span style="color:#808080;">&lt;/</span><span style="color:#E6E6E6;">element1</span><span style="color:#808080;">&gt;</span><span style="color:#57A64A;">&lt;!-- at least 1 &quot;element1&quot; --&gt;</span>
    <span style="color:#808080;">&lt;</span><span style="color:#E6E6E6;">element1</span><span style="color:#808080;">&gt;</span>text2<span style="color:#808080;">&lt;/</span><span style="color:#E6E6E6;">element1</span><span style="color:#808080;">&gt;</span>
    <span style="color:#808080;">&lt;</span><span style="color:#E6E6E6;">element1</span><span style="color:#808080;">&gt;</span>text3<span style="color:#808080;">&lt;/</span><span style="color:#E6E6E6;">element1</span><span style="color:#808080;">&gt;</span>
    <span style="color:#808080;">&lt;</span><span style="color:#E6E6E6;">element2</span><span style="color:#808080;">&gt;</span>textn<span style="color:#808080;">&lt;/</span><span style="color:#E6E6E6;">element2</span><span style="color:#808080;">&gt;</span><span style="color:#57A64A;">&lt;!-- at least 1 &quot;element2&quot; --&gt;</span>
    <span style="color:#808080;">&lt;</span><span style="color:#E6E6E6;">element2</span><span style="color:#808080;">&gt;</span>textn+1<span style="color:#808080;">&lt;/</span><span style="color:#E6E6E6;">element2</span><span style="color:#808080;">&gt;</span>
    <span style="color:#808080;">&lt;</span><span style="color:#E6E6E6;">element2</span><span style="color:#808080;">&gt;</span>textn+2<span style="color:#808080;">&lt;/</span><span style="color:#E6E6E6;">element2</span><span style="color:#808080;">&gt;</span>
<span style="color:#808080;">&lt;/</span><span style="color:#E6E6E6;">GetResponse_Request_1</span><span style="color:#808080;">&gt;</span>
</pre></div>
<p>Response should contain &quot;planed&quot; element1 and element2 sets, just comma separated values:</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#808080;">&lt;</span><span style="color:#E6E6E6;">GetResponse_Response_1</span><span style="color:#808080;">&gt;</span>
    <span style="color:#808080;">&lt;</span><span style="color:#E6E6E6;">element1_plane</span><span style="color:#808080;">&gt;</span>text1, text2, text3<span style="color:#808080;">&lt;/</span><span style="color:#E6E6E6;">element1</span><span style="color:#808080;">&gt;</span>
    <span style="color:#808080;">&lt;</span><span style="color:#E6E6E6;">element2_plane</span><span style="color:#808080;">&gt;</span>textn, textn+1, textn+2<span style="color:#808080;">&lt;/</span><span style="color:#E6E6E6;">element2</span><span style="color:#808080;">&gt;</span>
<span style="color:#808080;">&lt;/</span><span style="color:#E6E6E6;">GetResponse_Response_1</span><span style="color:#808080;">&gt;</span>
</pre></div>
"""""
),
            ["""2011-09-12-0x80004005-Failed-to-Execute-URL"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 0x80004005 Failed to Execute URL
""""",
["""date"""] =
"""""
 2011-09-12
""""",
["""tags"""] =
"""""
 linux dotnet
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<p>The error was connected with GET requests. ApplicationPool was set in Classic mode.
There is HttpModule, which throws this type of exceptions:</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
System.Web.HttpException (0x80004005): Failed to Execute URL.
at System.Web.Hosting.ISAPIWorkerRequestInProcForIIS6.BeginExecuteUrl(String url, String method, String childHeaders, Boolean sendHeaders, Boolean addUserIndo, IntPtr token, String name, String authType, Byte[] entity, AsyncCallback cb, Object state)
at System.Web.HttpResponse.BeginExecuteUrlForEntireResponse(String pathOverride, NameValueCollection requestHeaders, AsyncCallback cb, Object state)
at System.Web.DefaultHttpHandler.BeginProcessRequest(HttpContext context, AsyncCallback callback, Object state)
at System.Web.HttpApplication.CallHandlerExecutionStep.System.Web.HttpApplication.IExecutionStep.Execute()
at System.Web.HttpApplication.ExecuteStep(IExecutionStep step, Boolean&amp; completedSynchronously)
</pre></div>
<p>contained the next source code in event context.BeginRequest:</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
app.Context.RewritePath(app.Context.Request.Path);
</pre></div>
<p>The solve of the problem is:</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
app.Context.RewritePath(app.Context.Request.FilePath, app.Context.Request.PathInfo, <span style="color:#569CD6;">string</span>.Empty);
</pre></div>
"""""
),
            ["""2011-12-06-IIS-7-HttpModule-Logger"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 IIS 7 HttpModule Logger
""""",
["""date"""] =
"""""
 2011-12-06
""""",
["""tags"""] =
"""""
 iis
""""",
["""categories"""] =
"""""
 administration
""""",
 },
"""""
<p>Простой модуль-лог для IIS 7 (Classic mode)</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">using</span> System;
<span style="color:#569CD6;">using</span> System.Collections.Generic;
<span style="color:#569CD6;">using</span> System.Linq;
<span style="color:#569CD6;">using</span> System.Text;
<span style="color:#569CD6;">using</span> System.Web;
<span style="color:#569CD6;">using</span> System.Threading.Tasks;
<span style="color:#569CD6;">using</span> System.IO;
<span style="color:#569CD6;">using</span> System.Threading;
<span style="color:#569CD6;">using</span> System.Net;
<span style="color:#569CD6;">using</span> ReutersKnowledge.Web.Services.Util;
<span style="color:#569CD6;">using</span> System.Collections.Specialized;
<span style="color:#569CD6;">using</span> System.Reflection;

<span style="color:#569CD6;">namespace</span> IISWsgLogger
{
    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">class</span> IISLoggerModule : IHttpModule
    {
        <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">static</span> <span style="color:#569CD6;">string</span> fileName = <span style="color:#D69D85;">&quot;D:\\Log.txt&quot;</span>;

        <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">static</span> ConcurrentQueue&lt;<span style="color:#569CD6;">string</span>&gt; logRecords = <span style="color:#569CD6;">new</span> ConcurrentQueue&lt;<span style="color:#569CD6;">string</span>&gt;();

        <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">static</span> <span style="color:#569CD6;">object</span> syncTask = <span style="color:#569CD6;">new</span> <span style="color:#569CD6;">object</span>();
        <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">static</span> Task taskLog;

        <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">void</span> Init(HttpApplication context)
        {
            <span style="color:#569CD6;">if</span> (taskLog == <span style="color:#569CD6;">null</span>)
            {
                <span style="color:#569CD6;">lock</span> (syncTask)
                {
                    <span style="color:#569CD6;">if</span> (taskLog == <span style="color:#569CD6;">null</span>)
                    {
                        taskLog = Task.Factory.StartNew(() =&gt; StartLog(), TaskCreationOptions.LongRunning);
                    }
                }
            }
            context.BeginRequest += <span style="color:#569CD6;">new</span> EventHandler(OnPreRequestHandlerExecute);
            context.EndRequest += <span style="color:#569CD6;">new</span> EventHandler(OnPostReleaseRequestState);
        }

        <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">void</span> StartLog()
        {
            <span style="color:#569CD6;">var</span> t = File.AppendText(fileName);
            t.WriteLine(<span style="color:#D69D85;">&quot;date time wsg-guid s-port cs-method reuters-uuid cs(Host) cs-uri-stem cs-uri-query sc-status sc-substatus cs(User-Agent) cs(Cookie) TimeTakenMS sc-bytes&quot;</span>);
            <span style="color:#569CD6;">int</span> waitMil = <span style="color:#B5CEA8;">1000</span>;
            <span style="color:#569CD6;">string</span> res = <span style="color:#569CD6;">null</span>;
            <span style="color:#569CD6;">try</span>
            {
                <span style="color:#569CD6;">while</span> (<span style="color:#569CD6;">true</span>)
                {
                    <span style="color:#569CD6;">while</span> (logRecords.TryDequeue(<span style="color:#569CD6;">out</span> res))
                    {
                        t.WriteLine(res);
                    }
                    Thread.Sleep(waitMil);
                }
            }
            <span style="color:#569CD6;">finally</span>
            {
                t.Close();
            }

        }

        <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">void</span> Dispose()
        {
        }

        <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">void</span> OnPreRequestHandlerExecute(Object source, EventArgs e)
        {
            HttpApplication app = (HttpApplication)source;
            <span style="color:#569CD6;">var</span> guid = Guid.NewGuid().ToString();
            app.Context.RewritePath(app.Context.Request.FilePath, app.Context.Request.PathInfo, <span style="color:#D69D85;">&quot;guid=&quot;</span> + guid);
        }

        <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">void</span> OnPostReleaseRequestState(Object source, EventArgs e)
        {
            HttpApplication app = (HttpApplication)source;
            <span style="color:#569CD6;">var</span> time = DateTime.Now;
            <span style="color:#569CD6;">var</span> timeStamp = app.Context.Timestamp;
            <span style="color:#569CD6;">var</span> port = app.Context.Request.Url.Port;
            <span style="color:#569CD6;">var</span> typeOfRequest = app.Context.Request.RequestType;
            <span style="color:#569CD6;">var</span> Guid = app.Context.Request.QueryString[<span style="color:#B5CEA8;">0</span>];
            <span style="color:#569CD6;">var</span> host = app.Context.Request.Url.Host;
            <span style="color:#569CD6;">var</span> rawUrl = app.Context.Request.RawUrl;
            <span style="color:#569CD6;">var</span> contentRequestLength = app.Context.Request.ContentLength;
            <span style="color:#569CD6;">var</span> status = app.Context.Response.StatusCode;
            <span style="color:#569CD6;">var</span> agent = app.Context.Request.UserAgent;
            <span style="color:#569CD6;">var</span> cookies = <span style="color:#569CD6;">string</span>.Empty;
            <span style="color:#569CD6;">foreach</span> (<span style="color:#569CD6;">var</span> cookie <span style="color:#569CD6;">in</span> app.Context.Request.Cookies)
            {
                cookies += cookies;
            }

            logRecords.Enqueue(<span style="color:#569CD6;">string</span>.Format(<span style="color:#D69D85;">&quot;{0} {1} {3} {4} {5} {6} {7} {8} {9} {10}&quot;</span>, time, guid, port, typeOfRequest, host, rawUrl, status, agent, timeStamp, contentRequestLength));
        }

    }
}
</pre></div>
<p>web.config :</p>
<p>``xml</p>
<?xml version="1.0"?>
<configuration>
 <configSections>
  ...
 </configSections>
 <system.web>
  ...
   <httpModules>
   ...
  </httpModules>
 </system.web>
 <system.webServer>
  <modules>
   <add name="IISLoggerModule" type="IISLogger.IISLoggerModule, IISLogger.IISLoggerNamespace.IISLogger"/>
```

"""""
),
            ["""2011-12-08-Fiddler-Zip-extension"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Fiddler Zip extension
""""",
["""date"""] =
"""""
 2011-12-08
""""",
["""tags"""] =
"""""
 dotnet
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<p>Extension for <a href="http://www.fiddler2.com/Fiddler/dev/">Fiddler</a>.</p>
<p><img src="./images/zip_fiddler.jpg" alt="example" /></p>
<p>The source code: <a href="https://drive.google.com/file/d/0BwVmorgjT-W1NDFlZDZkMDItMWMxMS00NzU2LTg3NDUtYTYzOWVhOGMyMzRj/view">FiddlerZip</a>.</p>
<p>The main code:</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">using</span> System;
<span style="color:#569CD6;">using</span> System.Collections.Generic;
<span style="color:#569CD6;">using</span> System.Linq;
<span style="color:#569CD6;">using</span> System.Text;
<span style="color:#569CD6;">using</span> Fiddler;
<span style="color:#569CD6;">using</span> System.Windows.Forms;

<span style="color:#57A64A;">// It is important !!! see the current version of fiddler</span>
[<span style="color:#569CD6;">assembly</span>: Fiddler.RequiredVersion(<span style="color:#D69D85;">&quot;2.3.4.4&quot;</span>)]

<span style="color:#569CD6;">namespace</span> FiddlerZip
{
    <span style="color:#608B4E;">///</span> <span style="color:#608B4E;">&lt;summary&gt;</span>
    <span style="color:#608B4E;">///</span><span style="color:#608B4E;"> Zip extension</span>
    <span style="color:#608B4E;">///</span> <span style="color:#608B4E;">&lt;/summary&gt;</span>
    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">class</span> Zip : IFiddlerExtension
    {
        <span style="color:#608B4E;">///</span> <span style="color:#608B4E;">&lt;summary&gt;</span>
        <span style="color:#608B4E;">///</span><span style="color:#608B4E;"> page for extesnion</span>
        <span style="color:#608B4E;">///</span> <span style="color:#608B4E;">&lt;/summary&gt;</span>
        <span style="color:#569CD6;">private</span> TabPage oPage;
        <span style="color:#608B4E;">///</span> <span style="color:#608B4E;">&lt;summary&gt;</span>
        <span style="color:#608B4E;">///</span><span style="color:#608B4E;"> Control that presented extension</span>
        <span style="color:#608B4E;">///</span> <span style="color:#608B4E;">&lt;/summary&gt;</span>
        <span style="color:#569CD6;">private</span> ZipControl oAppConsole;
        <span style="color:#569CD6;">#region</span> IFiddlerExtension Members

        <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">void</span> OnBeforeUnload()
        {

        }

        <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">void</span> OnLoad()
        {
            <span style="color:#57A64A;">// create tab with name &quot;Zip&quot;</span>
            oPage = <span style="color:#569CD6;">new</span> TabPage(<span style="color:#D69D85;">&quot;Zip&quot;</span>);
            <span style="color:#57A64A;">// it is possible to add icon to your tab</span>
            oPage.ImageIndex = (<span style="color:#569CD6;">int</span>)Fiddler.SessionIcons.FilterBrowsers;
            oAppConsole = <span style="color:#569CD6;">new</span> ZipControl();
            <span style="color:#57A64A;">// add control to tab</span>
            oPage.Controls.Add(oAppConsole);
            oAppConsole.Dock = DockStyle.Fill;
            FiddlerApplication.UI.tabsViews.TabPages.Add(oPage);
        }

        <span style="color:#569CD6;">#endregion</span>
    }
}
</pre></div>
"""""
),
            ["""2011-12-08-Style-Cop-I-don't-like-SA-1201"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Style Cop I don't like SA 1201
""""",
["""date"""] =
"""""
 2011-12-08
""""",
["""tags"""] =
"""""
 dotnet
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<p><a href="">StyleCop</a> is a good application to take your source code in good state. There are a lot of rules and most of all are very useful, but...</p>
<p>Unfortunately, the rule SA1201 is not so good for me. So i just want to create the similar rule, but a little else.</p>
<p>You can see the rule that changes the order of document's element to the next:</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#808080;">&lt;</span><span style="color:#E6E6E6;">element</span> <span style="color:#92CAF4;">name</span><span style="color:#808080;">=</span><span style="color:#569CD6;">&quot;</span><span style="color:#569CD6;">File</span><span style="color:#569CD6;">&quot;</span> <span style="color:#92CAF4;">order</span><span style="color:#808080;">=</span><span style="color:#569CD6;">&quot;</span><span style="color:#569CD6;">0</span><span style="color:#569CD6;">&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#808080;">&lt;/</span><span style="color:#E6E6E6;">element</span><span style="color:#808080;">&gt;</span>
<span style="color:#808080;">&lt;</span><span style="color:#E6E6E6;">element</span> <span style="color:#92CAF4;">name</span><span style="color:#808080;">=</span><span style="color:#569CD6;">&quot;</span><span style="color:#569CD6;">Root</span><span style="color:#569CD6;">&quot;</span> <span style="color:#92CAF4;">order</span><span style="color:#808080;">=</span><span style="color:#569CD6;">&quot;</span><span style="color:#569CD6;">1</span><span style="color:#569CD6;">&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#808080;">&lt;/</span><span style="color:#E6E6E6;">element</span><span style="color:#808080;">&gt;</span>
<span style="color:#808080;">&lt;</span><span style="color:#E6E6E6;">element</span> <span style="color:#92CAF4;">name</span><span style="color:#808080;">=</span><span style="color:#569CD6;">&quot;</span><span style="color:#569CD6;">ExternAliasDirective</span><span style="color:#569CD6;">&quot;</span> <span style="color:#92CAF4;">order</span><span style="color:#808080;">=</span><span style="color:#569CD6;">&quot;</span><span style="color:#569CD6;">2</span><span style="color:#569CD6;">&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#808080;">&lt;/</span><span style="color:#E6E6E6;">element</span><span style="color:#808080;">&gt;</span>
<span style="color:#808080;">&lt;</span><span style="color:#E6E6E6;">element</span> <span style="color:#92CAF4;">name</span><span style="color:#808080;">=</span><span style="color:#569CD6;">&quot;</span><span style="color:#569CD6;">UsingDirective</span><span style="color:#569CD6;">&quot;</span> <span style="color:#92CAF4;">order</span><span style="color:#808080;">=</span><span style="color:#569CD6;">&quot;</span><span style="color:#569CD6;">3</span><span style="color:#569CD6;">&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#808080;">&lt;/</span><span style="color:#E6E6E6;">element</span><span style="color:#808080;">&gt;</span>
<span style="color:#808080;">&lt;</span><span style="color:#E6E6E6;">element</span> <span style="color:#92CAF4;">name</span><span style="color:#808080;">=</span><span style="color:#569CD6;">&quot;</span><span style="color:#569CD6;">AssemblyAttribute</span><span style="color:#569CD6;">&quot;</span> <span style="color:#92CAF4;">order</span><span style="color:#808080;">=</span><span style="color:#569CD6;">&quot;</span><span style="color:#569CD6;">4</span><span style="color:#569CD6;">&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#808080;">&lt;/</span><span style="color:#E6E6E6;">element</span><span style="color:#808080;">&gt;</span>
<span style="color:#808080;">&lt;</span><span style="color:#E6E6E6;">element</span> <span style="color:#92CAF4;">name</span><span style="color:#808080;">=</span><span style="color:#569CD6;">&quot;</span><span style="color:#569CD6;">Namespace</span><span style="color:#569CD6;">&quot;</span> <span style="color:#92CAF4;">order</span><span style="color:#808080;">=</span><span style="color:#569CD6;">&quot;</span><span style="color:#569CD6;">5</span><span style="color:#569CD6;">&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#808080;">&lt;/</span><span style="color:#E6E6E6;">element</span><span style="color:#808080;">&gt;</span>
<span style="color:#808080;">&lt;</span><span style="color:#E6E6E6;">element</span> <span style="color:#92CAF4;">name</span><span style="color:#808080;">=</span><span style="color:#569CD6;">&quot;</span><span style="color:#569CD6;">Field</span><span style="color:#569CD6;">&quot;</span> <span style="color:#92CAF4;">order</span><span style="color:#808080;">=</span><span style="color:#569CD6;">&quot;</span><span style="color:#569CD6;">6</span><span style="color:#569CD6;">&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#808080;">&lt;/</span><span style="color:#E6E6E6;">element</span><span style="color:#808080;">&gt;</span>
<span style="color:#808080;">&lt;</span><span style="color:#E6E6E6;">element</span> <span style="color:#92CAF4;">name</span><span style="color:#808080;">=</span><span style="color:#569CD6;">&quot;</span><span style="color:#569CD6;">Constructor</span><span style="color:#569CD6;">&quot;</span> <span style="color:#92CAF4;">order</span><span style="color:#808080;">=</span><span style="color:#569CD6;">&quot;</span><span style="color:#569CD6;">10</span><span style="color:#569CD6;">&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#808080;">&lt;/</span><span style="color:#E6E6E6;">element</span><span style="color:#808080;">&gt;</span>
<span style="color:#808080;">&lt;</span><span style="color:#E6E6E6;">element</span> <span style="color:#92CAF4;">name</span><span style="color:#808080;">=</span><span style="color:#569CD6;">&quot;</span><span style="color:#569CD6;">Destructor</span><span style="color:#569CD6;">&quot;</span> <span style="color:#92CAF4;">order</span><span style="color:#808080;">=</span><span style="color:#569CD6;">&quot;</span><span style="color:#569CD6;">11</span><span style="color:#569CD6;">&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#808080;">&lt;/</span><span style="color:#E6E6E6;">element</span><span style="color:#808080;">&gt;</span>
<span style="color:#808080;">&lt;</span><span style="color:#E6E6E6;">element</span> <span style="color:#92CAF4;">name</span><span style="color:#808080;">=</span><span style="color:#569CD6;">&quot;</span><span style="color:#569CD6;">Delegate</span><span style="color:#569CD6;">&quot;</span> <span style="color:#92CAF4;">order</span><span style="color:#808080;">=</span><span style="color:#569CD6;">&quot;</span><span style="color:#569CD6;">8</span><span style="color:#569CD6;">&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#808080;">&lt;/</span><span style="color:#E6E6E6;">element</span><span style="color:#808080;">&gt;</span>
<span style="color:#808080;">&lt;</span><span style="color:#E6E6E6;">element</span> <span style="color:#92CAF4;">name</span><span style="color:#808080;">=</span><span style="color:#569CD6;">&quot;</span><span style="color:#569CD6;">Event</span><span style="color:#569CD6;">&quot;</span> <span style="color:#92CAF4;">order</span><span style="color:#808080;">=</span><span style="color:#569CD6;">&quot;</span><span style="color:#569CD6;">9</span><span style="color:#569CD6;">&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#808080;">&lt;/</span><span style="color:#E6E6E6;">element</span><span style="color:#808080;">&gt;</span>
<span style="color:#808080;">&lt;</span><span style="color:#E6E6E6;">element</span> <span style="color:#92CAF4;">name</span><span style="color:#808080;">=</span><span style="color:#569CD6;">&quot;</span><span style="color:#569CD6;">Enum</span><span style="color:#569CD6;">&quot;</span> <span style="color:#92CAF4;">order</span><span style="color:#808080;">=</span><span style="color:#569CD6;">&quot;</span><span style="color:#569CD6;">13</span><span style="color:#569CD6;">&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#808080;">&lt;/</span><span style="color:#E6E6E6;">element</span><span style="color:#808080;">&gt;</span>
<span style="color:#808080;">&lt;</span><span style="color:#E6E6E6;">element</span> <span style="color:#92CAF4;">name</span><span style="color:#808080;">=</span><span style="color:#569CD6;">&quot;</span><span style="color:#569CD6;">Interface</span><span style="color:#569CD6;">&quot;</span> <span style="color:#92CAF4;">order</span><span style="color:#808080;">=</span><span style="color:#569CD6;">&quot;</span><span style="color:#569CD6;">14</span><span style="color:#569CD6;">&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#808080;">&lt;/</span><span style="color:#E6E6E6;">element</span><span style="color:#808080;">&gt;</span>
<span style="color:#808080;">&lt;</span><span style="color:#E6E6E6;">element</span> <span style="color:#92CAF4;">name</span><span style="color:#808080;">=</span><span style="color:#569CD6;">&quot;</span><span style="color:#569CD6;">Property</span><span style="color:#569CD6;">&quot;</span> <span style="color:#92CAF4;">order</span><span style="color:#808080;">=</span><span style="color:#569CD6;">&quot;</span><span style="color:#569CD6;">7</span><span style="color:#569CD6;">&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#808080;">&lt;/</span><span style="color:#E6E6E6;">element</span><span style="color:#808080;">&gt;</span>
<span style="color:#808080;">&lt;</span><span style="color:#E6E6E6;">element</span> <span style="color:#92CAF4;">name</span><span style="color:#808080;">=</span><span style="color:#569CD6;">&quot;</span><span style="color:#569CD6;">Accessor</span><span style="color:#569CD6;">&quot;</span> <span style="color:#92CAF4;">order</span><span style="color:#808080;">=</span><span style="color:#569CD6;">&quot;</span><span style="color:#569CD6;">15</span><span style="color:#569CD6;">&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#808080;">&lt;/</span><span style="color:#E6E6E6;">element</span><span style="color:#808080;">&gt;</span>
<span style="color:#808080;">&lt;</span><span style="color:#E6E6E6;">element</span> <span style="color:#92CAF4;">name</span><span style="color:#808080;">=</span><span style="color:#569CD6;">&quot;</span><span style="color:#569CD6;">Indexer</span><span style="color:#569CD6;">&quot;</span> <span style="color:#92CAF4;">order</span><span style="color:#808080;">=</span><span style="color:#569CD6;">&quot;</span><span style="color:#569CD6;">16</span><span style="color:#569CD6;">&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#808080;">&lt;/</span><span style="color:#E6E6E6;">element</span><span style="color:#808080;">&gt;</span>
<span style="color:#808080;">&lt;</span><span style="color:#E6E6E6;">element</span> <span style="color:#92CAF4;">name</span><span style="color:#808080;">=</span><span style="color:#569CD6;">&quot;</span><span style="color:#569CD6;">Method</span><span style="color:#569CD6;">&quot;</span> <span style="color:#92CAF4;">order</span><span style="color:#808080;">=</span><span style="color:#569CD6;">&quot;</span><span style="color:#569CD6;">12</span><span style="color:#569CD6;">&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#808080;">&lt;/</span><span style="color:#E6E6E6;">element</span><span style="color:#808080;">&gt;</span>
<span style="color:#808080;">&lt;</span><span style="color:#E6E6E6;">element</span> <span style="color:#92CAF4;">name</span><span style="color:#808080;">=</span><span style="color:#569CD6;">&quot;</span><span style="color:#569CD6;">Struct</span><span style="color:#569CD6;">&quot;</span> <span style="color:#92CAF4;">order</span><span style="color:#808080;">=</span><span style="color:#569CD6;">&quot;</span><span style="color:#569CD6;">17</span><span style="color:#569CD6;">&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#808080;">&lt;/</span><span style="color:#E6E6E6;">element</span><span style="color:#808080;">&gt;</span>
<span style="color:#808080;">&lt;</span><span style="color:#E6E6E6;">element</span> <span style="color:#92CAF4;">name</span><span style="color:#808080;">=</span><span style="color:#569CD6;">&quot;</span><span style="color:#569CD6;">EnumItem</span><span style="color:#569CD6;">&quot;</span> <span style="color:#92CAF4;">order</span><span style="color:#808080;">=</span><span style="color:#569CD6;">&quot;</span><span style="color:#569CD6;">18</span><span style="color:#569CD6;">&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#808080;">&lt;/</span><span style="color:#E6E6E6;">element</span><span style="color:#808080;">&gt;</span>
<span style="color:#808080;">&lt;</span><span style="color:#E6E6E6;">element</span> <span style="color:#92CAF4;">name</span><span style="color:#808080;">=</span><span style="color:#569CD6;">&quot;</span><span style="color:#569CD6;">ConstructorInitializer</span><span style="color:#569CD6;">&quot;</span> <span style="color:#92CAF4;">order</span><span style="color:#808080;">=</span><span style="color:#569CD6;">&quot;</span><span style="color:#569CD6;">19</span><span style="color:#569CD6;">&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#808080;">&lt;/</span><span style="color:#E6E6E6;">element</span><span style="color:#808080;">&gt;</span>
<span style="color:#808080;">&lt;</span><span style="color:#E6E6E6;">element</span> <span style="color:#92CAF4;">name</span><span style="color:#808080;">=</span><span style="color:#569CD6;">&quot;</span><span style="color:#569CD6;">EmptyElement</span><span style="color:#569CD6;">&quot;</span> <span style="color:#92CAF4;">order</span><span style="color:#808080;">=</span><span style="color:#569CD6;">&quot;</span><span style="color:#569CD6;">20</span><span style="color:#569CD6;">&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#808080;">&lt;/</span><span style="color:#E6E6E6;">element</span><span style="color:#808080;">&gt;</span>
</pre></div>
<p>It saves in configuration file, so it is possible to change it in any time.
Further the source code of my rule. You can see the original source code of SA1201 using the <a href="http://www.jetbrains.com/decompiler/">DotPeek</a> for example:</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">using</span> System;
<span style="color:#569CD6;">using</span> System.Collections.Generic;
<span style="color:#569CD6;">using</span> System.Globalization;
<span style="color:#569CD6;">using</span> System.Configuration;
<span style="color:#569CD6;">using</span> System.Linq;

<span style="color:#569CD6;">using</span> StyleCop;
<span style="color:#569CD6;">using</span> StyleCop.CSharp;
<span style="color:#569CD6;">using</span> System.Xml.Serialization;
<span style="color:#569CD6;">using</span> System.IO;


<span style="color:#569CD6;">namespace</span> Wsg.Rules
{
    <span style="color:#608B4E;">///</span> <span style="color:#608B4E;">&lt;summary&gt;</span>
    <span style="color:#608B4E;">///</span><span style="color:#608B4E;"> Wsg StyleCOp custom rules</span>
    <span style="color:#608B4E;">///</span> <span style="color:#608B4E;">&lt;/summary&gt;</span>
    [SourceAnalyzer(<span style="color:#569CD6;">typeof</span>(CsParser))]
    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">class</span> WsgStyleCopCustomRules : SourceAnalyzer
    {
        <span style="color:#569CD6;">private</span> Rule ws1000 = <span style="color:#569CD6;">null</span>;

        <span style="color:#569CD6;">public</span> Rule Ws1000
        {
            <span style="color:#569CD6;">get</span>
            {
                <span style="color:#569CD6;">if</span> (ws1000 == <span style="color:#569CD6;">null</span>)
                {
                    <span style="color:#569CD6;">lock</span> (ws1000)
                    {
                        <span style="color:#569CD6;">if</span> (ws1000 == <span style="color:#569CD6;">null</span>)
                        {
                            XmlSerializer serializer = <span style="color:#569CD6;">new</span> XmlSerializer(<span style="color:#569CD6;">typeof</span>(Rule));

                            TextReader tr = <span style="color:#569CD6;">new</span> StreamReader(Path.Combine(Path.GetDirectoryName(System.Reflection.Assembly.GetExecutingAssembly().Location), <span style="color:#D69D85;">&quot;WS1000.config&quot;</span>));
                            ws1000 = (Rule)serializer.Deserialize(tr);
                            tr.Close();
                        }
                    }
                }

                <span style="color:#569CD6;">return</span> ws1000;
            }
        }

        <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">override</span> <span style="color:#569CD6;">void</span> AnalyzeDocument(CodeDocument document)
        {
            Param.RequireNotNull((<span style="color:#569CD6;">object</span>)document, <span style="color:#D69D85;">&quot;document&quot;</span>);
            CsDocument csDocument = (CsDocument)document;
            <span style="color:#569CD6;">if</span> (csDocument.RootElement == <span style="color:#569CD6;">null</span>)
                <span style="color:#569CD6;">return</span>;
            <span style="color:#569CD6;">bool</span> checkGeneratedCode = <span style="color:#569CD6;">true</span>;
            <span style="color:#569CD6;">if</span> (document.Settings != <span style="color:#569CD6;">null</span>)
            {
                BooleanProperty booleanProperty = <span style="color:#569CD6;">this</span>.GetSetting(document.Settings, <span style="color:#D69D85;">&quot;GeneratedCodeElementOrder&quot;</span>) <span style="color:#569CD6;">as</span> BooleanProperty;
                <span style="color:#569CD6;">if</span> (booleanProperty != <span style="color:#569CD6;">null</span>)
                    checkGeneratedCode = booleanProperty.Value;
                <span style="color:#569CD6;">this</span>.ProcessElements((CsElement)csDocument.RootElement, checkGeneratedCode);
            }
            <span style="color:#569CD6;">this</span>.CheckUsingDirectiveOrder((CsElement)csDocument.RootElement);
        }

        <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">override</span> <span style="color:#569CD6;">bool</span> DoAnalysis(CodeDocument document)
        {
            Param.RequireNotNull((<span style="color:#569CD6;">object</span>)document, <span style="color:#D69D85;">&quot;document&quot;</span>);
            CsDocument csDocument = (CsDocument)document;
            <span style="color:#569CD6;">if</span> (csDocument.FileHeader != <span style="color:#569CD6;">null</span>)
                <span style="color:#569CD6;">return</span> !csDocument.FileHeader.UnStyled;
            <span style="color:#569CD6;">else</span>
                <span style="color:#569CD6;">return</span> <span style="color:#569CD6;">true</span>;
        }

        <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">bool</span> ProcessElements(CsElement element, <span style="color:#569CD6;">bool</span> checkGeneratedCode)
        {
            <span style="color:#569CD6;">if</span> (<span style="color:#569CD6;">this</span>.Cancel)
                <span style="color:#569CD6;">return</span> <span style="color:#569CD6;">false</span>;
            <span style="color:#569CD6;">this</span>.CheckElementOrder(element, checkGeneratedCode);
            <span style="color:#569CD6;">return</span> <span style="color:#569CD6;">true</span>;
        }

        <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">void</span> CheckElementOrder(CsElement element, <span style="color:#569CD6;">bool</span> checkGeneratedCode)
        {
            <span style="color:#569CD6;">if</span> (!element.Generated &amp;&amp; (element.ElementType == ElementType.Class || element.ElementType == ElementType.Field || (element.ElementType == ElementType.Enum || element.ElementType == ElementType.Struct) || (element.ElementType == ElementType.Interface || element.ElementType == ElementType.Delegate || (element.ElementType == ElementType.Event || element.ElementType == ElementType.Property)) || (element.ElementType == ElementType.Indexer || element.ElementType == ElementType.Method || (element.ElementType == ElementType.Constructor || element.ElementType == ElementType.Accessor))))
                <span style="color:#569CD6;">this</span>.CheckDeclarationKeywordOrder(element);
            <span style="color:#569CD6;">this</span>.CheckUsingDirectivePlacement(element);
            <span style="color:#569CD6;">this</span>.CheckChildElementOrdering(element, checkGeneratedCode);
        }

        <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">void</span> CheckChildElementOrdering(CsElement element, <span style="color:#569CD6;">bool</span> checkGeneratedCode)
        {
            <span style="color:#569CD6;">if</span> (element.ChildElements.Count &lt;= <span style="color:#B5CEA8;">0</span>)
                <span style="color:#569CD6;">return</span>;
            <span style="color:#569CD6;">bool</span> flag = <span style="color:#569CD6;">true</span>;
            CsElement[] array = <span style="color:#569CD6;">new</span> CsElement[element.ChildElements.Count];
            element.ChildElements.CopyTo(array, <span style="color:#B5CEA8;">0</span>);
            <span style="color:#569CD6;">for</span> (<span style="color:#569CD6;">int</span> index1 = <span style="color:#B5CEA8;">0</span>; index1 &lt; array.Length; ++index1)
            {
                CsElement csElement = array[index1];

                <span style="color:#569CD6;">for</span> (<span style="color:#569CD6;">int</span> index2 = index1 + <span style="color:#B5CEA8;">1</span>; index2 &lt; array.Length; ++index2)
                {
                    CsElement second = array[index2];
                    <span style="color:#569CD6;">if</span> ((checkGeneratedCode &amp;&amp; (!csElement.Generated || !second.Generated) || !checkGeneratedCode &amp;&amp; !csElement.Generated &amp;&amp; !second.Generated))
                    {
                        <span style="color:#569CD6;">if</span> (!<span style="color:#569CD6;">this</span>.CompareItems(csElement, second, !flag))
                        {
                            <span style="color:#569CD6;">if</span> (flag)
                                csElement.AnalyzerTag = (<span style="color:#569CD6;">object</span>)<span style="color:#569CD6;">false</span>;
                            <span style="color:#569CD6;">else</span>
                                second.AnalyzerTag = (<span style="color:#569CD6;">object</span>)<span style="color:#569CD6;">false</span>;
                        }
                        <span style="color:#569CD6;">else</span> <span style="color:#569CD6;">if</span> (flag)
                            flag = <span style="color:#569CD6;">false</span>;
                        <span style="color:#569CD6;">if</span> (csElement.ElementType == ElementType.Accessor &amp;&amp; second.ElementType == ElementType.Accessor)
                        {
                            Accessor accessor1 = (Accessor)csElement;
                            Accessor accessor2 = (Accessor)second;
                            <span style="color:#569CD6;">if</span> (accessor1.AccessorType == AccessorType.Set &amp;&amp; accessor2.AccessorType == AccessorType.Get)
                                <span style="color:#569CD6;">this</span>.AddViolation((ICodeElement)csElement, <span style="color:#D69D85;">&quot;PropertyAccessorsMustFollowOrder&quot;</span>, <span style="color:#569CD6;">new</span> <span style="color:#569CD6;">object</span>[<span style="color:#B5CEA8;">0</span>]);
                            <span style="color:#569CD6;">else</span> <span style="color:#569CD6;">if</span> (accessor1.AccessorType == AccessorType.Remove &amp;&amp; accessor2.AccessorType == AccessorType.Add)
                                <span style="color:#569CD6;">this</span>.AddViolation((ICodeElement)csElement, <span style="color:#D69D85;">&quot;EventAccessorsMustFollowOrder&quot;</span>, <span style="color:#569CD6;">new</span> <span style="color:#569CD6;">object</span>[<span style="color:#B5CEA8;">0</span>]);
                        }
                    }
                }

                <span style="color:#569CD6;">this</span>.CheckElementOrder(csElement, checkGeneratedCode);
            }
        }

        <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">bool</span> CompareElementType(ElementType first, ElementType second)
        {
            <span style="color:#569CD6;">if</span> (Ws1000 != <span style="color:#569CD6;">null</span>)
            {
                <span style="color:#569CD6;">return</span> Ws1000.Order.First(x =&gt; x.name == System.Enum.GetName(<span style="color:#569CD6;">typeof</span>(ElementType), first)).order &gt; Ws1000.Order.First(x =&gt; x.name == System.Enum.GetName(<span style="color:#569CD6;">typeof</span>(ElementType), second)).order;
            }
            <span style="color:#569CD6;">return</span> <span style="color:#569CD6;">false</span>;
        }

        <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">bool</span> CompareItems(CsElement first, CsElement second, <span style="color:#569CD6;">bool</span> foundFirst)
        {
            <span style="color:#569CD6;">if</span> (first.ElementType != ElementType.EmptyElement &amp;&amp; second.ElementType != ElementType.EmptyElement &amp;&amp; (first.ElementType != ElementType.Accessor || second.ElementType != ElementType.Accessor))
            {
                CsElement csElement1 = second;
                <span style="color:#569CD6;">if</span> (!foundFirst)
                    csElement1 = first;
                <span style="color:#569CD6;">if</span> (CompareElementType(first.ElementType, second.ElementType))
                {
                    <span style="color:#569CD6;">this</span>.AddViolation((ICodeElement)first, csElement1.LineNumber, <span style="color:#D69D85;">&quot;ElementsMustAppearInTheCorrectOrder&quot;</span>, (<span style="color:#569CD6;">object</span>)first.FriendlyPluralTypeText, (<span style="color:#569CD6;">object</span>)second.FriendlyPluralTypeText);
                    <span style="color:#569CD6;">return</span> <span style="color:#569CD6;">false</span>;
                }
                <span style="color:#569CD6;">else</span> <span style="color:#569CD6;">if</span> (first.ElementType == second.ElementType &amp;&amp; first.Declaration != <span style="color:#569CD6;">null</span> &amp;&amp; second.Declaration != <span style="color:#569CD6;">null</span>)
                {
                    <span style="color:#569CD6;">if</span> (first.Declaration.AccessModifierType &lt; second.Declaration.AccessModifierType)
                    {
                        <span style="color:#569CD6;">if</span> (first.ElementType == ElementType.Constructor &amp;&amp; second.ElementType == ElementType.Constructor)
                        {
                            <span style="color:#569CD6;">if</span> (first.Declaration.ContainsModifier(<span style="color:#569CD6;">new</span> CsTokenType[<span style="color:#B5CEA8;">1</span>] { CsTokenType.Static}))
                            {
                                <span style="color:#569CD6;">if</span> (!second.Declaration.ContainsModifier(<span style="color:#569CD6;">new</span> CsTokenType[<span style="color:#B5CEA8;">1</span>] { CsTokenType.Static}))
                                    <span style="color:#569CD6;">goto</span> label_31;
                            }
                        }
                        <span style="color:#569CD6;">if</span> (!first.Declaration.AccessModifier &amp;&amp; first.ElementType != ElementType.Method)
                        {
                            <span style="color:#569CD6;">if</span> (first.Declaration.ContainsModifier(<span style="color:#569CD6;">new</span> CsTokenType[<span style="color:#B5CEA8;">1</span>] {CsTokenType.Partial}))
                                <span style="color:#569CD6;">goto</span> label_14;
                        }
                        <span style="color:#569CD6;">if</span> (!second.Declaration.AccessModifier &amp;&amp; second.ElementType != ElementType.Method)
                        {
                            <span style="color:#569CD6;">if</span> (second.Declaration.ContainsModifier(<span style="color:#569CD6;">new</span> CsTokenType[<span style="color:#B5CEA8;">1</span>] { CsTokenType.Partial }))
                                <span style="color:#569CD6;">goto</span> label_14;
                        }
                        <span style="color:#569CD6;">this</span>.AddViolation((ICodeElement)first, csElement1.LineNumber, <span style="color:#D69D85;">&quot;ElementsMustBeOrderedByAccess&quot;</span>, (<span style="color:#569CD6;">object</span>)WsgStyleCopCustomRules.AccessModifierTypeString(first.Declaration.AccessModifierType), (<span style="color:#569CD6;">object</span>)first.FriendlyPluralTypeText, (<span style="color:#569CD6;">object</span>)WsgStyleCopCustomRules.AccessModifierTypeString(second.Declaration.AccessModifierType), (<span style="color:#569CD6;">object</span>)second.FriendlyPluralTypeText);
                        <span style="color:#569CD6;">goto</span> label_19;
                    label_14:
                        CsElement csElement2 = first;
                        <span style="color:#569CD6;">if</span> (!first.Declaration.AccessModifier)
                        {
                            <span style="color:#569CD6;">if</span> (first.Declaration.ContainsModifier(<span style="color:#569CD6;">new</span> CsTokenType[<span style="color:#B5CEA8;">1</span>]{  CsTokenType.Partial}))
                                <span style="color:#569CD6;">goto</span> label_17;
                        }
                        csElement2 = second;
                    label_17:
                        <span style="color:#569CD6;">this</span>.AddViolation((ICodeElement)csElement2, <span style="color:#D69D85;">&quot;PartialElementsMustDeclareAccess&quot;</span>, <span style="color:#569CD6;">new</span> <span style="color:#569CD6;">object</span>[<span style="color:#B5CEA8;">2</span>]
                                                    {
                                                      (<span style="color:#569CD6;">object</span>) csElement2.FriendlyTypeText,
                                                      (<span style="color:#569CD6;">object</span>) csElement2.FriendlyPluralTypeText
                                                    });
                    label_19:
                        <span style="color:#569CD6;">return</span> <span style="color:#569CD6;">false</span>;
                    }
                    <span style="color:#569CD6;">else</span> <span style="color:#569CD6;">if</span> (first.Declaration.AccessModifierType == second.Declaration.AccessModifierType)
                    {
                        <span style="color:#569CD6;">bool</span> flag1 = <span style="color:#569CD6;">false</span>;
                        <span style="color:#569CD6;">bool</span> flag2 = <span style="color:#569CD6;">false</span>;
                        Field field1 = first <span style="color:#569CD6;">as</span> Field;
                        Field field2 = second <span style="color:#569CD6;">as</span> Field;
                        <span style="color:#569CD6;">if</span> (field1 != <span style="color:#569CD6;">null</span> &amp;&amp; field2 != <span style="color:#569CD6;">null</span>)
                        {
                            flag1 = field1.Const;
                            flag2 = field1.Readonly;
                            <span style="color:#569CD6;">if</span> ((field2.Const || field2.Readonly) &amp;&amp; (!field1.Const &amp;&amp; !field1.Readonly))
                            {
                                <span style="color:#569CD6;">this</span>.AddViolation((ICodeElement)first, csElement1.LineNumber, <span style="color:#D69D85;">&quot;ConstantsMustAppearBeforeFields&quot;</span>, (<span style="color:#569CD6;">object</span>)WsgStyleCopCustomRules.AccessModifierTypeString(first.Declaration.AccessModifierType), (<span style="color:#569CD6;">object</span>)first.FriendlyPluralTypeText, (<span style="color:#569CD6;">object</span>)WsgStyleCopCustomRules.AccessModifierTypeString(second.Declaration.AccessModifierType), (<span style="color:#569CD6;">object</span>)second.FriendlyPluralTypeText);
                                <span style="color:#569CD6;">return</span> <span style="color:#569CD6;">false</span>;
                            }
                        }
                        <span style="color:#569CD6;">if</span> (second.Declaration.ContainsModifier(<span style="color:#569CD6;">new</span> CsTokenType[<span style="color:#B5CEA8;">1</span>] {  CsTokenType.Static }))
                        {
                            <span style="color:#569CD6;">if</span> (!first.Declaration.ContainsModifier(<span style="color:#569CD6;">new</span> CsTokenType[<span style="color:#B5CEA8;">1</span>] { CsTokenType.Static}) &amp;&amp; !flag1 &amp;&amp; !flag2)
                            {
                                <span style="color:#569CD6;">this</span>.AddViolation((ICodeElement)first, csElement1.LineNumber, <span style="color:#D69D85;">&quot;StaticElementsMustAppearBeforeInstanceElements&quot;</span>, (<span style="color:#569CD6;">object</span>)WsgStyleCopCustomRules.AccessModifierTypeString(first.Declaration.AccessModifierType), (<span style="color:#569CD6;">object</span>)first.FriendlyPluralTypeText, (<span style="color:#569CD6;">object</span>)WsgStyleCopCustomRules.AccessModifierTypeString(second.Declaration.AccessModifierType), (<span style="color:#569CD6;">object</span>)second.FriendlyPluralTypeText);
                                <span style="color:#569CD6;">return</span> <span style="color:#569CD6;">false</span>;
                            }
                        }
                        <span style="color:#569CD6;">if</span> (first.Declaration.ElementType != ElementType.UsingDirective &amp;&amp; second.Declaration.ElementType != ElementType.UsingDirective)
                        {
                            <span style="color:#569CD6;">if</span> (<span style="color:#569CD6;">string</span>.Compare(first.Declaration.Name, second.Declaration.Name) &gt; <span style="color:#B5CEA8;">0</span>)
                            {
                                <span style="color:#569CD6;">this</span>.AddViolation((ICodeElement)first, csElement1.LineNumber, <span style="color:#D69D85;">&quot;UsingNamesMustBeOrderedAlphabetically&quot;</span>, (<span style="color:#569CD6;">object</span>)WsgStyleCopCustomRules.AccessModifierTypeString(first.Declaration.AccessModifierType), (<span style="color:#569CD6;">object</span>)first.FriendlyPluralTypeText, (<span style="color:#569CD6;">object</span>)WsgStyleCopCustomRules.AccessModifierTypeString(second.Declaration.AccessModifierType), (<span style="color:#569CD6;">object</span>)second.FriendlyPluralTypeText);
                                <span style="color:#569CD6;">return</span> <span style="color:#569CD6;">false</span>;
                            }
                        }
                    }
                    <span style="color:#569CD6;">else</span> <span style="color:#569CD6;">if</span> (first.ElementType == ElementType.Constructor &amp;&amp; second.ElementType == ElementType.Constructor)
                    {
                        <span style="color:#569CD6;">if</span> (second.Declaration.ContainsModifier(<span style="color:#569CD6;">new</span> CsTokenType[<span style="color:#B5CEA8;">1</span>] { CsTokenType.Static }))
                        {
                            <span style="color:#569CD6;">if</span> (!first.Declaration.ContainsModifier(<span style="color:#569CD6;">new</span> CsTokenType[<span style="color:#B5CEA8;">1</span>]{ CsTokenType.Static}))
                            {
                                <span style="color:#569CD6;">this</span>.AddViolation((ICodeElement)first, csElement1.LineNumber, <span style="color:#D69D85;">&quot;StaticElementsMustAppearBeforeInstanceElements&quot;</span>, (<span style="color:#569CD6;">object</span>)WsgStyleCopCustomRules.AccessModifierTypeString(first.Declaration.AccessModifierType), (<span style="color:#569CD6;">object</span>)first.FriendlyPluralTypeText, (<span style="color:#569CD6;">object</span>)WsgStyleCopCustomRules.AccessModifierTypeString(second.Declaration.AccessModifierType), (<span style="color:#569CD6;">object</span>)second.FriendlyPluralTypeText);
                                <span style="color:#569CD6;">return</span> <span style="color:#569CD6;">false</span>;
                            }
                        }
                    }
                }
            }
        label_31:
            <span style="color:#569CD6;">return</span> <span style="color:#569CD6;">true</span>;
        }

        <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">static</span> <span style="color:#569CD6;">string</span> AccessModifierTypeString(AccessModifierType type)
        {
            <span style="color:#569CD6;">switch</span> (type)
            {
                <span style="color:#569CD6;">case</span> AccessModifierType.Public:
                    <span style="color:#569CD6;">return</span> <span style="color:#D69D85;">&quot;public&quot;</span>;
                <span style="color:#569CD6;">case</span> AccessModifierType.Internal:
                    <span style="color:#569CD6;">return</span> <span style="color:#D69D85;">&quot;internal&quot;</span>;
                <span style="color:#569CD6;">case</span> AccessModifierType.ProtectedInternal:
                    <span style="color:#569CD6;">return</span> <span style="color:#D69D85;">&quot;protected internal&quot;</span>;
                <span style="color:#569CD6;">case</span> AccessModifierType.Protected:
                    <span style="color:#569CD6;">return</span> <span style="color:#D69D85;">&quot;protected&quot;</span>;
                <span style="color:#569CD6;">case</span> AccessModifierType.Private:
                    <span style="color:#569CD6;">return</span> <span style="color:#D69D85;">&quot;private&quot;</span>;
                <span style="color:#569CD6;">default</span>:
                    <span style="color:#569CD6;">throw</span> <span style="color:#569CD6;">new</span> InvalidOperationException();
            }
        }

        <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">void</span> CheckUsingDirectivePlacement(CsElement element)
        {
            <span style="color:#569CD6;">if</span> (element.Generated || element.ElementType != ElementType.UsingDirective)
                <span style="color:#569CD6;">return</span>;
            CsElement parentElement = ICodePartExtensions.FindParentElement((ICodePart)element);
            <span style="color:#569CD6;">if</span> (parentElement == <span style="color:#569CD6;">null</span>)
                <span style="color:#569CD6;">return</span>;
            <span style="color:#569CD6;">if</span> (parentElement.ElementType != ElementType.Root)
            {
                <span style="color:#569CD6;">this</span>.AddViolation((ICodeElement)element, <span style="color:#D69D85;">&quot;UsingDirectivesMustBePlacedWithoutNamespace&quot;</span>, <span style="color:#569CD6;">new</span> <span style="color:#569CD6;">object</span>[<span style="color:#B5CEA8;">0</span>]);
            }
        }

        <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">void</span> CheckDeclarationKeywordOrder(CsElement element)
        {
            <span style="color:#569CD6;">int</span> num1 = -<span style="color:#B5CEA8;">1</span>;
            <span style="color:#569CD6;">int</span> num2 = -<span style="color:#B5CEA8;">1</span>;
            <span style="color:#569CD6;">int</span> num3 = -<span style="color:#B5CEA8;">1</span>;
            <span style="color:#569CD6;">int</span> num4 = <span style="color:#B5CEA8;">0</span>;
            <span style="color:#569CD6;">foreach</span> (CsToken csToken <span style="color:#569CD6;">in</span> (ItemList&lt;CsToken&gt;)element.Declaration.Tokens)
            {
                <span style="color:#569CD6;">switch</span> (csToken.CsTokenType)
                {
                    <span style="color:#569CD6;">case</span> CsTokenType.Private:
                    <span style="color:#569CD6;">case</span> CsTokenType.Public:
                    <span style="color:#569CD6;">case</span> CsTokenType.Protected:
                    <span style="color:#569CD6;">case</span> CsTokenType.Internal:
                        <span style="color:#569CD6;">if</span> (num1 == -<span style="color:#B5CEA8;">1</span>)
                        {
                            num1 = num4++;
                            <span style="color:#569CD6;">continue</span>;
                        }
                        <span style="color:#569CD6;">else</span>
                            <span style="color:#569CD6;">continue</span>;
                    <span style="color:#569CD6;">case</span> CsTokenType.Static:
                        <span style="color:#569CD6;">if</span> (num2 == -<span style="color:#B5CEA8;">1</span>)
                        {
                            num2 = num4++;
                            <span style="color:#569CD6;">continue</span>;
                        }
                        <span style="color:#569CD6;">else</span>
                            <span style="color:#569CD6;">continue</span>;
                    <span style="color:#569CD6;">case</span> CsTokenType.WhiteSpace:
                    <span style="color:#569CD6;">case</span> CsTokenType.EndOfLine:
                    <span style="color:#569CD6;">case</span> CsTokenType.SingleLineComment:
                    <span style="color:#569CD6;">case</span> CsTokenType.MultiLineComment:
                        <span style="color:#569CD6;">continue</span>;
                    <span style="color:#569CD6;">default</span>:
                        <span style="color:#569CD6;">if</span> (num3 == -<span style="color:#B5CEA8;">1</span>)
                        {
                            num3 = num4++;
                            <span style="color:#569CD6;">continue</span>;
                        }
                        <span style="color:#569CD6;">else</span>
                            <span style="color:#569CD6;">continue</span>;
                }
            }
            <span style="color:#569CD6;">if</span> (num1 != -<span style="color:#B5CEA8;">1</span>)
            {
                <span style="color:#569CD6;">if</span> (num2 &gt; -<span style="color:#B5CEA8;">1</span> &amp;&amp; num2 &lt; num1)
                {
                    WsgStyleCopCustomRules orderingRules = <span style="color:#569CD6;">this</span>;
                    CsElement csElement = element;
                    <span style="color:#57A64A;">// ISSUE: variable of a boxed type</span>
                    <span style="color:#569CD6;">var</span> local = <span style="color:#D69D85;">&quot;DeclarationKeywordsMustFollowOrder&quot;</span>;
                    <span style="color:#569CD6;">object</span>[] objArray1 = <span style="color:#569CD6;">new</span> <span style="color:#569CD6;">object</span>[<span style="color:#B5CEA8;">2</span>] {(<span style="color:#569CD6;">object</span>) <span style="color:#D69D85;">&quot;AccessModifier&quot;</span>, <span style="color:#569CD6;">null</span>};
                    objArray1[<span style="color:#B5CEA8;">1</span>] = (<span style="color:#569CD6;">object</span>)<span style="color:#569CD6;">string</span>.Format((IFormatProvider)CultureInfo.InvariantCulture, <span style="color:#D69D85;">&quot;&#39;{0}&#39;&quot;</span>, <span style="color:#569CD6;">new</span> <span style="color:#569CD6;">object</span>[<span style="color:#B5CEA8;">1</span>] { (<span style="color:#569CD6;">object</span>) <span style="color:#D69D85;">&quot;Static&quot;</span> });
                    <span style="color:#569CD6;">object</span>[] objArray2 = objArray1;
                    orderingRules.AddViolation((ICodeElement)csElement, local, objArray2);
                }
                <span style="color:#569CD6;">if</span> (num3 &gt; -<span style="color:#B5CEA8;">1</span> &amp;&amp; num3 &lt; num1)
                {
                    WsgStyleCopCustomRules orderingRules = <span style="color:#569CD6;">this</span>;
                    CsElement csElement = element;
                    <span style="color:#57A64A;">// ISSUE: variable of a boxed type</span>
                    <span style="color:#569CD6;">var</span> local = <span style="color:#D69D85;">&quot;DeclarationKeywordsMustFollowOrder&quot;</span>;
                    <span style="color:#569CD6;">object</span>[] objArray1 = <span style="color:#569CD6;">new</span> <span style="color:#569CD6;">object</span>[<span style="color:#B5CEA8;">2</span>] { (<span style="color:#569CD6;">object</span>)<span style="color:#D69D85;">&quot;AccessModifier&quot;</span>, <span style="color:#569CD6;">null</span> };
                    objArray1[<span style="color:#B5CEA8;">1</span>] = (<span style="color:#569CD6;">object</span>)<span style="color:#569CD6;">string</span>.Format((IFormatProvider)CultureInfo.InvariantCulture, <span style="color:#D69D85;">&quot;&#39;{0}&#39;&quot;</span>, <span style="color:#569CD6;">new</span> <span style="color:#569CD6;">object</span>[<span style="color:#B5CEA8;">1</span>] { (<span style="color:#569CD6;">object</span>) <span style="color:#D69D85;">&quot;Other&quot;</span> });
                    <span style="color:#569CD6;">object</span>[] objArray2 = objArray1;
                    orderingRules.AddViolation((ICodeElement)csElement, local, objArray2);
                }
            }
            <span style="color:#569CD6;">if</span> (num2 &gt; -<span style="color:#B5CEA8;">1</span> &amp;&amp; num3 &gt; -<span style="color:#B5CEA8;">1</span> &amp;&amp; num3 &lt; num2)
                <span style="color:#569CD6;">this</span>.AddViolation((ICodeElement)element, <span style="color:#D69D85;">&quot;DeclarationKeywordsMustFollowOrder&quot;</span>, <span style="color:#569CD6;">new</span> <span style="color:#569CD6;">object</span>[<span style="color:#B5CEA8;">2</span>] {
                      (<span style="color:#569CD6;">object</span>) <span style="color:#569CD6;">string</span>.Format((IFormatProvider) CultureInfo.InvariantCulture, <span style="color:#D69D85;">&quot;&#39;{0}&#39;&quot;</span>, <span style="color:#569CD6;">new</span> <span style="color:#569CD6;">object</span>[<span style="color:#B5CEA8;">1</span>]
                      {
                        (<span style="color:#569CD6;">object</span>) <span style="color:#D69D85;">&quot;Static&quot;</span>
                      }),
                      (<span style="color:#569CD6;">object</span>) <span style="color:#569CD6;">string</span>.Format((IFormatProvider) CultureInfo.InvariantCulture, <span style="color:#D69D85;">&quot;&#39;{0}&#39;&quot;</span>, <span style="color:#569CD6;">new</span> <span style="color:#569CD6;">object</span>[<span style="color:#B5CEA8;">1</span>]
                      {
                        (<span style="color:#569CD6;">object</span>) <span style="color:#D69D85;">&quot;Other&quot;</span>
                      })
                    });
            <span style="color:#569CD6;">if</span> (element.Declaration.AccessModifierType != AccessModifierType.ProtectedInternal)
                <span style="color:#569CD6;">return</span>;
            <span style="color:#569CD6;">bool</span> flag = <span style="color:#569CD6;">false</span>;
            <span style="color:#569CD6;">foreach</span> (CsToken csToken <span style="color:#569CD6;">in</span> (ItemList&lt;CsToken&gt;)element.Declaration.Tokens)
            {
                <span style="color:#569CD6;">if</span> (flag)
                {
                    <span style="color:#569CD6;">if</span> (csToken.CsTokenType == CsTokenType.Internal)
                        <span style="color:#569CD6;">break</span>;
                    <span style="color:#569CD6;">if</span> (csToken.CsTokenType != CsTokenType.WhiteSpace)
                    {
                        <span style="color:#569CD6;">this</span>.AddViolation((ICodeElement)element, <span style="color:#D69D85;">&quot;ProtectedMustComeBeforeInternal&quot;</span>, <span style="color:#569CD6;">new</span> <span style="color:#569CD6;">object</span>[<span style="color:#B5CEA8;">0</span>]);
                        <span style="color:#569CD6;">break</span>;
                    }
                }
                <span style="color:#569CD6;">else</span> <span style="color:#569CD6;">if</span> (csToken.CsTokenType == CsTokenType.Protected)
                    flag = <span style="color:#569CD6;">true</span>;
                <span style="color:#569CD6;">else</span> <span style="color:#569CD6;">if</span> (csToken.CsTokenType == CsTokenType.Internal)
                {
                    <span style="color:#569CD6;">this</span>.AddViolation((ICodeElement)element, <span style="color:#D69D85;">&quot;ProtectedMustComeBeforeInternal&quot;</span>, <span style="color:#569CD6;">new</span> <span style="color:#569CD6;">object</span>[<span style="color:#B5CEA8;">0</span>]);
                    <span style="color:#569CD6;">break</span>;
                }
            }
        }

        <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">void</span> CheckUsingDirectiveOrder(CsElement rootElement)
        {
            <span style="color:#569CD6;">if</span> (rootElement.Generated)
                <span style="color:#569CD6;">return</span>;
            <span style="color:#569CD6;">this</span>.CheckOrderOfUsingDirectivesUnderElement(rootElement);
            <span style="color:#569CD6;">foreach</span> (CsElement rootElement1 <span style="color:#569CD6;">in</span> (IEnumerable&lt;CsElement&gt;)rootElement.ChildElements)
            {
                <span style="color:#569CD6;">if</span> (rootElement1.ElementType == ElementType.Namespace)
                    <span style="color:#569CD6;">this</span>.CheckUsingDirectiveOrder(rootElement1);
            }
        }

        <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">void</span> CheckOrderOfUsingDirectivesUnderElement(CsElement element)
        {
            List&lt;UsingDirective&gt; usings = (List&lt;UsingDirective&gt;)<span style="color:#569CD6;">null</span>;
            <span style="color:#569CD6;">foreach</span> (CsElement csElement <span style="color:#569CD6;">in</span> (IEnumerable&lt;CsElement&gt;)element.ChildElements)
            {
                <span style="color:#569CD6;">if</span> (csElement.ElementType == ElementType.UsingDirective)
                {
                    <span style="color:#569CD6;">if</span> (usings == <span style="color:#569CD6;">null</span>)
                        usings = <span style="color:#569CD6;">new</span> List&lt;UsingDirective&gt;();
                    usings.Add((UsingDirective)csElement);
                }
                <span style="color:#569CD6;">else</span> <span style="color:#569CD6;">if</span> (csElement.ElementType != ElementType.ExternAliasDirective)
                    <span style="color:#569CD6;">break</span>;
            }
            <span style="color:#569CD6;">if</span> (usings == <span style="color:#569CD6;">null</span>)
                <span style="color:#569CD6;">return</span>;
            <span style="color:#569CD6;">this</span>.CheckOrderOfUsingDirectivesInList(usings);
        }

        <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">void</span> CheckOrderOfUsingDirectivesInList(List&lt;UsingDirective&gt; usings)
        {
            <span style="color:#569CD6;">for</span> (<span style="color:#569CD6;">int</span> index1 = <span style="color:#B5CEA8;">0</span>; index1 &lt; usings.Count; ++index1)
            {
                UsingDirective firstUsing = usings[index1];
                <span style="color:#569CD6;">for</span> (<span style="color:#569CD6;">int</span> index2 = index1 + <span style="color:#B5CEA8;">1</span>; index2 &lt; usings.Count; ++index2)
                {
                    UsingDirective secondUsing = usings[index2];
                    <span style="color:#569CD6;">if</span> (!<span style="color:#569CD6;">this</span>.CompareOrderOfUsingDirectives(firstUsing, secondUsing))
                        <span style="color:#569CD6;">break</span>;
                }
            }
        }

        <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">bool</span> CompareOrderOfUsingDirectives(UsingDirective firstUsing, UsingDirective secondUsing)
        {
            <span style="color:#569CD6;">if</span> (<span style="color:#569CD6;">string</span>.IsNullOrEmpty(firstUsing.Alias))
            {
                <span style="color:#569CD6;">if</span> (<span style="color:#569CD6;">string</span>.IsNullOrEmpty(secondUsing.Alias))
                {
                    <span style="color:#569CD6;">bool</span> flag1 = firstUsing.NamespaceType.StartsWith(<span style="color:#D69D85;">&quot;System&quot;</span>, StringComparison.Ordinal) || firstUsing.NamespaceType.StartsWith(<span style="color:#D69D85;">&quot;global::System&quot;</span>, StringComparison.Ordinal);
                    <span style="color:#569CD6;">bool</span> flag2 = secondUsing.NamespaceType.StartsWith(<span style="color:#D69D85;">&quot;System&quot;</span>, StringComparison.Ordinal) || secondUsing.NamespaceType.StartsWith(<span style="color:#D69D85;">&quot;global::System&quot;</span>, StringComparison.Ordinal);
                    <span style="color:#569CD6;">if</span> (flag2 &amp;&amp; !flag1)
                    {
                        <span style="color:#569CD6;">this</span>.AddViolation((ICodeElement)secondUsing, <span style="color:#D69D85;">&quot;SystemUsingDirectivesMustBePlacedBeforeOtherUsingDirectives&quot;</span>, <span style="color:#569CD6;">new</span> <span style="color:#569CD6;">object</span>[<span style="color:#B5CEA8;">0</span>]);
                        <span style="color:#569CD6;">return</span> <span style="color:#569CD6;">false</span>;
                    }
                    <span style="color:#569CD6;">else</span> <span style="color:#569CD6;">if</span> ((flag1 &amp;&amp; flag2 || !flag1 &amp;&amp; !flag2) &amp;&amp; !WsgStyleCopCustomRules.CheckNamespaceOrdering(firstUsing.NamespaceType, secondUsing.NamespaceType))
                    {
                        <span style="color:#569CD6;">this</span>.AddViolation((ICodeElement)firstUsing, <span style="color:#D69D85;">&quot;UsingDirectivesMustBeOrderedAlphabeticallyByNamespace&quot;</span>, <span style="color:#569CD6;">new</span> <span style="color:#569CD6;">object</span>[<span style="color:#B5CEA8;">0</span>]);
                        <span style="color:#569CD6;">return</span> <span style="color:#569CD6;">false</span>;
                    }
                }
            }
            <span style="color:#569CD6;">else</span> <span style="color:#569CD6;">if</span> (<span style="color:#569CD6;">string</span>.IsNullOrEmpty(secondUsing.Alias))
            {
                <span style="color:#569CD6;">this</span>.AddViolation((ICodeElement)firstUsing, <span style="color:#D69D85;">&quot;UsingAliasDirectivesMustBePlacedAfterOtherUsingDirectives&quot;</span>, <span style="color:#569CD6;">new</span> <span style="color:#569CD6;">object</span>[<span style="color:#B5CEA8;">0</span>]);
                <span style="color:#569CD6;">return</span> <span style="color:#569CD6;">false</span>;
            }
            <span style="color:#569CD6;">else</span> <span style="color:#569CD6;">if</span> (<span style="color:#569CD6;">string</span>.Compare(firstUsing.Alias, secondUsing.Alias, StringComparison.OrdinalIgnoreCase) &gt; <span style="color:#B5CEA8;">0</span>)
            {
                <span style="color:#569CD6;">this</span>.AddViolation((ICodeElement)firstUsing, <span style="color:#D69D85;">&quot;UsingAliasDirectivesMustBeOrderedAlphabeticallyByAliasName&quot;</span>, <span style="color:#569CD6;">new</span> <span style="color:#569CD6;">object</span>[<span style="color:#B5CEA8;">0</span>]);
                <span style="color:#569CD6;">return</span> <span style="color:#569CD6;">false</span>;
            }
            <span style="color:#569CD6;">return</span> <span style="color:#569CD6;">true</span>;
        }

        <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">static</span> <span style="color:#569CD6;">bool</span> CheckNamespaceOrdering(<span style="color:#569CD6;">string</span> namespace1, <span style="color:#569CD6;">string</span> namespace2)
        {
            <span style="color:#569CD6;">string</span>[] strArray1 = namespace1.Split(<span style="color:#569CD6;">new</span> <span style="color:#569CD6;">char</span>[<span style="color:#B5CEA8;">1</span>] {<span style="color:#D69D85;">&#39;.&#39;</span>});
            <span style="color:#569CD6;">string</span>[] strArray2 = namespace2.Split(<span style="color:#569CD6;">new</span> <span style="color:#569CD6;">char</span>[<span style="color:#B5CEA8;">1</span>] {<span style="color:#D69D85;">&#39;.&#39;</span>});
            strArray1[<span style="color:#B5CEA8;">0</span>] = StringExtensions.SubstringAfter(strArray1[<span style="color:#B5CEA8;">0</span>], <span style="color:#D69D85;">&quot;global::&quot;</span>, StringComparison.InvariantCulture);
            strArray2[<span style="color:#B5CEA8;">0</span>] = StringExtensions.SubstringAfter(strArray2[<span style="color:#B5CEA8;">0</span>], <span style="color:#D69D85;">&quot;global::&quot;</span>, StringComparison.InvariantCulture);
            <span style="color:#569CD6;">int</span> num1 = Math.Min(strArray1.Length, strArray2.Length);
            <span style="color:#569CD6;">for</span> (<span style="color:#569CD6;">int</span> index = <span style="color:#B5CEA8;">0</span>; index &lt; num1; ++index)
            {
                <span style="color:#569CD6;">int</span> num2 = <span style="color:#569CD6;">string</span>.Compare(strArray1[index], strArray2[index], StringComparison.InvariantCultureIgnoreCase);
                <span style="color:#569CD6;">if</span> (num2 &lt; <span style="color:#B5CEA8;">0</span>)
                    <span style="color:#569CD6;">return</span> <span style="color:#569CD6;">true</span>;
                <span style="color:#569CD6;">if</span> (num2 &gt; <span style="color:#B5CEA8;">0</span>)
                    <span style="color:#569CD6;">return</span> <span style="color:#569CD6;">false</span>;
                <span style="color:#569CD6;">int</span> num3 = <span style="color:#569CD6;">string</span>.Compare(strArray1[index], strArray2[index], StringComparison.InvariantCulture);
                <span style="color:#569CD6;">if</span> (num3 &lt; <span style="color:#B5CEA8;">0</span>)
                    <span style="color:#569CD6;">return</span> <span style="color:#569CD6;">true</span>;
                <span style="color:#569CD6;">if</span> (num3 &gt; <span style="color:#B5CEA8;">0</span>)
                    <span style="color:#569CD6;">return</span> <span style="color:#569CD6;">false</span>;
            }
            <span style="color:#569CD6;">if</span> (strArray1.Length == strArray2.Length)
                <span style="color:#569CD6;">return</span> <span style="color:#569CD6;">true</span>;
            <span style="color:#569CD6;">else</span>
                <span style="color:#569CD6;">return</span> strArray1.Length &lt; strArray2.Length;
        }
    }
}
</pre></div>
<p>Methods AnalyzeDocument и DoAnalysis are the most important, so i suggest to start the learning code from them. The project in VS2010 is StyleCopOrder.Thanks.</p>

"""""
),
            ["""2011-12-09-PowerShell-How-to"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 PowerShell How to
""""",
["""date"""] =
"""""
 2011-12-09
""""",
["""tags"""] =
"""""
 powershell
""""",
["""categories"""] =
"""""
 administration
""""",
 },
"""""
<ol start="0">
<li>How to delete all bin, obj folders?</li>
</ol>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#FFFF00;">Get-ChildItem</span> .\ <span style="color:#9B9B9B;">-include</span> bin<span style="color:#9B9B9B;">,</span>obj <span style="color:#9B9B9B;">-Recurse</span> <span style="color:#9B9B9B;">|</span> <span style="color:#569CD6;">foreach</span> (<span style="color:#FF4500;">$_</span>) { <span style="color:#FFFF00;">remove-item</span> <span style="color:#FF4500;">$_</span>.fullname <span style="color:#9B9B9B;">-Force</span> <span style="color:#9B9B9B;">-Recurse</span> }
</pre></div>
<ol>
<li>How to set folder's permission?</li>
</ol>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
 <span style="color:#57A64A;">#set owner and principals for %SystemRoot%\TEMP</span>
 <span style="color:#57A64A;">#http://channel9.msdn.com/Forums/Coffeehouse/Powershell-subinacl-ownership-of-directories</span>
 <span style="color:#FFFF00;">Write-Host</span> <span style="color:#9B9B9B;">-ForegroundColor</span> green <span style="color:#D69D85;">&quot;Set owner and principals for %SystemRoot%\TEMP&quot;</span>
 <span style="color:#FF4500;">$pathToSystemRoot</span> <span style="color:#9B9B9B;">=</span> <span style="color:#FFFF00;">get-content</span> env:systemroot
 <span style="color:#FF4500;">$currentUser</span> <span style="color:#9B9B9B;">=</span> <span style="color:#9B9B9B;">[</span><span style="color:#008080;">System.Security.Principal.WindowsIdentity</span><span style="color:#9B9B9B;">]</span><span style="color:#9B9B9B;">::</span>GetCurrent().Name
 <span style="color:#FF4500;">$Principal</span> <span style="color:#9B9B9B;">=</span> <span style="color:#FFFF00;">new-object</span> security.principal.ntaccount <span style="color:#FF4500;">$currentUser</span>
 <span style="color:#FF4500;">$path</span> <span style="color:#9B9B9B;">=</span> <span style="color:#FFFF00;">Join-Path</span> <span style="color:#FF4500;">$pathToSystemRoot</span> \temp

 <span style="color:#FF4500;">$code</span> <span style="color:#9B9B9B;">=</span> <span style="color:#D69D85;">@&quot;
using System;
using System.Runtime.InteropServices;

namespace WSG.Utils
{
public class PermissionsSetter
{

  [DllImport(&quot;advapi32.dll&quot;, ExactSpelling = true, SetLastError = true)]
  internal static extern bool AdjustTokenPrivileges(IntPtr htok, bool disall,
  ref TokPriv1Luid newst, int len, IntPtr prev, IntPtr relen);


  [DllImport(&quot;kernel32.dll&quot;, ExactSpelling = true)]
  internal static extern IntPtr GetCurrentProcess();


  [DllImport(&quot;advapi32.dll&quot;, ExactSpelling = true, SetLastError = true)]
  internal static extern bool OpenProcessToken(IntPtr h, int acc, ref IntPtr
  phtok);


  [DllImport(&quot;advapi32.dll&quot;, SetLastError = true)]
  internal static extern bool LookupPrivilegeValue(string host, string name,
  ref long pluid);


  [StructLayout(LayoutKind.Sequential, Pack = 1)]
  internal struct TokPriv1Luid
  {
   public int Count;
   public long Luid;
   public int Attr;
  }


  internal const int SE_PRIVILEGE_DISABLED = 0x00000000;
  internal const int SE_PRIVILEGE_ENABLED = 0x00000002;
  internal const int TOKEN_QUERY = 0x00000008;
  internal const int TOKEN_ADJUST_PRIVILEGES = 0x00000020;


  public const string SE_ASSIGNPRIMARYTOKEN_NAME = &quot;SeAssignPrimaryTokenPrivilege&quot;;
  public const string SE_AUDIT_NAME = &quot;SeAuditPrivilege&quot;;
  public const string SE_BACKUP_NAME = &quot;SeBackupPrivilege&quot;;
  public const string SE_CHANGE_NOTIFY_NAME = &quot;SeChangeNotifyPrivilege&quot;;
  public const string SE_CREATE_GLOBAL_NAME = &quot;SeCreateGlobalPrivilege&quot;;
  public const string SE_CREATE_PAGEFILE_NAME = &quot;SeCreatePagefilePrivilege&quot;;
  public const string SE_CREATE_PERMANENT_NAME = &quot;SeCreatePermanentPrivilege&quot;;
  public const string SE_CREATE_SYMBOLIC_LINK_NAME = &quot;SeCreateSymbolicLinkPrivilege&quot;;
  public const string SE_CREATE_TOKEN_NAME = &quot;SeCreateTokenPrivilege&quot;;
  public const string SE_DEBUG_NAME = &quot;SeDebugPrivilege&quot;;
  public const string SE_ENABLE_DELEGATION_NAME = &quot;SeEnableDelegationPrivilege&quot;;
  public const string SE_IMPERSONATE_NAME = &quot;SeImpersonatePrivilege&quot;;
  public const string SE_INC_BASE_PRIORITY_NAME = &quot;SeIncreaseBasePriorityPrivilege&quot;;
  public const string SE_INCREASE_QUOTA_NAME = &quot;SeIncreaseQuotaPrivilege&quot;;
  public const string SE_INC_WORKING_SET_NAME = &quot;SeIncreaseWorkingSetPrivilege&quot;;
  public const string SE_LOAD_DRIVER_NAME = &quot;SeLoadDriverPrivilege&quot;;
  public const string SE_LOCK_MEMORY_NAME = &quot;SeLockMemoryPrivilege&quot;;
  public const string SE_MACHINE_ACCOUNT_NAME = &quot;SeMachineAccountPrivilege&quot;;
  public const string SE_MANAGE_VOLUME_NAME = &quot;SeManageVolumePrivilege&quot;;
  public const string SE_PROF_SINGLE_PROCESS_NAME = &quot;SeProfileSingleProcessPrivilege&quot;;
  public const string SE_RELABEL_NAME = &quot;SeRelabelPrivilege&quot;;
  public const string SE_REMOTE_SHUTDOWN_NAME = &quot;SeRemoteShutdownPrivilege&quot;;
  public const string SE_RESTORE_NAME = &quot;SeRestorePrivilege&quot;;
  public const string SE_SECURITY_NAME = &quot;SeSecurityPrivilege&quot;;
  public const string SE_SHUTDOWN_NAME = &quot;SeShutdownPrivilege&quot;;
  public const string SE_SYNC_AGENT_NAME = &quot;SeSyncAgentPrivilege&quot;;
  public const string SE_SYSTEM_ENVIRONMENT_NAME = &quot;SeSystemEnvironmentPrivilege&quot;;
  public const string SE_SYSTEM_PROFILE_NAME = &quot;SeSystemProfilePrivilege&quot;;
  public const string SE_SYSTEMTIME_NAME = &quot;SeSystemtimePrivilege&quot;;
  public const string SE_TAKE_OWNERSHIP_NAME = &quot;SeTakeOwnershipPrivilege&quot;;
  public const string SE_TCB_NAME = &quot;SeTcbPrivilege&quot;;
  public const string SE_TIME_ZONE_NAME = &quot;SeTimeZonePrivilege&quot;;
  public const string SE_TRUSTED_CREDMAN_ACCESS_NAME = &quot;SeTrustedCredManAccessPrivilege&quot;;
  public const string SE_UNDOCK_NAME = &quot;SeUndockPrivilege&quot;;
  public const string SE_UNSOLICITED_INPUT_NAME = &quot;SeUnsolicitedInputPrivilege&quot;;


  public static bool AddPrivilege(string privilege)
  {
   try
   {
    bool retVal;
    TokPriv1Luid tp;
    IntPtr hproc = GetCurrentProcess();
    IntPtr htok = IntPtr.Zero;
    retVal = OpenProcessToken(hproc, TOKEN_ADJUST_PRIVILEGES | TOKEN_QUERY, ref htok);
    tp.Count = 1;
    tp.Luid = 0;
    tp.Attr = SE_PRIVILEGE_ENABLED;
    retVal = LookupPrivilegeValue(null, privilege, ref tp.Luid);
    retVal = AdjustTokenPrivileges(htok, false, ref tp, 0, IntPtr.Zero, IntPtr.Zero);
    return retVal;
   }
   catch (Exception ex)
   {
    throw ex;
   }


  }
  public static bool RemovePrivilege(string privilege)
  {
   try
   {
    bool retVal;
    TokPriv1Luid tp;
    IntPtr hproc = GetCurrentProcess();
    IntPtr htok = IntPtr.Zero;
    retVal = OpenProcessToken(hproc, TOKEN_ADJUST_PRIVILEGES | TOKEN_QUERY, ref htok);
    tp.Count = 1;
    tp.Luid = 0;
    tp.Attr = SE_PRIVILEGE_DISABLED;
    retVal = LookupPrivilegeValue(null, privilege, ref tp.Luid);
    retVal = AdjustTokenPrivileges(htok, false, ref tp, 0, IntPtr.Zero, IntPtr.Zero);
    return retVal;
   }
   catch (Exception ex)
   {
    throw ex;
   }


  }
}
}
&quot;@</span>

 <span style="color:#FFFF00;">add-type</span> <span style="color:#FF4500;">$code</span>

 <span style="color:#FF4500;">$acl</span> <span style="color:#9B9B9B;">=</span> <span style="color:#FFFF00;">Get-Acl</span> <span style="color:#FF4500;">$Path</span>
 <span style="color:#FF4500;">$acl</span>.psbase.SetOwner(<span style="color:#FF4500;">$principal</span>)
 <span style="color:#FF4500;">$Ar</span> <span style="color:#9B9B9B;">=</span> <span style="color:#FFFF00;">New-Object</span>  system.security.accesscontrol.filesystemaccessrule(<span style="color:#D69D85;">&quot;IIS_IUSRS&quot;</span><span style="color:#9B9B9B;">,</span><span style="color:#D69D85;">&quot;FullControl&quot;</span><span style="color:#9B9B9B;">,</span> <span style="color:#D69D85;">&quot;Allow&quot;</span>)

 <span style="color:#57A64A;">## Check if Access already exists.</span>
 <span style="color:#57A64A;">#see http://cyrusbuilt.net/wordpress/?p=158</span>
 <span style="color:#569CD6;">if</span> (<span style="color:#FF4500;">$acl</span>.Access <span style="color:#9B9B9B;">|</span> Where { <span style="color:#FF4500;">$_</span>.IdentityReference <span style="color:#9B9B9B;">-eq</span> <span style="color:#FF4500;">$Principal</span>}) {
  <span style="color:#FF4500;">$accessModification</span> <span style="color:#9B9B9B;">=</span> <span style="color:#FFFF00;">New-Object</span> System.Security.AccessControl.AccessControlModification
  <span style="color:#FF4500;">$accessModification</span>.value__ <span style="color:#9B9B9B;">=</span> 2
  <span style="color:#FF4500;">$modification</span> <span style="color:#9B9B9B;">=</span> <span style="color:#FF4500;">$false</span>
  <span style="color:#FF4500;">$acl</span>.ModifyAccessRule(<span style="color:#FF4500;">$accessModification</span><span style="color:#9B9B9B;">,</span> <span style="color:#FF4500;">$Ar</span><span style="color:#9B9B9B;">,</span> <span style="color:#9B9B9B;">[</span><span style="color:#008080;">ref</span><span style="color:#9B9B9B;">]</span><span style="color:#FF4500;">$modification</span>) <span style="color:#9B9B9B;">|</span> <span style="color:#FFFF00;">Out-Null</span>
 } <span style="color:#569CD6;">else</span> {
  <span style="color:#FF4500;">$acl</span>.AddAccessRule(<span style="color:#FF4500;">$Ar</span>)
 }

 <span style="color:#9B9B9B;">[</span><span style="color:#008080;">void</span><span style="color:#9B9B9B;">]</span><span style="color:#9B9B9B;">[</span><span style="color:#008080;">WSG.Utils.PermissionsSetter</span><span style="color:#9B9B9B;">]</span><span style="color:#9B9B9B;">::</span>AddPrivilege(<span style="color:#9B9B9B;">[</span><span style="color:#008080;">WSG.Utils.PermissionsSetter</span><span style="color:#9B9B9B;">]</span><span style="color:#9B9B9B;">::</span>SE_RESTORE_NAME)
 <span style="color:#FFFF00;">set-acl</span> <span style="color:#9B9B9B;">-Path</span> <span style="color:#FF4500;">$Path</span> <span style="color:#9B9B9B;">-AclObject</span> <span style="color:#FF4500;">$acl</span>
 <span style="color:#9B9B9B;">[</span><span style="color:#008080;">void</span><span style="color:#9B9B9B;">]</span><span style="color:#9B9B9B;">[</span><span style="color:#008080;">WSG.Utils.PermissionsSetter</span><span style="color:#9B9B9B;">]</span><span style="color:#9B9B9B;">::</span>RemovePrivilege(<span style="color:#9B9B9B;">[</span><span style="color:#008080;">WSG.Utils.PermissionsSetter</span><span style="color:#9B9B9B;">]</span><span style="color:#9B9B9B;">::</span>SE_RESTORE_NAME)
</pre></div>
<ol start="2">
<li>How to register Asp.Net &amp; WCF in IIS?</li>
</ol>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
 <span style="color:#FF4500;">$pathToFramework</span> <span style="color:#9B9B9B;">=</span> <span style="color:#D69D85;">&quot;$env:windir\Microsoft.NET\Framework&quot;</span>
 <span style="color:#569CD6;">if</span> (<span style="color:#FFFF00;">test-path</span> <span style="color:#D69D85;">&quot;$env:windir\Microsoft.NET\Framework64&quot;</span>)
 {
  <span style="color:#FF4500;">$pathToFramework</span> <span style="color:#9B9B9B;">=</span> <span style="color:#D69D85;">&quot;$env:windir\Microsoft.NET\Framework64&quot;</span>
 }

 <span style="color:#57A64A;">#start aspnet_regiis and ServiceModelReg</span>
 <span style="color:#FF4500;">$aspNet2</span> <span style="color:#9B9B9B;">=</span> <span style="color:#FFFF00;">Test-Path</span> <span style="color:#D69D85;">&quot;$pathToFramework\v2.0.50727\aspnet_regiis.exe&quot;</span> <span style="color:#9B9B9B;">-pathType</span> leaf
 <span style="color:#569CD6;">if</span> ((<span style="color:#FF4500;">$aspNet2</span> <span style="color:#9B9B9B;">-eq</span> <span style="color:#FF4500;">$true</span>) <span style="color:#9B9B9B;">-and</span> (<span style="color:#FF4500;">$aspNet2Reg</span> <span style="color:#9B9B9B;">-eq</span> <span style="color:#FF4500;">$false</span>))
 {
  <span style="color:#FFFF00;">Write-Host</span> <span style="color:#9B9B9B;">-ForegroundColor</span> green <span style="color:#D69D85;">&quot;`r`nInstall aspnet_regiis.exe v2.0.50727&quot;</span>
  &amp; <span style="color:#D69D85;">&quot;$pathToFramework\v2.0.50727\aspnet_regiis.exe&quot;</span> <span style="color:#9B9B9B;">-i</span> <span style="color:#9B9B9B;">-enable</span>
 }

 <span style="color:#FF4500;">$ServModReg3</span> <span style="color:#9B9B9B;">=</span> <span style="color:#FFFF00;">Test-Path</span> <span style="color:#D69D85;">&quot;$pathToFramework\v3.0\Windows Communication Foundation\ServiceModelReg.exe&quot;</span> <span style="color:#9B9B9B;">-pathType</span> leaf
 <span style="color:#569CD6;">if</span> (<span style="color:#FF4500;">$ServModReg3</span> <span style="color:#9B9B9B;">-eq</span> <span style="color:#FF4500;">$true</span>)
 {
  <span style="color:#FFFF00;">Write-Host</span> <span style="color:#9B9B9B;">-ForegroundColor</span> green <span style="color:#D69D85;">&quot;`r`nInstall ServiceModelReg.exe v3.0&quot;</span>
  &amp; <span style="color:#D69D85;">&quot;$pathToFramework\v3.0\Windows Communication Foundation\ServiceModelReg.exe&quot;</span> <span style="color:#9B9B9B;">-iru</span>
 }

 <span style="color:#FF4500;">$ServModReg4</span> <span style="color:#9B9B9B;">=</span> <span style="color:#FFFF00;">Test-Path</span> <span style="color:#D69D85;">&quot;$pathToFramework\v4.0.30319\ServiceModelReg.exe&quot;</span> <span style="color:#9B9B9B;">-pathType</span> leaf
 <span style="color:#569CD6;">if</span> (<span style="color:#FF4500;">$ServModReg4</span> <span style="color:#9B9B9B;">-eq</span> <span style="color:#FF4500;">$true</span>)
 {
  <span style="color:#FFFF00;">Write-Host</span> <span style="color:#9B9B9B;">-ForegroundColor</span> green <span style="color:#D69D85;">&quot;`r`nInstall ServiceModelReg.exe v4.0.30319&quot;</span>
  &amp; <span style="color:#D69D85;">&quot;$pathToFramework\v4.0.30319\ServiceModelReg.exe&quot;</span> <span style="color:#9B9B9B;">-ia</span> <span style="color:#9B9B9B;">-q</span> <span style="color:#9B9B9B;">-nologo</span>
 }

 <span style="color:#FF4500;">$AspNetRegIis4</span> <span style="color:#9B9B9B;">=</span> <span style="color:#FFFF00;">Test-Path</span> <span style="color:#D69D85;">&quot;$pathToFramework\v4.0.30319\aspnet_regiis.exe&quot;</span> <span style="color:#9B9B9B;">-pathType</span> leaf
 <span style="color:#569CD6;">if</span> ((<span style="color:#FF4500;">$AspNetRegIis4</span> <span style="color:#9B9B9B;">-eq</span> <span style="color:#FF4500;">$true</span>) <span style="color:#9B9B9B;">-and</span> (<span style="color:#FF4500;">$aspNet4Reg</span> <span style="color:#9B9B9B;">-eq</span> <span style="color:#FF4500;">$false</span>))
 {
  <span style="color:#FFFF00;">Write-Host</span> <span style="color:#9B9B9B;">-ForegroundColor</span> green <span style="color:#D69D85;">&quot;`r`nInstall aspnet_regiis.exe v4.0.30319&quot;</span>
  &amp; <span style="color:#D69D85;">&quot;$pathToFramework\v4.0.30319\aspnet_regiis.exe&quot;</span> <span style="color:#9B9B9B;">-ir</span> <span style="color:#9B9B9B;">-enable</span>
 }
</pre></div>
<ol start="3">
<li>How to enable windows features?</li>
</ol>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
 <span style="color:#57A64A;">#check the windows features</span>
 <span style="color:#FF4500;">$features</span> <span style="color:#9B9B9B;">=</span> @((<span style="color:#D69D85;">&quot;IIS-ASPNET&quot;</span><span style="color:#9B9B9B;">,</span> <span style="color:#D69D85;">&quot;unknown&quot;</span>)<span style="color:#9B9B9B;">,</span> (<span style="color:#D69D85;">&quot;IIS-HttpCompressionDynamic&quot;</span><span style="color:#9B9B9B;">,</span> <span style="color:#D69D85;">&quot;unknown&quot;</span>)<span style="color:#9B9B9B;">,</span> (<span style="color:#D69D85;">&quot;IIS-ManagementScriptingTools&quot;</span><span style="color:#9B9B9B;">,</span> <span style="color:#D69D85;">&quot;unknown&quot;</span>)<span style="color:#9B9B9B;">,</span> (<span style="color:#D69D85;">&quot;IIS-IIS6ManagementCompatibility&quot;</span><span style="color:#9B9B9B;">,</span> <span style="color:#D69D85;">&quot;unknown&quot;</span>)<span style="color:#9B9B9B;">,</span> (<span style="color:#D69D85;">&quot;IIS-Metabase&quot;</span><span style="color:#9B9B9B;">,</span> <span style="color:#D69D85;">&quot;unknown&quot;</span>)<span style="color:#9B9B9B;">,</span> (<span style="color:#D69D85;">&quot;IIS-WMICompatibility&quot;</span><span style="color:#9B9B9B;">,</span> <span style="color:#D69D85;">&quot;unknown&quot;</span>)<span style="color:#9B9B9B;">,</span> (<span style="color:#D69D85;">&quot;IIS-LegacyScripts&quot;</span><span style="color:#9B9B9B;">,</span> <span style="color:#D69D85;">&quot;unknown&quot;</span>)<span style="color:#9B9B9B;">,</span> (<span style="color:#D69D85;">&quot;IIS-LegacySnapIn&quot;</span><span style="color:#9B9B9B;">,</span> <span style="color:#D69D85;">&quot;unknown&quot;</span>))

 <span style="color:#FF4500;">$dismPath</span> <span style="color:#9B9B9B;">=</span> <span style="color:#D69D85;">&quot;$env:windir\System32\Dism.exe&quot;</span>
 <span style="color:#569CD6;">if</span>(<span style="color:#FFFF00;">test-path</span> <span style="color:#D69D85;">&quot;$env:windir\Sysnative\Dism.exe&quot;</span>)
 {
  <span style="color:#FF4500;">$dismPath</span> <span style="color:#9B9B9B;">=</span> <span style="color:#D69D85;">&quot;$env:windir\Sysnative\Dism.exe&quot;</span>
 }

 <span style="color:#FFFF00;">Write-Host</span> <span style="color:#9B9B9B;">-ForegroundColor</span> green <span style="color:#D69D85;">&quot;`r`nGet windows features&quot;</span>
 <span style="color:#FF4500;">$res</span> <span style="color:#9B9B9B;">=</span> &amp; <span style="color:#D69D85;">&quot;$dismPath&quot;</span> <span style="color:#9B9B9B;">/</span>online <span style="color:#9B9B9B;">/</span><span style="color:#FFFF00;">Get-Features</span>
 <span style="color:#57A64A;">#take feature&#39;s states</span>
 <span style="color:#FF4500;">$writeNextStr</span> <span style="color:#9B9B9B;">=</span> <span style="color:#FF4500;">$false</span>
 <span style="color:#569CD6;">for</span> (<span style="color:#FF4500;">$i</span> <span style="color:#9B9B9B;">=</span> 0; <span style="color:#FF4500;">$i</span> <span style="color:#9B9B9B;">-lt</span> <span style="color:#FF4500;">$res</span>.Count; <span style="color:#FF4500;">$i</span><span style="color:#9B9B9B;">++</span>)
 {
  <span style="color:#FF4500;">$str</span> <span style="color:#9B9B9B;">=</span> <span style="color:#FF4500;">$res</span><span style="color:#9B9B9B;">[</span><span style="color:#008080;">$i</span><span style="color:#9B9B9B;">]</span>
  <span style="color:#569CD6;">foreach</span> (<span style="color:#FF4500;">$feature</span> <span style="color:#569CD6;">in</span> <span style="color:#FF4500;">$features</span>)
  {
   <span style="color:#569CD6;">if</span> (<span style="color:#FF4500;">$str</span>.Contains(<span style="color:#FF4500;">$feature</span><span style="color:#9B9B9B;">[</span><span style="color:#008080;">0</span><span style="color:#9B9B9B;">]</span>))
   {
    <span style="color:#FF4500;">$feature</span><span style="color:#9B9B9B;">[</span><span style="color:#008080;">1</span><span style="color:#9B9B9B;">]</span> <span style="color:#9B9B9B;">=</span> <span style="color:#FF4500;">$res</span><span style="color:#9B9B9B;">[</span><span style="color:#008080;">$i+1</span><span style="color:#9B9B9B;">]</span>
    <span style="color:#569CD6;">break</span>
   }
  }
 }

 <span style="color:#57A64A;">#show results</span>
 <span style="color:#FFFF00;">Write-Host</span> <span style="color:#9B9B9B;">-ForegroundColor</span> green <span style="color:#D69D85;">&quot;`r`nPlease see the states of features`r`n&quot;</span>
 <span style="color:#569CD6;">foreach</span>(<span style="color:#FF4500;">$feature</span> <span style="color:#569CD6;">in</span> <span style="color:#FF4500;">$features</span>)
 {
  <span style="color:#FFFF00;">Write-Host</span> <span style="color:#9B9B9B;">-ForegroundColor</span> yellow <span style="color:#D69D85;">&quot;$feature&quot;</span>
 }
 <span style="color:#FFFF00;">Write-Host</span> <span style="color:#9B9B9B;">-ForegroundColor</span> green <span style="color:#D69D85;">&quot;`r`n&quot;</span>

 <span style="color:#57A64A;">#enable features</span>
 <span style="color:#FF4500;">$needToRestart</span> <span style="color:#9B9B9B;">=</span> <span style="color:#FF4500;">$false</span>
 <span style="color:#FFFF00;">Write-Host</span> <span style="color:#9B9B9B;">-ForegroundColor</span> green <span style="color:#D69D85;">&quot;Started to enable all features`r`n&quot;</span>
 <span style="color:#569CD6;">foreach</span>(<span style="color:#FF4500;">$feature</span> <span style="color:#569CD6;">in</span> <span style="color:#FF4500;">$features</span>)
 {
  <span style="color:#569CD6;">if</span> (<span style="color:#FF4500;">$feature</span><span style="color:#9B9B9B;">[</span><span style="color:#008080;">1</span><span style="color:#9B9B9B;">]</span> <span style="color:#9B9B9B;">-ne</span> <span style="color:#D69D85;">&quot;State : Enabled&quot;</span>)
  {
   <span style="color:#FF4500;">$needToRestart</span>  <span style="color:#9B9B9B;">=</span> <span style="color:#FF4500;">$true</span>
   <span style="color:#FF4500;">$temp</span> <span style="color:#9B9B9B;">=</span> <span style="color:#FF4500;">$feature</span><span style="color:#9B9B9B;">[</span><span style="color:#008080;">0</span><span style="color:#9B9B9B;">]</span>
   <span style="color:#FFFF00;">Write-Host</span> <span style="color:#9B9B9B;">-ForegroundColor</span> green <span style="color:#D69D85;">&quot;Try to enable $temp&quot;</span>
   &amp; <span style="color:#D69D85;">&quot;$dismPath&quot;</span> <span style="color:#9B9B9B;">/</span>online <span style="color:#9B9B9B;">/</span><span style="color:#FFFF00;">Enable-Feature</span> <span style="color:#9B9B9B;">/</span>FeatureName:<span style="color:#FF4500;">$temp</span> <span style="color:#9B9B9B;">/</span>NoRestart
  }
 }
</pre></div>
<ol start="4">
<li>How to avoid exception &quot;The OS handle’s position is not what FileStream expected&quot;?</li>
</ol>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#57A64A;">#this code is for exception such as The OS handle’s position is not what FileStream expected</span>
<span style="color:#57A64A;">#see http://www.leeholmes.com/blog/2008/07/30/workaround-the-os-handles-position-is-not-what-filestream-expected/</span>
<span style="color:#FF4500;">$bindingFlags</span> <span style="color:#9B9B9B;">=</span> <span style="color:#9B9B9B;">[</span><span style="color:#008080;">Reflection.BindingFlags</span><span style="color:#9B9B9B;">]</span> “Instance<span style="color:#9B9B9B;">,</span>NonPublic<span style="color:#9B9B9B;">,</span>GetField”
<span style="color:#FF4500;">$objectRef</span> <span style="color:#9B9B9B;">=</span> <span style="color:#FF4500;">$host</span>.GetType().GetField(“externalHostRef”<span style="color:#9B9B9B;">,</span> <span style="color:#FF4500;">$bindingFlags</span>).GetValue(<span style="color:#FF4500;">$host</span>)
<span style="color:#FF4500;">$bindingFlags</span> <span style="color:#9B9B9B;">=</span> <span style="color:#9B9B9B;">[</span><span style="color:#008080;">Reflection.BindingFlags</span><span style="color:#9B9B9B;">]</span> “Instance<span style="color:#9B9B9B;">,</span>NonPublic<span style="color:#9B9B9B;">,</span>GetProperty”
<span style="color:#FF4500;">$consoleHost</span> <span style="color:#9B9B9B;">=</span> <span style="color:#FF4500;">$objectRef</span>.GetType().GetProperty(“Value”<span style="color:#9B9B9B;">,</span> <span style="color:#FF4500;">$bindingFlags</span>).GetValue(<span style="color:#FF4500;">$objectRef</span><span style="color:#9B9B9B;">,</span> @())
<span style="color:#9B9B9B;">[</span><span style="color:#008080;">void</span><span style="color:#9B9B9B;">]</span> <span style="color:#FF4500;">$consoleHost</span>.GetType().GetProperty(“IsStandardOutputRedirected”<span style="color:#9B9B9B;">,</span> <span style="color:#FF4500;">$bindingFlags</span>).GetValue(<span style="color:#FF4500;">$consoleHost</span><span style="color:#9B9B9B;">,</span> @())
<span style="color:#FF4500;">$bindingFlags</span> <span style="color:#9B9B9B;">=</span> <span style="color:#9B9B9B;">[</span><span style="color:#008080;">Reflection.BindingFlags</span><span style="color:#9B9B9B;">]</span> “Instance<span style="color:#9B9B9B;">,</span>NonPublic<span style="color:#9B9B9B;">,</span>GetField”
<span style="color:#FF4500;">$field</span> <span style="color:#9B9B9B;">=</span> <span style="color:#FF4500;">$consoleHost</span>.GetType().GetField(“standardOutputWriter”<span style="color:#9B9B9B;">,</span> <span style="color:#FF4500;">$bindingFlags</span>)
<span style="color:#FF4500;">$field</span>.SetValue(<span style="color:#FF4500;">$consoleHost</span><span style="color:#9B9B9B;">,</span> <span style="color:#9B9B9B;">[</span><span style="color:#008080;">Console</span><span style="color:#9B9B9B;">]</span><span style="color:#9B9B9B;">::</span>Out)
<span style="color:#FF4500;">$field2</span> <span style="color:#9B9B9B;">=</span> <span style="color:#FF4500;">$consoleHost</span>.GetType().GetField(“standardErrorWriter”<span style="color:#9B9B9B;">,</span> <span style="color:#FF4500;">$bindingFlags</span>)
<span style="color:#FF4500;">$field2</span>.SetValue(<span style="color:#FF4500;">$consoleHost</span><span style="color:#9B9B9B;">,</span> <span style="color:#9B9B9B;">[</span><span style="color:#008080;">Console</span><span style="color:#9B9B9B;">]</span><span style="color:#9B9B9B;">::</span>Out)
</pre></div>
<ol start="5">
<li>How to load module?</li>
</ol>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#FFFF00;">Import-Module</span> WebAdministration
</pre></div>
<ol start="6">
<li>How to load another script file?</li>
</ol>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#57A64A;">#load external functions</span>
. (<span style="color:#FFFF00;">Join-Path</span> <span style="color:#FF4500;">$curFolder</span> \Functions\DevSetupFunctions.ps1)
</pre></div>
"""""
),
            ["""2012-01-31-MVC-indefinitely-loads-the-page-and-call-the-controller-cyclical"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 MVC indefinitely loads the page and call the controller cyclical
""""",
["""date"""] =
"""""
 2012-01-31
""""",
["""tags"""] =
"""""
 dotnet web
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<p>I have found that the page load indefinitely. And the reason was I add @Html.RenderAction to my default layout.</p>
<p>So the solution of the problem to add the next code to rendered view:</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
@{
      Layout = null;
}
</pre></div>
<p>As I understand, MVC try to load the next without this code:</p>
<p>Layout -&gt; MyView -&gt; Layout -&gt; MyView -&gt; ....</p>
<p>With code above:</p>
<p>Layout -&gt; MyView { -&gt; null}</p>
<p>So it's happens.</p>

"""""
),
            ["""2012-07-17-Replace-physical-path-of-web-sites-in-IIS7"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Replace physical path of web sites in IIS7
""""",
["""date"""] =
"""""
 2012-07-17
""""",
["""tags"""] =
"""""
 iis
""""",
["""categories"""] =
"""""
 administration
""""",
 },
"""""
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">param</span>(<span style="color:#9B9B9B;">[</span><span style="color:#008080;">String</span><span style="color:#9B9B9B;">]</span><span style="color:#FF4500;">$numb</span>)

<span style="color:#9B9B9B;">[</span><span style="color:#008080;">Void</span><span style="color:#9B9B9B;">]</span><span style="color:#9B9B9B;">[</span><span style="color:#008080;">Reflection.Assembly</span><span style="color:#9B9B9B;">]</span><span style="color:#9B9B9B;">::</span>LoadWithPartialName(<span style="color:#D69D85;">&quot;Microsoft.Web.Administration&quot;</span>)

<span style="color:#FF4500;">$siteName</span> <span style="color:#9B9B9B;">=</span> <span style="color:#D69D85;">&quot;graph.vrpinc.com&quot;</span>
<span style="color:#57A64A;">##$serverIP = &quot;your ip address&quot;</span>
<span style="color:#FF4500;">$newPath</span> <span style="color:#9B9B9B;">=</span> <span style="color:#D69D85;">&quot;D:\Projects\gmp&quot;</span><span style="color:#9B9B9B;">+</span><span style="color:#FF4500;">$numb</span><span style="color:#9B9B9B;">+</span><span style="color:#D69D85;">&quot;\GMP.WebSite&quot;</span>

<span style="color:#FF4500;">$serverManager</span> <span style="color:#9B9B9B;">=</span> <span style="color:#FFFF00;">New-Object</span> Microsoft.Web.Administration.ServerManager
<span style="color:#57A64A;">## $serverManager = [Microsoft.Web.Administration.ServerManager]::OpenRemote($serverIP)</span>
<span style="color:#FF4500;">$site</span> <span style="color:#9B9B9B;">=</span> <span style="color:#FF4500;">$serverManager</span>.Sites <span style="color:#9B9B9B;">|</span> where { <span style="color:#FF4500;">$_</span>.Name <span style="color:#9B9B9B;">-eq</span> <span style="color:#FF4500;">$siteName</span> }
<span style="color:#FF4500;">$rootApp</span> <span style="color:#9B9B9B;">=</span> <span style="color:#FF4500;">$site</span>.Applications <span style="color:#9B9B9B;">|</span> where { <span style="color:#FF4500;">$_</span>.Path <span style="color:#9B9B9B;">-eq</span> <span style="color:#D69D85;">&quot;/&quot;</span> }
<span style="color:#FF4500;">$rootVdir</span> <span style="color:#9B9B9B;">=</span> <span style="color:#FF4500;">$rootApp</span>.VirtualDirectories <span style="color:#9B9B9B;">|</span> where { <span style="color:#FF4500;">$_</span>.Path <span style="color:#9B9B9B;">-eq</span> <span style="color:#D69D85;">&quot;/&quot;</span> }
<span style="color:#FF4500;">$rootVdir</span>.PhysicalPath <span style="color:#9B9B9B;">=</span> <span style="color:#FF4500;">$newPath</span>
<span style="color:#FF4500;">$serverManager</span>.CommitChanges()

<span style="color:#FF4500;">$siteName</span> <span style="color:#9B9B9B;">=</span> <span style="color:#D69D85;">&quot;gmp3.vrpinc.com&quot;</span>
<span style="color:#FF4500;">$newPath</span> <span style="color:#9B9B9B;">=</span> <span style="color:#D69D85;">&quot;D:\Projects\gmp&quot;</span><span style="color:#9B9B9B;">+</span><span style="color:#FF4500;">$numb</span><span style="color:#9B9B9B;">+</span><span style="color:#D69D85;">&quot;\GMP.MvcWebSite&quot;</span>

<span style="color:#FF4500;">$serverManager</span> <span style="color:#9B9B9B;">=</span> <span style="color:#FFFF00;">New-Object</span> Microsoft.Web.Administration.ServerManager
<span style="color:#57A64A;">## $serverManager = [Microsoft.Web.Administration.ServerManager]::OpenRemote($serverIP)</span>
<span style="color:#FF4500;">$site</span> <span style="color:#9B9B9B;">=</span> <span style="color:#FF4500;">$serverManager</span>.Sites <span style="color:#9B9B9B;">|</span> where { <span style="color:#FF4500;">$_</span>.Name <span style="color:#9B9B9B;">-eq</span> <span style="color:#FF4500;">$siteName</span> }
<span style="color:#FF4500;">$rootApp</span> <span style="color:#9B9B9B;">=</span> <span style="color:#FF4500;">$site</span>.Applications <span style="color:#9B9B9B;">|</span> where { <span style="color:#FF4500;">$_</span>.Path <span style="color:#9B9B9B;">-eq</span> <span style="color:#D69D85;">&quot;/&quot;</span> }
<span style="color:#FF4500;">$rootVdir</span> <span style="color:#9B9B9B;">=</span> <span style="color:#FF4500;">$rootApp</span>.VirtualDirectories <span style="color:#9B9B9B;">|</span> where { <span style="color:#FF4500;">$_</span>.Path <span style="color:#9B9B9B;">-eq</span> <span style="color:#D69D85;">&quot;/&quot;</span> }
<span style="color:#FF4500;">$rootVdir</span>.PhysicalPath <span style="color:#9B9B9B;">=</span> <span style="color:#FF4500;">$newPath</span>
<span style="color:#FF4500;">$serverManager</span>.CommitChanges()

<span style="color:#FF4500;">$siteName</span> <span style="color:#9B9B9B;">=</span> <span style="color:#D69D85;">&quot;GMPServices&quot;</span>
<span style="color:#FF4500;">$newPath</span> <span style="color:#9B9B9B;">=</span> <span style="color:#D69D85;">&quot;D:\Projects\gmp&quot;</span><span style="color:#9B9B9B;">+</span><span style="color:#FF4500;">$numb</span><span style="color:#9B9B9B;">+</span><span style="color:#D69D85;">&quot;\GMP.Services&quot;</span>

<span style="color:#FF4500;">$serverManager</span> <span style="color:#9B9B9B;">=</span> <span style="color:#FFFF00;">New-Object</span> Microsoft.Web.Administration.ServerManager
<span style="color:#57A64A;">## $serverManager = [Microsoft.Web.Administration.ServerManager]::OpenRemote($serverIP)</span>
<span style="color:#FF4500;">$site</span> <span style="color:#9B9B9B;">=</span> <span style="color:#FF4500;">$serverManager</span>.Sites <span style="color:#9B9B9B;">|</span> where { <span style="color:#FF4500;">$_</span>.Name <span style="color:#9B9B9B;">-eq</span> <span style="color:#FF4500;">$siteName</span> }
<span style="color:#FF4500;">$rootApp</span> <span style="color:#9B9B9B;">=</span> <span style="color:#FF4500;">$site</span>.Applications <span style="color:#9B9B9B;">|</span> where { <span style="color:#FF4500;">$_</span>.Path <span style="color:#9B9B9B;">-eq</span> <span style="color:#D69D85;">&quot;/&quot;</span> }
<span style="color:#FF4500;">$rootVdir</span> <span style="color:#9B9B9B;">=</span> <span style="color:#FF4500;">$rootApp</span>.VirtualDirectories <span style="color:#9B9B9B;">|</span> where { <span style="color:#FF4500;">$_</span>.Path <span style="color:#9B9B9B;">-eq</span> <span style="color:#D69D85;">&quot;/&quot;</span> }
<span style="color:#FF4500;">$rootVdir</span>.PhysicalPath <span style="color:#9B9B9B;">=</span> <span style="color:#FF4500;">$newPath</span>
<span style="color:#FF4500;">$serverManager</span>.CommitChanges()
</pre></div>
<p>Bat file to call PowerShell file</p>
<pre><code class="language-bat">@echo off

set /p delBuild=Enter the number of gmp project?
powershell -noprofile Set-ExecutionPolicy Unrestricted
powershell .\setUpSite.ps1 -numb %delBuild%
</code></pre>
<p>One variable to set current version of projects!
Thanks!</p>

"""""
),
            ["""2012-07-20-VS-2010-Attach-to-process-w3wpexe"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 VS 2010 Attach to process w3wp.exe
""""",
["""date"""] =
"""""
 2012-07-20
""""",
["""tags"""] =
"""""
 vs
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<p>Need to create the macros:</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">Public</span> <span style="color:#569CD6;">Module</span> AttachToProcess
<span style="color:#569CD6;">Public</span> <span style="color:#569CD6;">Function</span> AttachToProcess(<span style="color:#569CD6;">ByVal</span> ProcessName <span style="color:#569CD6;">As</span> <span style="color:#569CD6;">String</span>) <span style="color:#569CD6;">As</span> <span style="color:#569CD6;">Boolean</span>
<span style="color:#569CD6;">Dim</span> proc <span style="color:#569CD6;">As</span> EnvDTE.Process
<span style="color:#569CD6;">Dim</span> attached <span style="color:#569CD6;">As</span> <span style="color:#569CD6;">Boolean</span>
<span style="color:#569CD6;">For</span> <span style="color:#569CD6;">Each</span> proc <span style="color:#569CD6;">In</span> DTE.Debugger.LocalProcesses
<span style="color:#569CD6;">If</span> (Right(proc.Name, Len(ProcessName)) = ProcessName) <span style="color:#569CD6;">Then</span>
proc.Attach()
attached = <span style="color:#569CD6;">True</span>
<span style="color:#569CD6;">End</span> <span style="color:#569CD6;">If</span>
<span style="color:#569CD6;">Next</span>

<span style="color:#569CD6;">Return</span> attached
<span style="color:#569CD6;">End</span> <span style="color:#569CD6;">Function</span>

<span style="color:#569CD6;">Sub</span> AttachToW3WP()
<span style="color:#569CD6;">If</span> <span style="color:#569CD6;">Not</span> AttachToProcess(<span style="color:#D69D85;">&quot;w3wp.exe&quot;</span>) <span style="color:#569CD6;">Then</span>
System.Windows.Forms.MessageBox.Show(<span style="color:#D69D85;">&quot;Cannot attach to process&quot;</span>)
<span style="color:#569CD6;">End</span> <span style="color:#569CD6;">If</span>
<span style="color:#569CD6;">End</span> <span style="color:#569CD6;">Sub</span>
<span style="color:#569CD6;">End</span> <span style="color:#569CD6;">Module</span>
</pre></div>
<p><a href="http://habrahabr.ru/post/131937/">Link</a></p>

"""""
),
            ["""2012-09-06-ASPNET-MVC-Bundle-Minification"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 ASP.NET MVC Bundle Minification
""""",
["""date"""] =
"""""
 2012-09-06
""""",
["""tags"""] =
"""""
 dotnet asp net mvc
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<h1 id="asp.net-mvc-bundle-minification">ASP.NET MVC Bundle Minification</h1>
<p>If you try to add Bundle from Web.Optimization library to your existing project and your Web.config file</p>
<p><img src="./images/bundle1.png" alt="example" /></p>
<p>so runAllManagedModulesForAllRequests=&quot;false&quot;.</p>
<p>You start to get 404- Not found response to your bundle requests.</p>
<p><img src="./images/bundle2.png" alt="example" /></p>
<p>Just enable BundleModule and all will be OK ! ;)</p>

"""""
),
            ["""2012-09-14-Avoid-Ambiguous-invocation-for-extension-methods"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Avoid Ambiguous invocation for extension methods
""""",
["""date"""] =
"""""
 2012-09-14
""""",
["""tags"""] =
"""""
 dotnet asp net mvc
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<p>I m using ASP.NET MVC. And work with my view, where I have the View</p>
<p><img src="./images/invocation.png" alt="example" /></p>
<p>It gives me the exception</p>
<pre><code class="language-text">The call is ambiguous between the following methods or properties: 'GMP.MvcWebSite.StringExtensions.TrimOrEmpty(string)' and 'System.StringHelper.TrimOrEmpty(string)'
</code></pre>
<p>So i just rebuild my view as</p>
<p><img src="./images/invocation2.png" alt="example2" /></p>

"""""
),
            ["""2012-09-28-API-Facebook"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 API Facebook
""""",
["""date"""] =
"""""
 2012-09-28
""""",
["""tags"""] =
"""""
 dotnet
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<p>I know there are a lot of information about working with Facebook API, but... I just think more information is better then less.</p>
<p>I need to post different types of context to Facebook pages (user create his own page, give us the name of page). OK, let's go!</p>
<p>I m using ASP.NET MVC, you know...
Link to the project.</p>
<p>All events has been shown on the main page.</p>
<ol>
<li>Create our application in facebook.</li>
</ol>
<p><img src="./images/facebook1.png" alt="example" /></p>
<p>You see there is secret key and application key. We need them to working with facebook through our application.</p>
<ol start="2">
<li>Authorization (OAuth 2.0).</li>
</ol>
<p><img src="./images/facebook2.png" alt="example" /></p>
<ul>
<li>Ask user to permission.</li>
<li>User will be redirected to facebook access page.</li>
<li>User give us needed permission.</li>
<li>User has been redirected back to our web site with special code.</li>
</ul>
<p>There is the step 4 (we get the code from redirecting response).</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">public</span> <span style="color:#569CD6;">void</span> GetAccessToken()
{
    <span style="color:#569CD6;">if</span> (HttpContext.Current.Request.Params.AllKeys.Contains(<span style="color:#D69D85;">&quot;code&quot;</span>))
    {
        code = HttpContext.Current.Request.Params[<span style="color:#D69D85;">&quot;code&quot;</span>];
        <span style="color:#57A64A;">//get the short-lived user access_toke</span>
        <span style="color:#569CD6;">string</span> request = <span style="color:#569CD6;">string</span>.Format(_tokenEndpoint, _applicationId, _redirectTo, _applicationSecret, code);
        <span style="color:#569CD6;">var</span> webClient = <span style="color:#569CD6;">new</span> WebClient();
        <span style="color:#569CD6;">string</span> response = webClient.DownloadString(request);
        <span style="color:#569CD6;">string</span>[] pairResponse = response.Split(<span style="color:#D69D85;">&#39;&amp;&#39;</span>);
        accessToken = pairResponse[<span style="color:#B5CEA8;">0</span>].Split(<span style="color:#D69D85;">&#39;=&#39;</span>)[<span style="color:#B5CEA8;">1</span>];
        <span style="color:#57A64A;">//get the long-lived user access_toke</span>
        request = <span style="color:#569CD6;">string</span>.Format(_exchangeAccessToken, _applicationId, _applicationSecret, accessToken);
        webClient = <span style="color:#569CD6;">new</span> WebClient();
        response = webClient.DownloadString(request);
        <span style="color:#569CD6;">if</span> (!accessToken.Equals(response.Split(<span style="color:#D69D85;">&#39;=&#39;</span>)[<span style="color:#B5CEA8;">1</span>]))
        {
            <span style="color:#569CD6;">throw</span> <span style="color:#569CD6;">new</span> AccessViolationException();
        }
        GetUserInformation();
    }
    <span style="color:#569CD6;">else</span> <span style="color:#569CD6;">if</span> (HttpContext.Current.Request.Params.AllKeys.Contains(<span style="color:#D69D85;">&quot;error&quot;</span>))
    {
        error = HttpContext.Current.Request.Params[<span style="color:#D69D85;">&quot;error&quot;</span>];
        <span style="color:#569CD6;">throw</span> <span style="color:#569CD6;">new</span> AccessViolationException(error);
    }
    <span style="color:#569CD6;">throw</span> <span style="color:#569CD6;">new</span> HttpException();
}
</pre></div>
<p>That is my facebook controller</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">public</span> ActionResult Index()
{
    <span style="color:#569CD6;">if</span> (!Client.IsAuthorizated)
    {
        <span style="color:#569CD6;">return</span> Redirect(Client.UriToAuth);
    }
    <span style="color:#569CD6;">return</span> View(<span style="color:#569CD6;">new</span> FacebookModel {Name = <span style="color:#D69D85;">&quot;&quot;</span>});
}

<span style="color:#569CD6;">public</span> ActionResult Authorizate()
{
    Client.GetAccessToken();
    <span style="color:#569CD6;">return</span> RedirectToAction(<span style="color:#D69D85;">&quot;Index&quot;</span>);
}
</pre></div>
<p>After getting code we need to get the id of the page:</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">private</span> <span style="color:#569CD6;">void</span> GetUserInformation()
{
    <span style="color:#569CD6;">string</span> request = <span style="color:#D69D85;">&quot;https://graph.facebook.com/me?access_token=&quot;</span> + accessToken;
    <span style="color:#569CD6;">var</span> webClient = <span style="color:#569CD6;">new</span> WebClient();
    <span style="color:#569CD6;">string</span> response = webClient.DownloadString(request);
    user = JObject.Parse(response);
    GetPagesInformation();
}

<span style="color:#569CD6;">private</span> <span style="color:#569CD6;">void</span> GetPagesInformation()
{
    <span style="color:#569CD6;">string</span> request = <span style="color:#D69D85;">&quot;https://graph.facebook.com/&quot;</span> + user.SelectToken(<span style="color:#D69D85;">&quot;id&quot;</span>) + <span style="color:#D69D85;">&quot;/accounts?access_token=&quot;</span> +
                        accessToken;
    <span style="color:#569CD6;">var</span> webClient = <span style="color:#569CD6;">new</span> WebClient();
    <span style="color:#569CD6;">string</span> response = webClient.DownloadString(request);
    userPages = JObject.Parse(response);
    page = userPages.SelectToken(<span style="color:#D69D85;">&quot;data&quot;</span>).First(x =&gt; x.SelectToken(<span style="color:#D69D85;">&quot;name&quot;</span>).ToString().Equals(_pageName));
}
</pre></div>
<ol start="3">
<li>OK, let's start to posting something. Here is my configuration:</li>
</ol>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">private</span> <span style="color:#569CD6;">static</span> <span style="color:#569CD6;">readonly</span> Dictionary&lt;<span style="color:#569CD6;">string</span>, <span style="color:#569CD6;">string</span>&gt; Config = <span style="color:#569CD6;">new</span> Dictionary&lt;<span style="color:#569CD6;">string</span>, <span style="color:#569CD6;">string</span>&gt;
{
    {<span style="color:#D69D85;">&quot;AuthorizationEndpoint&quot;</span>, <span style="color:#D69D85;">&quot;https://graph.facebook.com/oauth/authorize?client_id={0}&amp;redirect_uri={1}&amp;scope=manage_pages,create_event,publish_stream&quot;</span>},
    {<span style="color:#D69D85;">&quot;TokenEndpoint&quot;</span>, <span style="color:#D69D85;">&quot;https://graph.facebook.com/oauth/access_token?client_id={0}&amp;redirect_uri={1}&amp;client_secret={2}&amp;code={3}&quot;</span>},
    {<span style="color:#D69D85;">&quot;ApplicationId&quot;</span>, <span style="color:#D69D85;">&quot;387222228001291&quot;</span>},
    {<span style="color:#D69D85;">&quot;ApplicationSecret&quot;</span>, <span style="color:#D69D85;">&quot;3a177e2231e2966733771775b42&quot;</span>},
    {<span style="color:#D69D85;">&quot;RedirectTo&quot;</span>, <span style="color:#D69D85;">&quot;http://localhost:4769/Facebook/Authorizate&quot;</span>},
    {<span style="color:#D69D85;">&quot;PageName&quot;</span>, <span style="color:#D69D85;">&quot;TesterMyRest Community&quot;</span>}
};
</pre></div>
<p>Posting video.</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">public</span> <span style="color:#569CD6;">string</span> CreateVideo(MemoryStream imageMemoryStream, <span style="color:#569CD6;">string</span> title, <span style="color:#569CD6;">string</span> fileName)
{
    <span style="color:#569CD6;">string</span> boundary = <span style="color:#D69D85;">&quot;---------------------------&quot;</span> + DateTime.Now.Ticks.ToString(<span style="color:#D69D85;">&quot;x&quot;</span>);
    <span style="color:#569CD6;">var</span> uploadRequest =
        (HttpWebRequest)
        WebRequest.Create(<span style="color:#D69D85;">&quot;https://graph.facebook.com/&quot;</span> + page.SelectToken(<span style="color:#D69D85;">&quot;id&quot;</span>) + <span style="color:#D69D85;">&quot;/videos?access_token=&quot;</span> +
                            page.SelectToken(<span style="color:#D69D85;">&quot;access_token&quot;</span>));
    uploadRequest.ServicePoint.Expect100Continue = <span style="color:#569CD6;">false</span>;
    uploadRequest.Method = <span style="color:#D69D85;">&quot;POST&quot;</span>;
    uploadRequest.UserAgent = <span style="color:#D69D85;">&quot;Mozilla/4.0 (compatible; Windows NT)&quot;</span>;
    uploadRequest.ContentType = <span style="color:#D69D85;">&quot;multipart/form-data; boundary=&quot;</span> + boundary;
    uploadRequest.KeepAlive = <span style="color:#569CD6;">false</span>;

    <span style="color:#569CD6;">var</span> sb = <span style="color:#569CD6;">new</span> StringBuilder();

    <span style="color:#569CD6;">const</span> <span style="color:#569CD6;">string</span> formdataTemplate = <span style="color:#D69D85;">&quot;--{0}\r\nContent-Disposition: form-data; name=\&quot;{1}\&quot;\r\n\r\n{2}\r\n&quot;</span>;
    sb.AppendFormat(formdataTemplate, boundary, <span style="color:#D69D85;">&quot;title&quot;</span>, HttpContext.Current.Server.HtmlEncode(title));

    <span style="color:#569CD6;">const</span> <span style="color:#569CD6;">string</span> headerTemplate = <span style="color:#D69D85;">&quot;--{0}\r\nContent-Disposition: form-data; name=\&quot;{1}\&quot;; filename=\&quot;{2}\&quot;\r\nContent-Type: {3}\r\n\r\n&quot;</span>;
    sb.AppendFormat(headerTemplate, boundary, <span style="color:#D69D85;">&quot;source&quot;</span>, fileName, <span style="color:#D69D85;">@&quot;application/octet-stream&quot;</span>);

    <span style="color:#569CD6;">string</span> formString = sb.ToString();
    <span style="color:#569CD6;">byte</span>[] formBytes = Encoding.UTF8.GetBytes(formString);
    <span style="color:#569CD6;">byte</span>[] trailingBytes = Encoding.UTF8.GetBytes(<span style="color:#D69D85;">&quot;\r\n--&quot;</span> + boundary + <span style="color:#D69D85;">&quot;--\r\n&quot;</span>);

    <span style="color:#569CD6;">long</span> imageLength = imageMemoryStream.Length;
    <span style="color:#569CD6;">long</span> contentLength = formBytes.Length + imageLength + trailingBytes.Length;
    uploadRequest.ContentLength = contentLength;

    uploadRequest.AllowWriteStreamBuffering = <span style="color:#569CD6;">false</span>;
    Stream strmOut = uploadRequest.GetRequestStream();

    strmOut.Write(formBytes, <span style="color:#B5CEA8;">0</span>, formBytes.Length);

    <span style="color:#569CD6;">var</span> buffer = <span style="color:#569CD6;">new</span> Byte[<span style="color:#569CD6;">checked</span>((<span style="color:#569CD6;">uint</span>) Math.Min(<span style="color:#B5CEA8;">4096</span>, (<span style="color:#569CD6;">int</span>) imageLength))];
    <span style="color:#569CD6;">int</span> bytesRead;
    imageMemoryStream.Seek(<span style="color:#B5CEA8;">0</span>, SeekOrigin.Begin);
    <span style="color:#569CD6;">while</span> ((bytesRead = imageMemoryStream.Read(buffer, <span style="color:#B5CEA8;">0</span>, buffer.Length)) != <span style="color:#B5CEA8;">0</span>)
    {
        strmOut.Write(buffer, <span style="color:#B5CEA8;">0</span>, bytesRead);
    }

    strmOut.Write(trailingBytes, <span style="color:#B5CEA8;">0</span>, trailingBytes.Length);

    strmOut.Close();

    <span style="color:#569CD6;">var</span> wresp = uploadRequest.GetResponse() <span style="color:#569CD6;">as</span> HttpWebResponse;
    Encoding enc = Encoding.UTF8;
    <span style="color:#569CD6;">if</span> (wresp != <span style="color:#569CD6;">null</span>)
    {
        <span style="color:#569CD6;">var</span> stream = wresp.GetResponseStream();
        <span style="color:#569CD6;">if</span> (stream != <span style="color:#569CD6;">null</span>)
        {
            <span style="color:#569CD6;">var</span> loResponseStream = <span style="color:#569CD6;">new</span> StreamReader(stream, enc);
            <span style="color:#569CD6;">return</span> <span style="color:#D69D85;">&quot;https://graph.facebook.com/&quot;</span> + loResponseStream.ReadToEnd();
        }
    }
    <span style="color:#569CD6;">return</span> <span style="color:#569CD6;">string</span>.Empty;
}
</pre></div>
<ol start="4">
<li>Change the information about the page.</li>
</ol>
<p>WebHelper class:</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">public</span> <span style="color:#569CD6;">static</span> <span style="color:#569CD6;">class</span> WebWorker
{
    <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">static</span> <span style="color:#569CD6;">void</span> AddPostParameter(Dictionary&lt;<span style="color:#569CD6;">string</span>, <span style="color:#569CD6;">string</span>&gt; values, StringBuilder postBody)
    {
        <span style="color:#569CD6;">foreach</span> (<span style="color:#569CD6;">string</span> key <span style="color:#569CD6;">in</span> values.Keys)
        {
            <span style="color:#569CD6;">if</span> (postBody.Length &gt; <span style="color:#B5CEA8;">0</span>)
            {
                postBody.Append(<span style="color:#D69D85;">&quot;&amp;&quot;</span>);
            }
            postBody.Append(<span style="color:#569CD6;">string</span>.Format(<span style="color:#D69D85;">&quot;{0}={1}&quot;</span>, key, values[key]));
        }
    }

    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">static</span> JObject DownloadJson(<span style="color:#569CD6;">string</span> requestUrl)
    {
        <span style="color:#569CD6;">var</span> webClient = <span style="color:#569CD6;">new</span> WebClient();
        <span style="color:#569CD6;">string</span> response = webClient.DownloadString(requestUrl);
        <span style="color:#569CD6;">return</span> JObject.Parse(response);
    }

    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">static</span> <span style="color:#569CD6;">string</span> UploadString(<span style="color:#569CD6;">string</span> requstUrl, Dictionary&lt;<span style="color:#569CD6;">string</span>, <span style="color:#569CD6;">string</span>&gt; values)
    {
        <span style="color:#569CD6;">var</span> webClient = <span style="color:#569CD6;">new</span> WebClient();
        <span style="color:#569CD6;">var</span> postBody = <span style="color:#569CD6;">new</span> StringBuilder();
        AddPostParameter(values, postBody);
        <span style="color:#569CD6;">return</span> webClient.UploadString(requstUrl, postBody.ToString());
    }
}
</pre></div><div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">private</span> <span style="color:#569CD6;">string</span> CreateStatus(Dictionary&lt;<span style="color:#569CD6;">string</span>, <span style="color:#569CD6;">string</span>&gt; values)
{
    <span style="color:#569CD6;">string</span> request = <span style="color:#D69D85;">&quot;https://graph.facebook.com/&quot;</span> + page.SelectToken(<span style="color:#D69D85;">&quot;id&quot;</span>) + <span style="color:#D69D85;">&quot;/feed?access_token=&quot;</span> +
                        page.SelectToken(<span style="color:#D69D85;">&quot;access_token&quot;</span>);
    <span style="color:#569CD6;">return</span> WebWorker.UploadString(request, values);
}
</pre></div>
"""""
),
            ["""2013-01-30-TFS-Delete-Team-Project"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 TFS Delete Team Project
""""",
["""date"""] =
"""""
 2013-01-30
""""",
["""tags"""] =
"""""
 tfs
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<p>It is not so easy to find the steps to delete project from TFS.</p>
<p>So, according to <a href="http://stackoverflow.com/questions/13635889/delete-team-project-from-free-team-foundation-service">http://stackoverflow.com/questions/13635889/delete-team-project-from-free-team-foundation-service</a>.</p>
<p>You can use the following command from the &quot;Developer Command Prompt&quot;:</p>
<pre><code class="language-none">TfsDeleteProject /collection:https://mytfs.visualstudio.com/DefaultCollection MyProject
</code></pre>
<p>Thank you</p>

"""""
),
            ["""2013-04-01-ASPNET-MVC-and-HtmlHidden"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 ASP.NET MVC and Html.Hidden
""""",
["""date"""] =
"""""
 2013-04-01
""""",
["""tags"""] =
"""""
 dotnet asp net mvc
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<p>There is interesting bug connected with Html.Hidden.
There are two model:</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">public</span> <span style="color:#569CD6;">class</span>  Model1{
<span style="color:#569CD6;">public</span> <span style="color:#569CD6;">int</span> ID{<span style="color:#569CD6;">get</span>;<span style="color:#569CD6;">set</span>;}
<span style="color:#569CD6;">public</span> Model2 Model2Model{<span style="color:#569CD6;">get</span>;<span style="color:#569CD6;">set</span>;}
}
<span style="color:#569CD6;">public</span> <span style="color:#569CD6;">class</span> Model2{
<span style="color:#569CD6;">public</span> <span style="color:#569CD6;">int</span> ID{<span style="color:#569CD6;">get</span>;<span style="color:#569CD6;">set</span>;}
}
</pre></div>
<p>Page:</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">&lt;</span><span style="color:#A31515;">html</span><span style="color:#569CD6;">&gt;</span>
...
<span style="color:#569CD6;">&lt;</span><span style="color:#A31515;">body</span><span style="color:#569CD6;">&gt;</span>
@Html.Partial(&quot;partial&quot;
<span style="color:#569CD6;">&lt;</span><span style="color:#A31515;">body</span><span style="color:#569CD6;">&gt;</span>
<span style="color:#569CD6;">&lt;/</span><span style="color:#A31515;">html</span><span style="color:#569CD6;">&gt;</span>
</pre></div>
"""""
),
            ["""2013-04-04-Persistencejs-insert-empty-values-in-web-sql"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Persistence.js insert empty values in web sql
""""",
["""date"""] =
"""""
 2013-04-04
""""",
["""tags"""] =
"""""
 javascript
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<p>I am starting to work with persistence.js library and open the problem to me: it saves empty data to web sql</p>
<p><img src="./images/persistance1.png" alt="example1" /></p>
<p>After investigating the problem i have found this question  and just want to clear and reproduce it in my notes. Thanks guys from this question :)
The problem connected with this js file: persistence.jquery. If it used, we should rewrite code such as:</p>
<p><img src="./images/persistance2.png" alt="example2" /></p>
<p>Thanks.</p>

"""""
),
            ["""2013-04-10-Structure-of-presentation"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Structure of presentation
""""",
["""date"""] =
"""""
 2013-04-10
""""",
["""tags"""] =
"""""
 presentation
""""",
["""categories"""] =
"""""
 documentation
""""",
 },
"""""
<p><a href="http://burba.pro/presentation_structure/">link</a></p>
<p><img src="../images/presentation_structure.png" alt="image" /></p>

"""""
),
            ["""2013-04-20-jQuery-Twitter-Bootstrap-List-Tree-Plugin-Editable-version"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 jQuery Twitter Bootstrap List Tree Plugin Editable version
""""",
["""date"""] =
"""""
 2013-04-20
""""",
["""tags"""] =
"""""
 javascript
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<p>JQuery / Twitter Bootstrap List Tree Plugin is a great plugin, but it does not allow to edit and sort tree elements. I have created an editable version of plugin: The view of tree:</p>
<p><img src="./images/bootstrap_tree.png" alt="example" /></p>
<p>You can find the source code <a href="http://pastebin.com/BTA4nL1c">there</a> or <a href="/code/tree.js">here</a>.</p>
<p>Also see it <a href="http://jsfiddle.net/QD8Hs/1060/">below</a>.</p>

"""""
),
            ["""2013-04-24-TFS-Exclude-binding-from-solution"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 TFS Exclude binding from solution
""""",
["""date"""] =
"""""
 2013-04-24
""""",
["""tags"""] =
"""""
 tfs
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<p>It is not easy command to unbind solution/project of TFS.</p>
<p>But there is manual actions to do that:</p>
<ol>
<li>Remove all *.vssscc and etc(Source Control files near your solution and projects file);</li>
<li>Remove all nodes in solution and project file with tag <scc /></li>
</ol>

"""""
),
            ["""2013-04-25-Log2Console-with-IISExpress-and-log4net"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Log2Console with IISExpress and log4net
""""",
["""date"""] =
"""""
 2013-04-25
""""",
["""tags"""] =
"""""
 dotnet
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<p>Log2Console with IISExpress and log4net
I have found that log4net and log2console don't work correctly (using IISExpress) with each other after trying using default configuration from <a href="http://log2console.codeplex.com/wikipage?title=ClientConfiguration.">http://log2console.codeplex.com/wikipage?title=ClientConfiguration</a>.</p>
<p>But i have found new configuration for log4net and log2console (<a href="http://logging.apache.org/log4net/release/config-examples.html#udpappender">log4net</a>) and</p>
<p><img src="./images/log2net1.png" alt="example1" /></p>
<p>Seems work fine:</p>
<p><img src="./images/log2net2.png" alt="example2" /></p>

"""""
),
            ["""2013-04-26-Useful-LINQ-extensions"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Useful LINQ extensions
""""",
["""date"""] =
"""""
 2013-04-26
""""",
["""tags"""] =
"""""
 dotnet linq
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<h1 id="useful-linq-extensions">Useful LINQ extensions</h1>
<p>After reading a lot of articles about this theme, I start to use the next <a href="http://pastebin.com/As5as2pE">extensions</a></p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">public</span> <span style="color:#569CD6;">static</span> <span style="color:#569CD6;">class</span> Linq
{
    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">static</span> IEnumerable&lt;T&gt; Except&lt;T&gt;(<span style="color:#569CD6;">this</span> IEnumerable&lt;T&gt; source, IEnumerable&lt;T&gt; target, Func&lt;T, T, <span style="color:#569CD6;">bool</span>&gt; func)
    {
        <span style="color:#569CD6;">return</span> source.Except(target, <span style="color:#569CD6;">new</span> LambdaComparer&lt;T&gt;(func));
    }

    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">static</span> TResult With&lt;TInput, TResult&gt;(<span style="color:#569CD6;">this</span> TInput o, Func&lt;TInput, TResult&gt; evaluator)
        <span style="color:#569CD6;">where</span> TInput : <span style="color:#569CD6;">class</span>
    {
        <span style="color:#569CD6;">if</span> (o == <span style="color:#569CD6;">null</span>) <span style="color:#569CD6;">return</span> <span style="color:#569CD6;">default</span>(TResult);
        <span style="color:#569CD6;">return</span> evaluator(o);
    }

    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">static</span> TResult Return&lt;TInput, TResult&gt;(<span style="color:#569CD6;">this</span> TInput o, Func&lt;TInput, TResult&gt; evaluator, TResult failure_value) <span style="color:#569CD6;">where</span> TInput : <span style="color:#569CD6;">class</span>
    {
        <span style="color:#569CD6;">if</span> (o == <span style="color:#569CD6;">null</span>) <span style="color:#569CD6;">return</span> failure_value;
        <span style="color:#569CD6;">return</span> evaluator(o);
    }

    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">static</span> <span style="color:#569CD6;">bool</span> Check&lt;TInput&gt;(<span style="color:#569CD6;">this</span> TInput o, Func&lt;TInput, <span style="color:#569CD6;">bool</span>&gt; evaluator) <span style="color:#569CD6;">where</span> TInput : <span style="color:#569CD6;">class</span>
    {
        <span style="color:#569CD6;">if</span> (o == <span style="color:#569CD6;">null</span>) <span style="color:#569CD6;">return</span> <span style="color:#569CD6;">false</span>;
        <span style="color:#569CD6;">return</span> evaluator(o);
    }

    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">static</span> TInput If&lt;TInput&gt;(<span style="color:#569CD6;">this</span> TInput o, Func&lt;TInput, <span style="color:#569CD6;">bool</span>&gt; evaluator) <span style="color:#569CD6;">where</span> TInput : <span style="color:#569CD6;">class</span>
    {
        <span style="color:#569CD6;">if</span> (o == <span style="color:#569CD6;">null</span>) <span style="color:#569CD6;">return</span> <span style="color:#569CD6;">null</span>;
        <span style="color:#569CD6;">return</span> evaluator(o) ? o : <span style="color:#569CD6;">null</span>;
    }

    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">static</span> TInput Unless&lt;TInput&gt;(<span style="color:#569CD6;">this</span> TInput o, Func&lt;TInput, <span style="color:#569CD6;">bool</span>&gt; evaluator) <span style="color:#569CD6;">where</span> TInput : <span style="color:#569CD6;">class</span>
    {
        <span style="color:#569CD6;">if</span> (o == <span style="color:#569CD6;">null</span>) <span style="color:#569CD6;">return</span> <span style="color:#569CD6;">null</span>;
        <span style="color:#569CD6;">return</span> evaluator(o) ? <span style="color:#569CD6;">null</span> : o;
    }

    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">static</span> TInput Do&lt;TInput&gt;(<span style="color:#569CD6;">this</span> TInput o, Action&lt;TInput&gt; action) <span style="color:#569CD6;">where</span> TInput : <span style="color:#569CD6;">class</span>
    {
        <span style="color:#569CD6;">if</span> (o == <span style="color:#569CD6;">null</span>) <span style="color:#569CD6;">return</span> <span style="color:#569CD6;">null</span>;
        action(o);
        <span style="color:#569CD6;">return</span> o;
    }

    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">static</span> List&lt;TInput&gt; Delete&lt;TInput&gt;(<span style="color:#569CD6;">this</span> List&lt;TInput&gt; o, Func&lt;TInput, <span style="color:#569CD6;">bool</span>&gt; evaluator) <span style="color:#569CD6;">where</span> TInput : <span style="color:#569CD6;">class</span>
    {
        <span style="color:#569CD6;">var</span> listToDelete = o.Where(evaluator).ToList();
        <span style="color:#569CD6;">foreach</span> (<span style="color:#569CD6;">var</span> input <span style="color:#569CD6;">in</span> listToDelete)
        {
            o.Remove(input);
        }
        <span style="color:#569CD6;">return</span> o;
    }
}


<span style="color:#569CD6;">public</span> <span style="color:#569CD6;">class</span> LambdaComparer&lt;T&gt; : IEqualityComparer&lt;T&gt;
{
    <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">readonly</span> Func&lt;T, T, <span style="color:#569CD6;">bool</span>&gt; _lambdaComparer;
    <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">readonly</span> Func&lt;T, <span style="color:#569CD6;">int</span>&gt; _lambdaHash;

    <span style="color:#569CD6;">public</span> LambdaComparer(Func&lt;T, T, <span style="color:#569CD6;">bool</span>&gt; lambdaComparer) :
        <span style="color:#569CD6;">this</span>(lambdaComparer, o =&gt; <span style="color:#B5CEA8;">0</span>)
    {
    }

    <span style="color:#569CD6;">public</span> LambdaComparer(Func&lt;T, T, <span style="color:#569CD6;">bool</span>&gt; lambdaComparer, Func&lt;T, <span style="color:#569CD6;">int</span>&gt; lambdaHash)
    {
        <span style="color:#569CD6;">if</span> (lambdaComparer == <span style="color:#569CD6;">null</span>)
            <span style="color:#569CD6;">throw</span> <span style="color:#569CD6;">new</span> ArgumentNullException(<span style="color:#D69D85;">&quot;lambdaComparer&quot;</span>);
        <span style="color:#569CD6;">if</span> (lambdaHash == <span style="color:#569CD6;">null</span>)
            <span style="color:#569CD6;">throw</span> <span style="color:#569CD6;">new</span> ArgumentNullException(<span style="color:#D69D85;">&quot;lambdaHash&quot;</span>);

        _lambdaComparer = lambdaComparer;
        _lambdaHash = lambdaHash;
    }

    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">bool</span> Equals(T x, T y)
    {
        <span style="color:#569CD6;">return</span> _lambdaComparer(x, y);
    }

    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">int</span> GetHashCode(T obj)
    {
        <span style="color:#569CD6;">return</span> _lambdaHash(obj);
    }
}
</pre></div>
"""""
),
            ["""2013-06-01-Bootstrap-+-Recaptcha-Css-problem"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Bootstrap + Recaptcha. Css problem
""""",
["""date"""] =
"""""
 2013-06-01
""""",
["""tags"""] =
"""""
 javascript
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<p>If you use bootstrap and recaptcha, you may face a problem like wrong padding or margin.</p>
<p>You should add next css style to yours:</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#A31515;">body</span>{ <span style="color:#FF0000;">line-height</span>:<span style="color:#569CD6;">1</span>}
</pre></div>
<p>And all will be OK ! Enjoy!</p>

"""""
),
            ["""2013-06-25-SMO-Scripter-Create-script-of-DB"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 SMO Scripter. Create script of DB
""""",
["""date"""] =
"""""
 2013-06-25
""""",
["""tags"""] =
"""""
 dotnet
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<p>It is possible to create script of MSSQL using SMO: (<a href="http://pastebin.com/AQkprTS7#">link</a>)</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">private</span> <span style="color:#569CD6;">static</span> <span style="color:#569CD6;">void</span> Main(<span style="color:#569CD6;">string</span>[] args)
{
    <span style="color:#569CD6;">var</span> arguments = args.Select(x =&gt; x.ToLower()).ToList();
    <span style="color:#569CD6;">if</span> (arguments.Count == <span style="color:#B5CEA8;">0</span> || arguments.Contains(<span style="color:#D69D85;">&quot;-help&quot;</span>))
    {
        Console.WriteLine(<span style="color:#D69D85;">&quot;-d - Database Name&quot;</span>);
        Console.WriteLine(<span style="color:#D69D85;">&quot;-i - Output Sql File Name&quot;</span>);
        Console.WriteLine(<span style="color:#D69D85;">&quot;-s - Server Instance&quot;</span>);
        Console.WriteLine(<span style="color:#D69D85;">&quot;-u - User Name&quot;</span>);
        Console.WriteLine(<span style="color:#D69D85;">&quot;-p - Password&quot;</span>);
        Console.WriteLine(<span style="color:#D69D85;">&quot;It should be &#39;tables.txt&#39; file in folder with names of tables to script; if it does not exist the application scripts all tables with prefix &#39;GMP_&#39;&quot;</span>);
        Console.ReadKey();
    }
    <span style="color:#569CD6;">else</span> <span style="color:#569CD6;">if</span> (arguments.Count &gt; <span style="color:#B5CEA8;">1</span> &amp;&amp; arguments.Contains(<span style="color:#D69D85;">&quot;-d&quot;</span>) &amp;&amp; args.Contains(<span style="color:#D69D85;">&quot;-i&quot;</span>))
    {
        <span style="color:#569CD6;">if</span> (arguments.Count &lt;= arguments.IndexOf(<span style="color:#D69D85;">&quot;-d&quot;</span>) + <span style="color:#B5CEA8;">1</span>)
        {
            <span style="color:#569CD6;">throw</span> <span style="color:#569CD6;">new</span> ArgumentException(<span style="color:#D69D85;">&quot;Database Name&quot;</span>);
        }
        <span style="color:#569CD6;">if</span> (arguments.Count &lt;= argumSMO Scripter. Create script of DBents.IndexOf(<span style="color:#D69D85;">&quot;-i&quot;</span>) + <span style="color:#B5CEA8;">1</span>)
        {
            <span style="color:#569CD6;">throw</span> <span style="color:#569CD6;">new</span> ArgumentException(<span style="color:#D69D85;">&quot;Output Sql File Name&quot;</span>);
        }
        <span style="color:#569CD6;">var</span> dbName = arguments[arguments.IndexOf(<span style="color:#D69D85;">&quot;-d&quot;</span>) + <span style="color:#B5CEA8;">1</span>];
        <span style="color:#569CD6;">var</span> outputFileName = arguments[arguments.IndexOf(<span style="color:#D69D85;">&quot;-i&quot;</span>) + <span style="color:#B5CEA8;">1</span>];
        <span style="color:#569CD6;">var</span> srv = <span style="color:#569CD6;">new</span> Server();
        <span style="color:#569CD6;">if</span> (arguments.Contains(<span style="color:#D69D85;">&quot;-s&quot;</span>) &amp;&amp; args.Contains(<span style="color:#D69D85;">&quot;-u&quot;</span>) &amp;&amp; arguments.Contains(<span style="color:#D69D85;">&quot;-p&quot;</span>))
        {
            <span style="color:#569CD6;">if</span> (arguments.Count &lt;= arguments.IndexOf(<span style="color:#D69D85;">&quot;-s&quot;</span>) + <span style="color:#B5CEA8;">1</span>)
            {
                <span style="color:#569CD6;">throw</span> <span style="color:#569CD6;">new</span> ArgumentException(<span style="color:#D69D85;">&quot;Server Instance&quot;</span>);
            }
            <span style="color:#569CD6;">if</span> (arguments.Count &lt;= arguments.IndexOf(<span style="color:#D69D85;">&quot;-u&quot;</span>) + <span style="color:#B5CEA8;">1</span>)
            {
                <span style="color:#569CD6;">throw</span> <span style="color:#569CD6;">new</span> ArgumentException(<span style="color:#D69D85;">&quot;User Name&quot;</span>);
            }
            <span style="color:#569CD6;">if</span> (arguments.Count &lt;= arguments.IndexOf(<span style="color:#D69D85;">&quot;-p&quot;</span>) + <span style="color:#B5CEA8;">1</span>)
            {
                <span style="color:#569CD6;">throw</span> <span style="color:#569CD6;">new</span> ArgumentException(<span style="color:#D69D85;">&quot;Password&quot;</span>);
            }
            <span style="color:#569CD6;">var</span> connection = <span style="color:#569CD6;">new</span> ServerConnection(arguments[arguments.IndexOf(<span style="color:#D69D85;">&quot;-s&quot;</span>) + <span style="color:#B5CEA8;">1</span>], arguments[arguments.IndexOf(<span style="color:#D69D85;">&quot;-u&quot;</span>) + <span style="color:#B5CEA8;">1</span>], arguments[arguments.IndexOf(<span style="color:#D69D85;">&quot;-p&quot;</span>) + <span style="color:#B5CEA8;">1</span>]);
            srv = <span style="color:#569CD6;">new</span> Server(connection);
        }
        <span style="color:#57A64A;">// read names of tables</span>
        <span style="color:#569CD6;">var</span> tablesFromFile = <span style="color:#569CD6;">new</span> List&lt;<span style="color:#569CD6;">string</span>&gt;();
        <span style="color:#569CD6;">if</span> (File.Exists(<span style="color:#D69D85;">&quot;tables.txt&quot;</span>))
        {
            <span style="color:#569CD6;">using</span> (<span style="color:#569CD6;">var</span> file = File.OpenText(<span style="color:#D69D85;">&quot;tables.txt&quot;</span>))
            {
                <span style="color:#569CD6;">while</span> (file.Peek() &gt; <span style="color:#B5CEA8;">0</span>)
                {
                    tablesFromFile.Add(file.ReadLine());
                }
            }
        }
        Database db = srv.Databases[dbName];
        <span style="color:#569CD6;">var</span> dropKeys = <span style="color:#569CD6;">new</span> Scripter(srv) {Options = {ScriptDrops = <span style="color:#569CD6;">true</span>, IncludeIfNotExists = <span style="color:#569CD6;">true</span>, DriForeignKeys = <span style="color:#569CD6;">true</span>}};
        <span style="color:#569CD6;">var</span> listOfScripts = <span style="color:#569CD6;">new</span> List&lt;Scripter&gt;
                            {
                                <span style="color:#569CD6;">new</span> Scripter(srv) {Options = {ScriptDrops = <span style="color:#569CD6;">true</span>, IncludeIfNotExists =<span style="color:#569CD6;">true</span>, DriAllKeys = <span style="color:#569CD6;">false</span>}},
                                <span style="color:#569CD6;">new</span> Scripter(srv) {Options = {ScriptDrops = <span style="color:#569CD6;">false</span>, ScriptSchema = <span style="color:#569CD6;">true</span>, WithDependencies = <span style="color:#569CD6;">false</span>, DriIndexes = <span style="color:#569CD6;">true</span>, DriClustered = <span style="color:#569CD6;">true</span>, IncludeIfNotExists = <span style="color:#569CD6;">true</span>, DriAllKeys = <span style="color:#569CD6;">false</span>}},
                                <span style="color:#569CD6;">new</span> Scripter(srv) {Options = {ScriptDrops = <span style="color:#569CD6;">false</span>, ScriptSchema = <span style="color:#569CD6;">true</span>, DriDefaults = <span style="color:#569CD6;">false</span>, DriIndexes = <span style="color:#569CD6;">false</span>, DriPrimaryKey = <span style="color:#569CD6;">false</span>, DriClustered = <span style="color:#569CD6;">false</span>, Default = <span style="color:#569CD6;">false</span>, DriAll =<span style="color:#569CD6;">false</span>, DriForeignKeys = <span style="color:#569CD6;">true</span>, IncludeIfNotExists = <span style="color:#569CD6;">true</span>, DriAllKeys = <span style="color:#569CD6;">false</span>}},
                                <span style="color:#569CD6;">new</span> Scripter(srv) {Options = {DriIndexes = <span style="color:#569CD6;">true</span>, Default = <span style="color:#569CD6;">true</span>, DriDefaults = <span style="color:#569CD6;">true</span>, DriClustered = <span style="color:#569CD6;">false</span>, IncludeIfNotExists = <span style="color:#569CD6;">true</span>, DriAll = <span style="color:#569CD6;">true</span>, DriAllConstraints = <span style="color:#569CD6;">true</span>, DriAllKeys = <span style="color:#569CD6;">true</span>, SchemaQualify = <span style="color:#569CD6;">true</span>, SchemaQualifyForeignKeysReferences = <span style="color:#569CD6;">true</span>, NoCollation = <span style="color:#569CD6;">true</span>}}
                            };
        <span style="color:#569CD6;">using</span> (<span style="color:#569CD6;">var</span> file = File.CreateText(outputFileName))
        {
            <span style="color:#569CD6;">foreach</span> (Table tb <span style="color:#569CD6;">in</span> db.Tables)
            {
                <span style="color:#569CD6;">if</span> ((tablesFromFile.Count &gt; <span style="color:#B5CEA8;">0</span> &amp;&amp; tablesFromFile.Contains(tb.Name) || (tablesFromFile.Count== <span style="color:#B5CEA8;">0</span> &amp;&amp; tb.Name.StartsWith(<span style="color:#D69D85;">&quot;GMP_&quot;</span>))))
                {
                    <span style="color:#569CD6;">if</span> (tb.IsSystemObject == <span style="color:#569CD6;">false</span>)
                    {
                        <span style="color:#569CD6;">foreach</span> (ForeignKey foreignKey <span style="color:#569CD6;">in</span> tb.ForeignKeys)
                        {
                            System.Collections.Specialized.StringCollection scd = dropKeys.Script(<span style="color:#569CD6;">new</span>[] {foreignKey.Urn });
                            <span style="color:#569CD6;">foreach</span> (<span style="color:#569CD6;">string</span> st <span style="color:#569CD6;">in</span> scd)
                            {
                                file.WriteLine(st);
                                file.WriteLine(<span style="color:#D69D85;">&quot;GO&quot;</span>);
                            }
                        }
                        file.WriteLine();
                    }
                }
            }
            <span style="color:#569CD6;">foreach</span> (<span style="color:#569CD6;">var</span> script <span style="color:#569CD6;">in</span> listOfScripts)
            {
                <span style="color:#569CD6;">foreach</span> (Table tb <span style="color:#569CD6;">in</span> db.Tables)
                {
                    <span style="color:#569CD6;">if</span> ((tablesFromFile.Count &gt; <span style="color:#B5CEA8;">0</span> &amp;&amp; tablesFromFile.Contains(tb.Name) ||(tablesFromFile.Count == <span style="color:#B5CEA8;">0</span> &amp;&amp; tb.Name.StartsWith(<span style="color:#D69D85;">&quot;GMP_&quot;</span>))))
                    {
                        <span style="color:#569CD6;">if</span> (tb.IsSystemObject == <span style="color:#569CD6;">false</span>)
                        {
                            System.Collections.Specialized.StringCollection scd = script.Script(<span style="color:#569CD6;">new</span>[] {tb.Urn });
                            <span style="color:#569CD6;">foreach</span> (<span style="color:#569CD6;">string</span> st <span style="color:#569CD6;">in</span> scd)
                            {
                                file.WriteLine(st);
                                file.WriteLine(<span style="color:#D69D85;">&quot;GO&quot;</span>);
                            }
                            file.WriteLine();
                        }
                    }
                }
            }
        }
    }
}
</pre></div>
"""""
),
            ["""2013-07-21-Nice-To-Have-Links"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Nice to have links
""""",
["""date"""] =
"""""
 2023-07-21
""""",
["""tags"""] =
"""""
 general links useful
""""",
["""categories"""] =
"""""
 internet
""""",
 },
"""""
<ul>
<li><a href="https://streamurl.link/">https://streamurl.link/</a></li>
</ul>

"""""
),
            ["""2013-07-28-Bootstrap-datepicker-Week-mode-view"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Bootstrap datepicker Week mode view
""""",
["""date"""] =
"""""
 2013-07-28
""""",
["""tags"""] =
"""""
 javascript
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<p>I have updated bootstrap datepicker to new view mode: week.</p>
<p>The source code is <a href="/code/bootstrap-datepicker.js">here</a></p>

"""""
),
            ["""2014-06-04-Light-version-of-Monodruid"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Light version of Monodruid
""""",
["""date"""] =
"""""
 2014-06-04
""""",
["""tags"""] =
"""""
 dotnet winrt
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<p>I have created the light version of <a href="https://bitbucket.org/mayastudios/monodroid-unittest/wiki/Home">MonoDroid Unit Testing framework</a>.</p>
<p>Please <a href="https://bitbucket.org/upyl/mono-unitetsting-light">look</a> and use if you need.</p>

"""""
),
            ["""2014-07-07-Fixed-header-or-column-for-HTML-table-using-JQuery"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Fixed header or column for HTML table using JQuery
""""",
["""date"""] =
"""""
 2014-07-07
""""",
["""tags"""] =
"""""
 javascript
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<p>I have created one more plugin for HTML table. It fixes the head of a table on the page. <a href="https://bitbucket.org/upyl/fixedheader">Please see it</a>. The main feature is supporting of overflow parent element.</p>
<p>Some images of plugin:</p>
<p><img src="./images/fixed_header1.png" alt="example1" /></p>
<p>And another plugin <a href="https://bitbucket.org/upyl/fixedcolumn">https://bitbucket.org/upyl/fixedcolumn</a> to fix column of table.</p>
<p><img src="./images/fixed_header2.png" alt="example2" /></p>

"""""
),
            ["""2014-07-14-FuelUX-Tree-additional-behavior"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 FuelUX Tree additional behavior
""""",
["""date"""] =
"""""
 2014-07-14
""""",
["""tags"""] =
"""""
 javascript
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<p>Add &quot;Show All&quot; to the FuelUX Tree like this.</p>
<p><img src="./images/fuelux-tree.gif" alt="example" /></p>
<p>There is the <a href="https://exacttarget.github.io/fuelux/#tree">tree plugin</a>. You can add the next code after initialization of the tree:</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
scope.find(<span style="color:#D69D85;">&#39;#MyTree&#39;</span>).on(<span style="color:#D69D85;">&#39;selected&#39;</span>, <span style="color:#569CD6;">function</span> (event, data) {
    <span style="color:#569CD6;">if</span> (data.target.additionalParameters.id == 0) {
        scope.find(<span style="color:#D69D85;">&#39;#MyTree&#39;</span>).find(<span style="color:#D69D85;">&#39;.tree-item&#39;</span>).removeClass(<span style="color:#D69D85;">&#39;tree-selected&#39;</span>).find(<span style="color:#D69D85;">&#39;i&#39;</span>).removeClass(<span style="color:#D69D85;">&#39;icon-ok&#39;</span>).addClass(<span style="color:#D69D85;">&#39;tree-dot&#39;</span>);
        scope.find(<span style="color:#D69D85;">&#39;#MyTree&#39;</span>).find(<span style="color:#D69D85;">&#39;.tree-item:eq(1)&#39;</span>).addClass(<span style="color:#D69D85;">&#39;tree-selected&#39;</span>).find(<span style="color:#D69D85;">&#39;i&#39;</span>).removeClass(<span style="color:#D69D85;">&#39;tree-dot&#39;</span>).addClass(<span style="color:#D69D85;">&#39;icon-ok&#39;</span>);
        scope.find(<span style="color:#D69D85;">&#39;#MyTree&#39;</span>).find(<span style="color:#D69D85;">&#39;.tree-folder-header&gt; i.icon-ok&#39;</span>).remove();
    }
    <span style="color:#569CD6;">else</span> {
        scope.find(<span style="color:#D69D85;">&#39;#MyTree&#39;</span>).find(<span style="color:#D69D85;">&#39;.tree-item:eq(1)&#39;</span>).removeClass(<span style="color:#D69D85;">&#39;tree-selected&#39;</span>).find(<span style="color:#D69D85;">&#39;i&#39;</span>).removeClass(<span style="color:#D69D85;">&#39;icon-ok&#39;</span>).addClass(<span style="color:#D69D85;">&#39;tree-dot&#39;</span>);
        <span style="color:#569CD6;">if</span> (data.target.additionalParameters.type == <span style="color:#D69D85;">&#39;anyOther&#39;</span>) {
            data.element.closest(<span style="color:#D69D85;">&#39;.tree-folder-content&#39;</span>).find(<span style="color:#D69D85;">&#39;.tree-item:gt(0)&#39;</span>).removeClass(<span style="color:#D69D85;">&#39;tree-selected&#39;</span>).find(<span style="color:#D69D85;">&#39;i&#39;</span>).removeClass(<span style="color:#D69D85;">&#39;icon-ok&#39;</span>).addClass(<span style="color:#D69D85;">&#39;tree-dot&#39;</span>);
        }
    }

});
</pre></div>
"""""
),
            ["""2014-09-29-WinRT-Checksum-for-large-files"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 WinRT Checksum for large files
""""",
["""date"""] =
"""""
 2014-09-29
""""",
["""tags"""] =
"""""
 dotnet winrt
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<p>There is a good <a href="http://stackoverflow.com/questions/13534334/how-to-compute-hash-md5-or-sha-of-a-large-file-with-c-sharp-in-windows-store-a">question</a> about this.</p>
<p>Also there is a code. I have used MD5 algorithm for my purposes.</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">public</span> <span style="color:#569CD6;">async</span> Task&lt;<span style="color:#569CD6;">string</span>&gt; GetFileChecksumAsync(<span style="color:#569CD6;">string</span> fileName)
{
  HashAlgorithmProvider alg = Windows.Security.Cryptography.Core.HashAlgorithmProvider.OpenAlgorithm(HashAlgorithmNames.Md5);
  IStorageFile stream = <span style="color:#569CD6;">await</span> openFile(fileName);
  <span style="color:#569CD6;">using</span> (<span style="color:#569CD6;">var</span> inputStream = <span style="color:#569CD6;">await</span> stream.OpenReadAsync())
  {
    Windows.Storage.Streams.Buffer buffer = <span style="color:#569CD6;">new</span> Windows.Storage.Streams.Buffer(BUFFER_SIZE);
    <span style="color:#569CD6;">var</span> hash = alg.CreateHash();

    <span style="color:#569CD6;">while</span> (<span style="color:#569CD6;">true</span>)
    {
      <span style="color:#569CD6;">await</span> inputStream.ReadAsync(buffer, BUFFER_SIZE, InputStreamOptions.None);
      <span style="color:#569CD6;">if</span> (buffer.Length &gt; <span style="color:#B5CEA8;">0</span>)
        hash.Append(buffer);
      <span style="color:#569CD6;">else</span>
        <span style="color:#569CD6;">break</span>;
    }

    <span style="color:#569CD6;">return</span> CryptographicBuffer.EncodeToHexString(hash.GetValueAndReset()).ToUpper();
  }
}
</pre></div>
"""""
),
            ["""2014-10-01-Show-information-about-types-in-tooltip"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Show information about types in tooltip
""""",
["""date"""] =
"""""
 2014-10-01
""""",
["""tags"""] =
"""""
 javascript
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<p>The value of a point is the sum of values of types ('one', 'two').
<a href="http://jsfiddle.net/yo4L215v/">Link</a> - 26 December, 2014</p>
<p><a href="http://api.highcharts.com/highcharts#tooltip.formatter">Additional info</a></p>
<p><img src="./images/highchart_add_info.png" alt="image" /></p>
<p>The code:</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
$(<span style="color:#569CD6;">function</span> () {
    $(<span style="color:#D69D85;">&#39;#container&#39;</span>).highcharts({
        chart: {
            type: <span style="color:#D69D85;">&#39;column&#39;</span>
        },

        tooltip: {
            formatter: <span style="color:#569CD6;">function</span> () {
                <span style="color:#569CD6;">var</span> typeInf = <span style="color:#D69D85;">&#39;&#39;</span>;
                <span style="color:#569CD6;">var</span> types = <span style="color:#569CD6;">this</span>.point.Types;
                $.each(types, <span style="color:#569CD6;">function</span> (index) {
                    typeInf += <span style="color:#D69D85;">&#39;&lt;b&gt;&#39;</span> + types[index][0] + <span style="color:#D69D85;">&#39;&lt;/b&gt; &#39;</span> + types[index][1] + <span style="color:#D69D85;">&#39;&lt;br/&gt;&#39;</span>;
                });

                <span style="color:#569CD6;">return</span> <span style="color:#D69D85;">&#39;The value for &lt;b&gt;&#39;</span> + <span style="color:#569CD6;">this</span>.x +
                    <span style="color:#D69D85;">&#39;&lt;/b&gt; is &lt;b&gt;&#39;</span> + <span style="color:#569CD6;">this</span>.y + <span style="color:#D69D85;">&#39;&lt;/b&gt;&lt;br/&gt;&#39;</span> + typeInf;
            }
        },

        xAxis: {
            categories: [<span style="color:#D69D85;">&#39;Green&#39;</span>, <span style="color:#D69D85;">&#39;Pink&#39;</span>]
        },

        series: [{
            data: [{
                name: <span style="color:#D69D85;">&#39;Point 1&#39;</span>,
                Types: [[<span style="color:#D69D85;">&quot;one&quot;</span>, 1], [<span style="color:#D69D85;">&quot;two&quot;</span>, 1]],
                color: <span style="color:#D69D85;">&#39;#00FF00&#39;</span>,
                y: 2
            }, {
                name: <span style="color:#D69D85;">&#39;Point 2&#39;</span>,
                Types: [[<span style="color:#D69D85;">&quot;one&quot;</span>, 2], [<span style="color:#D69D85;">&quot;two&quot;</span>, 3]],
                color: <span style="color:#D69D85;">&#39;#FF00FF&#39;</span>,
                y: 5
            }]
        }]
    });
});
</pre></div>
"""""
),
            ["""2015-05-21-Notes-from-'Introduction-to-Linux'"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Notes from 'Introduction to Linux'
""""",
["""date"""] =
"""""
 2015-05-21
""""",
["""tags"""] =
"""""
 linux
""""",
["""categories"""] =
"""""
 administration
""""",
 },
"""""
<p><a href="https://www.edx.org/course/introduction-linux-linuxfoundationx-lfs101x-0">course link</a></p>
<p>Linux <a href="http://www.tldp.org/LDP/sag/html/filesystems.html">Filesystem</a></p>
<ul>
<li>Conventional disk filesystems: ext2, ext3, ext4, XFS, Btrfs, JFS,NTFS, etc.</li>
<li>Flash storage filesystems: ubifs, JFFS2, YAFFS, etc.</li>
<li>Database filesystems</li>
<li>Special purpose filesystems: procfs, sysfs, tmpfs, debugfs, etc.</li>
</ul>
<p><a href="https://en.wikipedia.org/wiki/Disk_partitioning">Partitions</a></p>
<ol>
<li>Windows
<ul>
<li>Partition: Disk1</li>
<li>Filesystem type: NTFS/FAT32</li>
<li>Mounting Parameters: DriveLetter</li>
<li>Base Folder of OS: C drive</li>
</ul>
</li>
<li>Linux
<ul>
<li>Partition: /dev/sda1</li>
<li>Filesystem type: EXT3/EXT4/XFS</li>
<li>Mounting Parameters: MountPoint</li>
<li>Base Folder of OS: /</li>
</ul>
</li>
</ol>
<p><a href="https://en.wikipedia.org/wiki/Filesystem_Hierarchy_Standard">The Filesystem Hierarchy Standard</a></p>
<p><img src="./images/linux_foundation_filesystem.jpg" alt="File System" /></p>
<p>The Boot Process</p>
<p><img src="./images/linux_foundation_boot_process.jpg" alt="Boot Process" /></p>
<p>Choosing a <a href="https://en.wikipedia.org/wiki/Linux_distribution">Linux Distribution</a></p>
<p><img src="./images/linux_foundation_choose.jpg" alt="Choose" /></p>

"""""
),
            ["""2016-02-04-GitVersion-+-TC"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 GitVersion + TC
""""",
["""date"""] =
"""""
 2016-02-04
""""",
["""tags"""] =
"""""
 git
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<p>GitVersion is the utility to set up version of deployed assemblies using information from Git.</p>
<p>There is an easy way to set up it on your TC build server. Go to MetaRunner and download MR_GitVersion3.xml file. You should put this file to your build server. The path is C:\ProgramData\JetBrains\TeamCity\config\projects{Project}\pluginData\metaRunners. The first part of this part you can find in Global settings of Team City. Also you have to restart your server after this.</p>
<p>So you will be able to set up GitVersion build step which just gran information about your version from Git tags and put it to your assemblies.</p>
<p>TC to build only commits with tags (RC-*). VCS Root set up:</p>
<p><img src="./images/git_version_step3.PNG" alt="Image One" />
<img src="./images/git_version_step3_2.PNG" alt="Image Two" /></p>
<p>Trigger:</p>
<p><img src="./images/git_version_step3_3.PNG" alt="Image Three" /></p>

"""""
),
            ["""2016-09-19-Add-dotnet-command-to-alias-of-bash"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Add dotnet command to alias of bash
""""",
["""date"""] =
"""""
 2016-09-19
""""",
["""tags"""] =
"""""
 linux dotnet
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<h3 id="dotnet-commands">Dotnet commands</h3>
<p>I am using sample application created by <code>dotnet run</code>.</p>
<p>To run dotnet core application on Ubuntu with <strong>compilation</strong>:</p>
<pre><code class="language-docker">dotnet run -p {pathToFolderWithProjectJson} -- {arguments}
</code></pre>
<p>To run compiled application:</p>
<pre><code class="language-bat">dotnet {pathToCompiledDll} {arguments}
</code></pre>
<p>where <code>pathToCompiledDll</code> is a path to dll (it is in <code>/bin/Debug/netcoreapp1.1/</code> be default).</p>
<h3 id="bash-commands">Bash commands</h3>
<p>To add dotnet alias (shortcut) to bash set of commands:</p>
<pre><code class="language-bat">nano ~/.bash_aliases
</code></pre>
<p>And you need to add the next line to this file (bash_aliases):</p>
<pre><code class="language-bat">alias helloWorld=&quot;dotnet run -p ~/projects/helloWorld -- ~/Peter&quot;
</code></pre>
<p>where</p>
<ul>
<li>~/projects/helloWorld is path to the project;</li>
<li>~/Peter is an argument passed to the application;</li>
</ul>
<p>Now you are able to run <code>helloWorld</code> in bash terminal after restarting it. You should see <em>Hello World</em>.</p>
<p>Links:</p>
<ul>
<li><a href="http://stackoverflow.com/questions/5658781/how-do-i-create-shortcut-commands-in-the-ubuntu-terminal">How do I create shortcut commands in the Ubuntu terminal?</a></li>
<li><a href="https://docs.microsoft.com/en-us/dotnet/articles/core/tools/dotnet-run">dotnet run</a></li>
<li><a href="http://askubuntu.com/questions/1414/how-to-create-a-permanent-alias#5278">How to create a permanent “alias”?</a></li>
</ul>

"""""
),
            ["""2016-09-24-Xamarin-Dev-Days-in-Warsaw"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Xamarin Dev Days in Warsaw
""""",
["""date"""] =
"""""
 2016-09-24
""""",
["""tags"""] =
"""""
 xamarin
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<p>Hi All, it is my overview of Xamarin Dev Days - short summary. Hope it will be useful to create an  impression what you can expect from this event.</p>
<p>My stream technology is server-side .NET or ASP.NET MVC. My current project is on .NET platform, the main technology is Windows Workflow Foundation and I am not using Xamarin platform. But I had a small experience in Xamarin that I got during working on my previous project.</p>
<p>Some time ago I had a chance to visit Xamarin Dev Days event in Warsaw. It was one day event in Warsaw Microsoft office. There were two part: the first one is generic information about Xamarin ecosystem and Azure Mobile Apps. The second one is hands on lab. So <a href="https://docs.google.com/presentation/d/1pbsv4otZvU88ABx4QSgyznxpqolMQ279QsjWh3WvPjQ/edit?usp=sharing">this presentation</a> has been created to summarize and do a short recap mentioned event.</p>
<h3 id="agenda">Agenda:</h3>
<ul>
<li>Introduction to Xamarin</li>
<li>Xamarin.Forms</li>
<li>Azure Mobile Apps</li>
<li>Sample application</li>
<li>Resources</li>
</ul>
<p><img src="./images/xam_dev_days_platform.png" alt="Xamarin Platform" /></p>
<p>The first thing that you should keep in mind when you are talking about Xamarin is that you are able to write application not using Visual Studio on Windows only, but also <a href="https://www.xamarin.com/studio">Xamarin Studio</a> on Mac. As I understand, usually people are using Visual Studio to develop Android and Phone applications and Xamarin Studio on Mac to develop IOS application. But, of course, the team is using one code base. The reason of this approach, that it is much more quicker to build IOS application on MAC directly, without remote building using Visual Studio on Windows.</p>
<p>The second thing is that Xamarin is not only about developing cross-platform applications using Visual Studio or Xamarin Studio, but Xamarin also provides possibility to test you application on various number of devices using <a href="https://www.xamarin.com/test-cloud">Xamarin Cloud</a>. As you can imagine, it is very expensive to buy all set of mobile devices for testing, so this cloud allows you to run your application on thousand of real devices in the cloud, analyze detailed test reports with results, screenshots, and performance metrics. Also it allows you to measure performance of your application. Sounds very cool, but there was a question from Xamarin Dev Days presenter about if there is someone who is using this cloud and nobody answered.</p>
<p>The third thing is about building and continuous integration. Actually it is not about Xamarin but about <a href="https://www.visualstudio.com/tfs/">TFS</a>(Team Foundation Server). You are able to install it on your private server or it is possible to use <a href="https://www.visualstudio.com/">Visual Studio Online</a> service from Microsoft. It is free for small teams. It provides opportunity to work with your code (git), use agile board to organize your work, set up your continuous integration project (pure version of team city), create test cases. I heard that they added Wiki also.</p>
<p>The last one is about distributing and monitoring. I can’t say a lot about distributing as I have never put any application to stores. As for monitoring, there is Xamarin Insight. It is the same approach as <a href="https://www.visualstudio.com/en-us/docs/insights/application-insights">Visual Studio Application Insights</a>. It is an extensible analytics service that helps you understand the performance and usage of your live mobile application. It's designed for developers, to help you continuously improve the performance and usability of your app. It <a href="http://www.joesauve.com/xamarin-insights-after-only-5-minutes-its-already-saving-my-arse/">allows</a>:</p>
<ul>
<li>see user sessions in real time</li>
<li>see which users are being affected by which errors</li>
<li>see stacktraces for each exception</li>
<li>see device stats for each exception (operating system, app version, network status, device orientation, jalbreak status, and bluetooth status)</li>
<li>see advanced reporting and filtering of aggregate exception statistics</li>
<li>setup webhooks for triggering actions on certain Insights events</li>
<li>integrate with third-party services (Campire, Github, HipChat, Jira, PivotalTracker, and Visual Studio Online)</li>
</ul>
<h3 id="approaches">Approaches:</h3>
<ul>
<li>Separate solutions for each platform (Android, IOS, Windows)
<ul>
<li>Many projects, many languages, many teams</li>
</ul>
</li>
<li>One universal solution (JS + HTML + CSS) - Cordova
<ul>
<li>Slow performance, limited native API</li>
</ul>
</li>
<li>Xamarin approach (shared code + platform specific UI)
<ul>
<li>Good performance, almost all native API</li>
</ul>
</li>
<li>ReactNative and NativeScript
<ul>
<li>Only Android and IOS (UWP in future)</li>
</ul>
</li>
</ul>
<p>Here I want to show the main ways to build mobile application.</p>
<ol>
<li>Of course, firstly it is native apps. It is clear. Swift, object-C for IOS, java is for Android, C# is  for Windows Phone. It means you should have and support many projects and many teams. It is a good option if you are planning to build complex and big mobile application. The best scenario is if this application has only mobile version.</li>
<li>Universal solution. You are able to use Cordova and build you application using JavaScript. Personally I really like this approach as you are able to build almost any type of application using Javascript now. To execute javascript on server - NodeJs. For desktop application there is Electron framework. Cordova is to create mobile applications. The problem here is performance. The resulting applications are hybrid, meaning that they are neither truly native mobile application (because all layout rendering is done via Web views instead of the platform's native UI framework) nor purely Web-based (because they are not just Web apps, but are packaged as apps for distribution and have access to native device APIs). [<a href="https://en.wikipedia.org/wiki/Apache_Cordova">link</a>]</li>
<li>And Xamarin. It looks like win-win strategy if you already have web or desktop application written on .NET. You are able to share code, get native performance (almost, depends how you are creating application, Xamarin.Forms, for example, can create non the best implementation), access to all native API (almost). If there is a new version of OS, need to wait implementation in Xamarin up to one month.</li>
<li><a href="https://www.reactnative.com/">ReactNative</a> and <a href="https://www.nativescript.org/">NativeScript</a> created and supported by Facebook and Telerik. ReactNative hasn’t final version still, but NativeScript has version 2.0. They are the most young libraries in the list. JavaScript is the language to write a code. But unlike Cordova transform Javascript elements to native UI elements. Support Android and IOS now. Microsoft is working to add UWP here (NativeScript). Looks like the most perspective platforms. You are able to use <a href="https://www.quora.com/What-are-the-key-difference-between-ReactNative-and-NativeScript/answer/Valentin-Stoychev">Angular2 + Typescript + NativeScript or ReactJs + ReactNative</a> to write mobile applications and share code also with your web version of application. Probably it is the best frameworks if your application is web first.</li>
</ol>
<h3 id="xamarin-features"><a href="https://www.xamarin.com/download-it">Xamarin features</a></h3>
<ul>
<li>Produce ARM binary for Apple store</li>
<li>Produce APK for Android</li>
<li>Possibility to use only one IDE (Visual Studio)</li>
<li><a href="%22https://developer.xamarin.com/guides/android/deployment,_testing,_and_metrics/debug-on-emulator/visual-studio-android-emulator/">Android Hyper-V</a> and <a href="https://developer.xamarin.com/guides/cross-platform/windows/ios-simulator/">IOS Remote emulators</a></li>
<li>Designers for IOS, Android and Windows Phone in Visual Studio</li>
<li>Xamarin Studio for Mac</li>
<li><a href="https://msdn.microsoft.com/en-us/library/hh848246.aspx">MVVM pattern</a> (XAML)</li>
</ul>
<p>Here I put the main interesting features of Xamarin:</p>
<ol>
<li>Xamarin <a href="https://www.xamarin.com/download-it#ios">allows</a> to ship native app bundles on the App Store. Ahead-of-Time (AOT) compiler compiles Xamarin.iOS apps directly to native ARM assembly code, meaning your app is a native platform binary.</li>
<li>As for Android, Xamarin.Android uses just-in-time compilation for sophisticated runtime optimization of your app’s performance, meaning your app is a native Android APK.</li>
<li>Also I talked that we are able to use only one IDE to develop applications in theory.</li>
<li>Microsoft Visual Studio 2015 includes an Android emulator that you can use as a target for debugging your Xamarin.Android app: Visual Studio Emulator for Android. This emulator uses the Hyper-V capabilities of your development computer, resulting in faster launch and execution times than the default emulator that comes with the Android SDK. Also it is possible to debug IOS in Windows using remote simulator.</li>
<li>Visual Studio supports also visual designers to build UI. It works almost the same like it works for WPF.</li>
<li>Also there is <a href="https://www.visualstudio.com/vs/visual-studio-mac/">Visual Studio for Mac</a>.</li>
<li>The Model-View-ViewModel (MVVM) architectural pattern was invented with XAML in mind. The pattern enforces a separation of the XAML user interface (the View) from the underlying data (the Model) through a class that serves as an intermediary between the View and the Model (the ViewModel). The View and the ViewModel are often connected through data bindings defined in the XAML file. The BindingContext for the View is usually an instance of the ViewModel. <a href="https://developer.xamarin.com/guides/xamarin-forms/xaml/xaml-basics/data_bindings_to_mvvm/">link</a></li>
</ol>
<h3 id="sharing-code"><a href="https://developer.xamarin.com/guides/cross-platform/application_fundamentals/building_cross_platform_applications/sharing_code_options/">Sharing code</a></h3>
<ul>
<li>Portable class library</li>
<li>Shared projects</li>
<li>Upcoming <a href="https://blogs.msdn.microsoft.com/dotnet/2016/09/26/introducing-net-standard/">.NET Standard 2.0</a></li>
</ul>
<p>Currently there are two ways to write shared code in Xamarin:</p>
<ol>
<li>Shared project. Unlike most other project types, a Shared Project has no 'output' assembly. During compilation, the files are treated as part of the referencing project and compiled into that DLL. If you wish to share your code as a DLL then Portable Class Libraries are a better solution. Shared code can be branched based on the platform using compiler directives (eg. using #if _<em>ANDROID</em>_ , as discussed in the Building Cross Platform Applications document).</li>
<li>Portable library. Only a subset of the .NET framework is available to use, determined by the profile selected (see the Introduction to PCL for more info).
Upcoming .net standard 2.0 will support Xamarin. Basically Microsoft introduced a new <a href="https://docs.microsoft.com/en-us/dotnet/articles/standard/library">.NET Standard Library</a>. The .NET Standard Library is a formal specification of .NET APIs that are intended to be available on all .NET runtimes. The motivation behind the Standard Library is establishing greater uniformity in the .NET ecosystem.</li>
</ol>
<h3 id="xamarin-plugins-nuget"><a href="https://developer.xamarin.com/guides/xamarin-forms/platform-features/plugins/">Xamarin plugins</a> (nuget)</h3>
<ul>
<li>Battery</li>
<li>Connectivity</li>
<li>Geolocation</li>
<li>Media</li>
<li>Settings</li>
<li>Text to speech</li>
<li>...</li>
</ul>
<p>Another one nice feature of Xamarin is Xamarin <a href="https://github.com/xamarin/XamarinComponents">plugins</a> that can be downloaded using nuget. These libraries allow you to use functionality that adds cross-platform functionality or abstracts platform specific functionality to a common API, like battery, geolocation, media and so on.</p>
<p>You are able to find the whole list of plugins <a href="https://components.xamarin.com/?category=plugins">here</a>.</p>
<h3 id="xamarin.forms"><a href="https://developer.xamarin.com/guides/xamarin-forms/">Xamarin.Forms</a></h3>
<ul>
<li>Shared UI</li>
<li><a href="https://developer.xamarin.com/guides/xamarin-forms/controls/">Pages, layouts, controls</a></li>
<li><a href="https://blog.xamarin.com/introduction-to-data-binding/">Two-ways data binding</a></li>
<li><a href="https://developer.xamarin.com/guides/xamarin-forms/user-interface/navigation/">Navigation</a></li>
<li><a href="https://blog.xamarin.com/creating-animations-with-xamarin-forms/">Animation</a></li>
<li><a href="https://developer.xamarin.com/guides/xamarin-forms/dependency-service/">Dependency service</a>, <a href="https://developer.xamarin.com/guides/xamarin-forms/messaging-center/">messaging center</a></li>
<li><a href="https://developer.xamarin.com/releases/xamarin-forms/xamarin-forms-2.0/2.0.0/">Xamarin.Forms 2.0</a> - Performance</li>
<li><a href="https://developer.xamarin.com/guides/xamarin-forms/themes/">Themes</a></li>
<li><a href="https://developer.xamarin.com/guides/xamarin-forms/datapages/">Data pages</a></li>
<li><a href="https://developer.xamarin.com/guides/xamarin-forms/user-interface/layouts/add-platform-controls/">Native embedding</a></li>
</ul>
<p>Use the Xamarin.Forms API provides a way to quickly build native apps for iOS, Android and Windows completely in C#. Xamarin.Forms is included with Visual Studio.</p>
<ol>
<li>Xamarin allows sharing not only code between platforms, but also UI. During compilation created abstract XAML is transformed to platform specific. For example, there is the next XAML element: Entry, what is TextBox in Windows Phone. So we have an platform-specific equivalent for every control from Xamarin.Form.</li>
<li>There are three main groups in Xamarin.Form:
<ul>
<li>A Xamarin.Forms.Page represents a View Controller in iOS or a Page in Windows Phone. On Android each page takes up the screen like an Activity, but Xamarin.Forms Pages are not Activities.</li>
<li>The Layout class in Xamarin.Forms is a specialized subtype of View, which acts as a container for other Layouts or Views. It typically contains logic to set the position and size of child elements in Xamarin.Forms applications.</li>
<li>Xamarin.Forms uses the word View to refer to visual objects such as buttons, labels or text entry boxes - which may be more commonly known as controls of widgets.</li>
</ul>
</li>
<li>Data binding connects two objects, called the source and the target. The source object provides the data. The target object, which must be a bindable property, will consume (and often display) data from the source object.</li>
<li>Xamarin.Forms provides a number of different page navigation experiences, depending upon the Page type being used: Tabbed Page, Hierarchical Navigation, CarouselPage and so on.</li>
<li>Xamarin.Forms includes its own animation infrastructure that allows for easy creation of simple animations, while also being versatile enough to create complex animations. The Xamarin.Forms animation classes target different properties of visual elements, with a typical animation progressively changing a property from one value to another over a period of time.</li>
<li>Xamarin.Forms allows developers to define behavior in platform-specific projects. DependencyService then finds the right platform implementation, allowing shared code to access the native functionality.</li>
<li>Xamarin.Forms MessagingCenter enables view models and other components to communicate with without having to know anything about each other besides a simple Message contract.</li>
<li>Native Embedding. Platform-specific controls can be directly added to a Xamarin.Forms layout. It is possible to add platform-specific controls to a Xamarin.Forms layout, and how to override the layout of custom controls in order to correct their measurement API usage.</li>
</ol>
<h3 id="azure-mobile-apps"><a href="https://azure.microsoft.com/en-us/documentation/articles/app-service-mobile-value-prop/">Azure Mobile Apps</a></h3>
<p><img src="./images/azure_mob_structure.png" alt="Azure Mobile" /></p>
<ul>
<li>Stable backend</li>
<li>Offline sync</li>
<li>Data storage (tables, sql)</li>
<li>Authentication (Microsoft, Google, Facebook, Twitter)</li>
<li>Push notifications</li>
</ul>
<p>Azure App Service is a fully managed Platform as a Service (PaaS) that brings a rich set of capabilities to web, mobile and integration scenarios.</p>
<ol>
<li>Build offline-ready apps with data sync.</li>
<li>Push Notifications allows you to engage your clients with instant push notifications on any device.</li>
<li>Authorization using different approaches</li>
<li>Save data.</li>
</ol>
<h3 id="take-a-look">Take a look</h3>
<ul>
<li><a href="https://github.com/MikeCodesDotNet/App-Service-Helpers">App Service Helpers</a></li>
<li><a href="https://github.com/azure-appservice-samples/ContosoMoments">Contoso Moments</a></li>
</ul>
<p>Want to mention two nice libraries/ applications:</p>
<ol>
<li>App Service Helpers (ASH) makes it as easy as possible to add data storage and authentication to your mobile app with Microsoft's Azure App Service Platform. ASH was built with the mobile developer in mind, and requires no previous experience with backends as a service (BaaS). This lib was developed as a supplemental library to Microsoft's Azure Client SDK. Rather than replacing this library, ASH extends it by lowering the barrier to entry for developers who wish to build cloud-connected mobile apps in C#.</li>
<li>It is a good example how to use Azure Mobile services. Contoso Moments is a photo sharing application that demonstrates the following features of Azure App Service:
<ul>
<li>App Service authentication/authorization</li>
<li>Continuous Integration and deployment</li>
<li>Mobile app server SDK</li>
<li>Mobile offline sync client SDK</li>
<li>Mobile file sync SDK</li>
<li>Mobile push notifications</li>
</ul>
</li>
</ol>
<h3 id="sample-application">Sample application</h3>
<p>I have created a small sample application. The source code is available <a href="./assets/WakeUp.zip">here</a>. It is simple carousel application that shows information about morning exercises.</p>
<h3 id="references">References:</h3>
<p>There are a list of references and interesting information about Xamarin. Thank you for reading. <a href="mailto:gromkaktus@gmail.com">Please feel free to ask</a> any questions, I will try to answer.</p>
<ul>
<li><a href="https://github.com/xamarin/dev-days-labs">Github dev-days-labs</a></li>
<li><a href="https://www.xamarin.com/dev-days">Xamarin Dev Days</a></li>
<li><a href="http://www.meetup.com/warsawmobiledevelopers/">Xamarin Warsaw Mobile Developers Group</a></li>
<li><a href="https://confluence.infusion.com/pages/viewpage.action?pageId=28582107">Xamarin Training Series</a></li>
<li><a href="https://confluence.infusion.com/display/innovationpractices/Xamarin+Bootcamp+Training">Xamarin bootcamp training</a></li>
<li><a href="https://developer.xamarin.com/">Xamarin Dev page</a></li>
<li><a href="https://docs.google.com/presentation/d/1pbsv4otZvU88ABx4QSgyznxpqolMQ279QsjWh3WvPjQ/edit?usp=sharing">Xamarin Dev days - presentation</a></li>
</ul>

"""""
),
            ["""2016-10-25-Use-WebSQL-and-IndexedDB-in-Typescript"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Use WebSQL and IndexedDB in Typescript
""""",
["""date"""] =
"""""
 2016-10-25
""""",
["""tags"""] =
"""""
 javascript
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<p>More information about <a href="https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API">IndexedDb</a> or <a href="https://www.w3.org/TR/webdatabase/">WebSQL</a>.</p>
<p>Let's define base interfaces for our task:</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">export</span> <span style="color:#569CD6;">interface</span> IItem {
    id: <span style="color:#569CD6;">string</span>;
    value: <span style="color:#569CD6;">string</span>;
}

<span style="color:#569CD6;">export</span> <span style="color:#569CD6;">interface</span> IStorage&lt;T <span style="color:#569CD6;">extends</span> IItem&gt; {
    <span style="color:#57A64A;">// Initial method to create storage</span>
    init(name: <span style="color:#569CD6;">string</span>): Observable&lt;IStorage&lt;T&gt;&gt;;

    <span style="color:#57A64A;">// Get the value by unique key</span>
    get(key: <span style="color:#569CD6;">string</span>): Observable&lt;T&gt;;

    <span style="color:#57A64A;">// Clear/remove all data in the storage</span>
    clear(): Observable&lt;T&gt;;

    <span style="color:#57A64A;">// Put specific value into the storage</span>
    put(value: T): Observable&lt;T&gt;;

    <span style="color:#57A64A;">// Get all values using the set of keys</span>
    getDenseBatch(keys: <span style="color:#569CD6;">string</span>[]): Observable&lt;T&gt;;

    <span style="color:#57A64A;">// Get all values from the storage</span>
    all(): Observable&lt;T&gt;;
}
</pre></div>
<p>Here I am using <a href="http://reactivex.io/">rxjs</a> to handle results. IItem is an interface for items which we are saving, IStorage is an interface for a specific storage.</p>
<h3 id="in-memory-implementation">In Memory implementation</h3>
<p>A short example how to implement mentioned interface using in-memory array:</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">export</span> <span style="color:#569CD6;">class</span> MemoryStorage&lt;T <span style="color:#569CD6;">extends</span> IItem&gt; <span style="color:#569CD6;">implements</span> IStorage&lt;T&gt; {
    <span style="color:#569CD6;">private</span> storage: { [key: <span style="color:#569CD6;">string</span>]: T } = {};

    init(name: <span style="color:#569CD6;">string</span>): Observable&lt;MemoryStorage&lt;T&gt;&gt; {
        <span style="color:#569CD6;">return</span> Observable.of(<span style="color:#569CD6;">this</span>);
    }

    get(key: <span style="color:#569CD6;">string</span>): Observable&lt;T&gt; {
        <span style="color:#569CD6;">return</span> Observable.of(<span style="color:#569CD6;">this</span>.storage[key]);
    }

    clear(): Observable&lt;T&gt; {
        <span style="color:#569CD6;">this</span>.storage = {};
        <span style="color:#569CD6;">return</span> Observable.empty&lt;T&gt;();
    }

    put(value: T): Observable&lt;T&gt; {
        <span style="color:#569CD6;">if</span> (!value.id) {
            value.id = Math.random().toString(36).substring(7);
        }
        <span style="color:#569CD6;">this</span>.storage[value.id] = value;
        <span style="color:#569CD6;">return</span> Observable.of(value);
    }

    getDenseBatch(keys: <span style="color:#569CD6;">string</span>[]): Observable&lt;T&gt; {
        <span style="color:#569CD6;">return</span> Observable.from(keys.map(x =&gt; <span style="color:#569CD6;">this</span>.storage[x]));
    }

    all(): Observable&lt;T&gt; {
        <span style="color:#569CD6;">return</span> Observable.from(Object.keys(<span style="color:#569CD6;">this</span>.storage).map(x =&gt; <span style="color:#569CD6;">this</span>.storage[x]));
    }
}
</pre></div>
<p>Simple implementation of IItem:</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">class</span> TestKeyValue <span style="color:#569CD6;">implements</span> IItem {
  <span style="color:#569CD6;">public</span> id: <span style="color:#569CD6;">string</span>;
  <span style="color:#569CD6;">public</span> value: <span style="color:#569CD6;">string</span>;
}
</pre></div>
<p>Unit tests for MemoryStorage:</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
describe(<span style="color:#D69D85;">&#39;MemoryStorage: Class&#39;</span>, () =&gt; {
  let key1 = <span style="color:#D69D85;">&#39;key1&#39;</span>, key2 = <span style="color:#D69D85;">&#39;key2&#39;</span>;
  let value1 = <span style="color:#D69D85;">&#39;value1&#39;</span>, value2 = <span style="color:#D69D85;">&#39;value2&#39;</span>;

  <span style="color:#569CD6;">function</span> init(): MemoryStorage&lt;TestKeyValue&gt; {
    let storage = <span style="color:#569CD6;">new</span> MemoryStorage&lt;TestKeyValue&gt;();
    storage.init(<span style="color:#D69D85;">&#39;test&#39;</span>);
    <span style="color:#569CD6;">return</span> storage;
  }

  it(<span style="color:#D69D85;">&#39;should create empty storage&#39;</span>, async(() =&gt; {
    let storage = init();
    storage.all().isEmpty().subscribe(isAny =&gt; expect(isAny).toBeTruthy());
  }));

  it(<span style="color:#D69D85;">&#39;should save one item&#39;</span>, async(() =&gt; {
    let storage = init();
    storage.put({ id: key1, value: value1 });
    storage.all().isEmpty().subscribe(isAny =&gt; expect(isAny).toBeFalsy());
  }));

  it(<span style="color:#D69D85;">&#39;should save/get one item&#39;</span>, async(() =&gt; {
    let storage = init();
    let item = { id: key1, value: value1 };
    storage.put(item);
    storage.get(key1).subscribe(value =&gt; expect(value).toEqual(item));
  }));

  it(<span style="color:#D69D85;">&#39;should save/get two items&#39;</span>, async(() =&gt; {
    let storage = init();
    let items = [{ id: key1, value: value1 }, { id: key2, value: value2 }];
    storage.put(items[0]);
    storage.put(items[1]);
    let i = 0;
    storage.getDenseBatch([key1, key2]).subscribe(value =&gt; expect(value).toEqual(items[i++]));
  }));

  it(<span style="color:#D69D85;">&#39;should clear saved items&#39;</span>, async(() =&gt; {
    let storage = init();
    let items = [{ id: key1, value: value1 }, { id: key2, value: value2 }];
    storage.put(items[0]);
    storage.put(items[1]);

    storage.clear();
    storage.all().isEmpty().subscribe(isAny =&gt; expect(isAny).toBeTruthy());
  }));
});
</pre></div><h3 id="websql-implementation">WebSQL implementation</h3>
<p>Current implementation just just for objects where key (string) is unique string value, value (string) is a payload.</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">export</span> <span style="color:#569CD6;">class</span> WebSQLStorage&lt;T <span style="color:#569CD6;">extends</span> IItem&gt; <span style="color:#569CD6;">implements</span> IStorage&lt;T&gt; {
    <span style="color:#569CD6;">private</span> db: Database;
    <span style="color:#569CD6;">private</span> databaseName: <span style="color:#569CD6;">string</span> = <span style="color:#D69D85;">&#39;TripNoteDB&#39;</span>;
    <span style="color:#569CD6;">private</span> name: <span style="color:#569CD6;">string</span>;

    <span style="color:#569CD6;">constructor</span>() {
        <span style="color:#569CD6;">this</span>.db = window.openDatabase(<span style="color:#569CD6;">this</span>.databaseName, <span style="color:#D69D85;">&#39;1.0&#39;</span>, `Store information`, 40 * 1024 * 1024);
    }

    init(name: <span style="color:#569CD6;">string</span>): Observable&lt;WebSQLStorage&lt;T&gt;&gt; {
        <span style="color:#569CD6;">this</span>.name = name;
        <span style="color:#569CD6;">return</span> Observable.create((observer: Observer&lt;WebSQLStorage&lt;T&gt;&gt;) =&gt; {
            <span style="color:#569CD6;">this</span>.db.transaction(
                (tx) =&gt; tx.executeSql(`CREATE TABLE IF NOT EXISTS ${name} (key unique, value <span style="color:#569CD6;">string</span>)`,
                    [],
                    (t, results) =&gt; {
                        observer.next(<span style="color:#569CD6;">this</span>);
                        observer.complete();
                    },
                    (t, message) =&gt; {
                        observer.error(message.message.toString());
                        <span style="color:#569CD6;">return</span> <span style="color:#569CD6;">true</span>;
                    })
            );
        });
    }

    get(key: <span style="color:#569CD6;">string</span>): Observable&lt;T&gt; {
        <span style="color:#569CD6;">return</span> Observable.create((observer: Observer&lt;T&gt;) =&gt; {
            <span style="color:#569CD6;">this</span>.db.transaction((tx) =&gt; {
                tx.executeSql(`SELECT * FROM ${<span style="color:#569CD6;">this</span>.name} WHERE key=<span style="color:#D69D85;">&#39;${key}&#39;</span>`, [],
                    (t, results) =&gt; {
                        let len = results.rows.length;
                        <span style="color:#569CD6;">if</span> (len === 0) {
                            observer.next(undefined);
                        } <span style="color:#569CD6;">else</span> <span style="color:#569CD6;">if</span> (len === 1) {
                            observer.next(results.rows.item(0));
                        } <span style="color:#569CD6;">else</span> {
                            observer.error(<span style="color:#D69D85;">&#39;There should be no more than one entry&#39;</span>);
                        }
                        observer.complete();
                    },
                    (t, message) =&gt; {
                        observer.error(message.message.toString());
                        <span style="color:#569CD6;">return</span> <span style="color:#569CD6;">true</span>;
                    });
            });
        });
    }

    clear() {
        <span style="color:#569CD6;">return</span> Observable.create((observer: Observer&lt;T&gt;) =&gt; {
            <span style="color:#569CD6;">this</span>.db.transaction((tx) =&gt; {
                tx.executeSql(`DELETE FROM ${<span style="color:#569CD6;">this</span>.name}`, [], (t, r) =&gt; observer.complete(), (t, e) =&gt; {
                    observer.error(e.message.toString());
                    <span style="color:#569CD6;">return</span> <span style="color:#569CD6;">true</span>;
                });
            });
        });
    }

    all(): Observable&lt;T&gt; {
        <span style="color:#569CD6;">return</span> Observable.create((observer: Observer&lt;T&gt;) =&gt; {
            <span style="color:#569CD6;">this</span>.db.transaction((tx) =&gt; {
                tx.executeSql(`SELECT * FROM ${<span style="color:#569CD6;">this</span>.name}`,
                    [],
                    (t, results) =&gt; {
                        <span style="color:#569CD6;">for</span> (let i = 0; i &lt; results.rows.length; i++) {
                            observer.next(results.rows.item(i));
                        }
                        observer.complete();
                    },
                    (t, message) =&gt; {
                        observer.error(message.message.toString());
                        <span style="color:#569CD6;">return</span> <span style="color:#569CD6;">true</span>;
                    });
            });
        });
    }

    put(value: T): Observable&lt;T&gt; {
        <span style="color:#569CD6;">return</span> Observable.create((observer: Observer&lt;T&gt;) =&gt; {
            <span style="color:#569CD6;">this</span>.db.transaction((tx) =&gt; {
                tx.executeSql(`INSERT OR REPLACE INTO ${<span style="color:#569CD6;">this</span>.name} VALUES (?, ?)`, [value.id, value.value],
                    () =&gt; {
                        observer.next(value);
                        observer.complete();
                    },
                    (t, e) =&gt; {
                        observer.error(e.message.toString());
                        <span style="color:#569CD6;">return</span> <span style="color:#569CD6;">true</span>;
                    });
            });
        });
    }

    getDenseBatch(keys: <span style="color:#569CD6;">string</span>[]): Observable&lt;T&gt; {
        <span style="color:#569CD6;">if</span> (keys.length === 0) {
            <span style="color:#569CD6;">return</span> Observable.empty&lt;T&gt;();
        };

        <span style="color:#569CD6;">return</span> Observable.create((observer: Observer&lt;T[]&gt;) =&gt; {
            <span style="color:#569CD6;">this</span>.db.transaction((tx) =&gt; {
                let key = keys.map(x =&gt; <span style="color:#D69D85;">&#39;\&#39;</span><span style="color:#D69D85;">&#39; + x + &#39;</span>\<span style="color:#D69D85;">&#39;&#39;</span>).join(<span style="color:#D69D85;">&#39;,&#39;</span>);
                tx.executeSql(`SELECT * FROM ${<span style="color:#569CD6;">this</span>.name} WHERE key IN (${key})`,
                    [],
                    (t, results) =&gt; {
                        <span style="color:#569CD6;">for</span> (let i = 0; i &lt; results.rows.length; i++) {
                            observer.next(results.rows.item(i));
                        }
                        observer.complete();
                    },
                    (t, e) =&gt; {
                        observer.error(e.message.toString());
                        <span style="color:#569CD6;">return</span> <span style="color:#569CD6;">true</span>;
                    });
            });
        });
    }
}
</pre></div><div style="color:#DADADA;background-color:#1E1E1E;"><pre>
describe(<span style="color:#D69D85;">&#39;WebSQLStorage: Class&#39;</span>, () =&gt; {
  let key1 = <span style="color:#D69D85;">&#39;key1&#39;</span>, key2 = <span style="color:#D69D85;">&#39;key2&#39;</span>;
  let value1 = <span style="color:#D69D85;">&#39;value1&#39;</span>, value2 = <span style="color:#D69D85;">&#39;value2&#39;</span>;

  it(<span style="color:#D69D85;">&#39;should create empty storage&#39;</span>, async(() =&gt; {
    let storage = <span style="color:#569CD6;">new</span> WebSQLStorage&lt;TestKeyValue&gt;();
    storage.init(<span style="color:#D69D85;">&#39;test1&#39;</span>).subscribe(() =&gt; {
      storage.all().isEmpty().subscribe(isAny =&gt; expect(isAny).toBeTruthy());
    });
  }));

  it(<span style="color:#D69D85;">&#39;should save one item &#39;</span>, async(() =&gt; {
    let storage = <span style="color:#569CD6;">new</span> WebSQLStorage&lt;TestKeyValue&gt;();
    storage.init(<span style="color:#D69D85;">&#39;test2&#39;</span>).subscribe(() =&gt; {
      storage.put({ id: key1, value: value1 }).subscribe(() =&gt; {
        storage.all().isEmpty().subscribe(isAny =&gt; expect(isAny).toBeFalsy());
      });
    });
  }));

  it(<span style="color:#D69D85;">&#39;should save/get one item&#39;</span>, async(() =&gt; {
    let storage = <span style="color:#569CD6;">new</span> WebSQLStorage&lt;TestKeyValue&gt;();
    storage.init(<span style="color:#D69D85;">&#39;test3&#39;</span>).subscribe(() =&gt; {
      let item = { id: key1, value: value1 };
      storage.put(item).subscribe(() =&gt; {
        storage.get(key1).subscribe(value =&gt; {
          expect(value.value).toEqual(item.value);
        });

      });
    });
  }));

  it(<span style="color:#D69D85;">&#39;should save/get two items&#39;</span>, async(() =&gt; {
    let storage = <span style="color:#569CD6;">new</span> WebSQLStorage&lt;TestKeyValue&gt;();
    storage.init(<span style="color:#D69D85;">&#39;test4&#39;</span>).subscribe(() =&gt; {
      let items = [{ id: key1, value: value1 }, { id: key2, value: value2 }];
      storage.put(items[0])
      .subscribe(() =&gt; storage.put(items[1])
        .subscribe(() =&gt; {
          let i = 0;
          storage.getDenseBatch([key1, key2])
            .subscribe(value =&gt; expect(value.value).toEqual(items[i++].value));
        }));
    });
  }));

  it(<span style="color:#D69D85;">&#39;should clear saved items&#39;</span>, async(() =&gt; {
    let storage = <span style="color:#569CD6;">new</span> WebSQLStorage&lt;TestKeyValue&gt;();
    storage.init(<span style="color:#D69D85;">&#39;test5&#39;</span>).subscribe(() =&gt; {
      let items = [{ id: key1, value: value1 }, { id: key2, value: value2 }];
      storage.put(items[0])
        .zip(() =&gt; storage.put(items[1]))
        .subscribe(() =&gt; storage.clear()
        .subscribe(() =&gt; {
          storage.all().isEmpty().subscribe(isAny =&gt; expect(isAny).toBeTruthy());
        }));
    });
  }));
});
</pre></div><h3 id="indexeddb-implementation">IndexedDB implementation</h3>
<p>How to use IndexedDB is <a href="https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB">here</a>.
There are very useful <a href="https://www.codeproject.com/articles/744986/how-to-do-some-magic-with-indexeddb">tricks</a>.</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">export</span> <span style="color:#569CD6;">class</span> IndexedDBStorage&lt;T <span style="color:#569CD6;">extends</span> IItem&gt; <span style="color:#569CD6;">implements</span> IStorage&lt;T&gt; {
    <span style="color:#569CD6;">private</span> databaseName: <span style="color:#569CD6;">string</span> = <span style="color:#D69D85;">&#39;TripNoteDB&#39;</span>;
    <span style="color:#569CD6;">private</span> name: <span style="color:#569CD6;">string</span>;

    <span style="color:#569CD6;">private</span> getDb(version?: <span style="color:#569CD6;">number</span>, storeName?: <span style="color:#569CD6;">string</span>): Observable&lt;IDBDatabase&gt; {
        <span style="color:#569CD6;">return</span> Observable.create((observer: Observer&lt;<span style="color:#569CD6;">number</span>&gt;) =&gt; {
            let req = version &amp;&amp; version &gt; 0 ? window.indexedDB.open(<span style="color:#569CD6;">this</span>.databaseName, version)
                : window.indexedDB.open(<span style="color:#569CD6;">this</span>.databaseName);
            req.onsuccess = (e) =&gt; {
                let db = (&lt;<span style="color:#569CD6;">any</span>&gt;event.target).result;
                observer.next(db);
                db.close();
                observer.complete();
            };
            req.onupgradeneeded = (e) =&gt; {
                let db = (&lt;<span style="color:#569CD6;">any</span>&gt;e.target).result;
                <span style="color:#569CD6;">if</span> (storeName &amp;&amp; !db.objectStoreNames.contains(storeName)) {
                    db.createObjectStore(storeName, { keyPath: <span style="color:#D69D85;">&#39;id&#39;</span> });
                    let transaction = (&lt;<span style="color:#569CD6;">any</span>&gt;e.target).transaction;
                    transaction.oncomplete = (event) =&gt; {
                        observer.next(db);
                        db.close();
                        observer.complete();
                    };
                };
            };
            req.onblocked = (event) =&gt; observer.error(<span style="color:#D69D85;">&#39;IndexedDB is blocked&#39;</span>);
            req.onerror = (e) =&gt; observer.error(e.error);
        });
    }

    <span style="color:#569CD6;">private</span> getVersionOfDb(name: <span style="color:#569CD6;">string</span>): Observable&lt;<span style="color:#569CD6;">number</span>&gt; {
        <span style="color:#569CD6;">return</span> <span style="color:#569CD6;">this</span>.getDb().map(db =&gt; {
            <span style="color:#569CD6;">if</span> (!db.objectStoreNames.contains(<span style="color:#569CD6;">this</span>.name)) {
                <span style="color:#569CD6;">return</span> db.version + 1;
            } <span style="color:#569CD6;">else</span> {
                <span style="color:#569CD6;">return</span> db.version;
            }
        });
    }

    init(name: <span style="color:#569CD6;">string</span>): Observable&lt;IndexedDBStorage&lt;T&gt;&gt; {
        <span style="color:#569CD6;">this</span>.name = name;
        <span style="color:#569CD6;">return</span> Observable.create((observer: Observer&lt;IndexedDBStorage&lt;T&gt;&gt;) =&gt; {
            <span style="color:#569CD6;">this</span>.getVersionOfDb(name).subscribe((version) =&gt; {
                <span style="color:#569CD6;">this</span>.getDb(version, name).subscribe(db =&gt; {
                    observer.next(<span style="color:#569CD6;">this</span>);
                    observer.complete();
                });
            });
        });
    }

    all(): Observable&lt;T&gt; {
        <span style="color:#569CD6;">return</span> Observable.create((observer: Observer&lt;T&gt;) =&gt; {
            <span style="color:#569CD6;">this</span>.getDb().subscribe(db =&gt; {
                let req = db.transaction(<span style="color:#569CD6;">this</span>.name, <span style="color:#D69D85;">&#39;readwrite&#39;</span>).objectStore(<span style="color:#569CD6;">this</span>.name)
                    .openCursor();
                req.onsuccess = (e) =&gt; {
                    let res = (&lt;<span style="color:#569CD6;">any</span>&gt;event.target).result;
                    <span style="color:#569CD6;">if</span> (res) {
                        observer.next(res.value);
                        res.<span style="color:#569CD6;">continue</span>();
                    }
                    observer.complete();
                };
                req.onerror = (e) =&gt; observer.error(e.error);
            });
        });
    }

    get(key: <span style="color:#569CD6;">string</span>): Observable&lt;T&gt; {
        <span style="color:#569CD6;">return</span> Observable.create((observer: Observer&lt;T&gt;) =&gt; {
            <span style="color:#569CD6;">this</span>.getDb().subscribe(db =&gt; {
                let req = db.transaction(<span style="color:#569CD6;">this</span>.name).objectStore(<span style="color:#569CD6;">this</span>.name).get(key);
                req.onerror = (e) =&gt; observer.error(e.error);
                req.onsuccess = (e) =&gt; {
                    observer.next(req.result);
                    observer.complete();
                };
            });
        });
    }

    clear(): Observable&lt;IStorage&lt;T&gt;&gt; {
        <span style="color:#569CD6;">return</span> Observable.create((observer: Observer&lt;IStorage&lt;T&gt;&gt;) =&gt; {
            <span style="color:#569CD6;">this</span>.getDb().subscribe(db =&gt; {
                let req = db.transaction(<span style="color:#569CD6;">this</span>.name, <span style="color:#D69D85;">&#39;readwrite&#39;</span>).objectStore(<span style="color:#569CD6;">this</span>.name).clear();
                req.onerror = (e) =&gt; observer.error(e.error);
                req.onsuccess = (e) =&gt; {
                    observer.next(<span style="color:#569CD6;">this</span>);
                    observer.complete();
                };
            });
        });
    }

    put(value: T): Observable&lt;T&gt; {
        <span style="color:#569CD6;">return</span> Observable.create((observer: Observer&lt;T&gt;) =&gt; {
            <span style="color:#569CD6;">this</span>.getDb().subscribe(db =&gt; {
                let req = db.transaction(<span style="color:#569CD6;">this</span>.name, <span style="color:#D69D85;">&#39;readwrite&#39;</span>).objectStore(<span style="color:#569CD6;">this</span>.name).put(value);
                req.onerror = (e) =&gt; {
                    observer.error(e.error);
                };
                req.onsuccess = (e) =&gt; {
                    observer.next(value);
                    observer.complete();
                };
            });
        });
    }

    getDenseBatch(keys: <span style="color:#569CD6;">string</span>[]): Observable&lt;T&gt; {
        <span style="color:#569CD6;">return</span> Observable.create((observer: Observer&lt;T&gt;) =&gt; {
            <span style="color:#569CD6;">this</span>.getDb().subscribe(db =&gt; {
                let set = keys.sort();
                let i = 0;
                let req = db.transaction(<span style="color:#569CD6;">this</span>.name).objectStore(<span style="color:#569CD6;">this</span>.name)
                    .openCursor();
                req.onsuccess = (e) =&gt; {
                    let cursor = (&lt;<span style="color:#569CD6;">any</span>&gt;event.target).result;
                    <span style="color:#569CD6;">if</span> (!cursor) { observer.complete(); <span style="color:#569CD6;">return</span>; }
                    let key = cursor.key;
                    <span style="color:#569CD6;">while</span> (key &gt; set[i]) {
                        <span style="color:#57A64A;">// The cursor has passed beyond this key. Check next.</span>
                        ++i;
                        <span style="color:#569CD6;">if</span> (i === set.length) {
                            <span style="color:#57A64A;">// There is no next. Stop searching.</span>
                            observer.complete();
                            <span style="color:#569CD6;">return</span>;
                        }
                    }
                    <span style="color:#569CD6;">if</span> (key === set[i]) {
                        <span style="color:#57A64A;">// The current cursor value should be included and we should continue</span>
                        <span style="color:#57A64A;">// a single step in case next item has the same key or possibly our</span>
                        <span style="color:#57A64A;">// next key in set.</span>
                        observer.next(cursor.value);
                        cursor.<span style="color:#569CD6;">continue</span>();
                    } <span style="color:#569CD6;">else</span> {
                        <span style="color:#57A64A;">// cursor.key not yet at set[i]. Forward cursor to the next key to hunt for.</span>
                        cursor.<span style="color:#569CD6;">continue</span>(set[i]);
                    }
                };
                req.onerror = (e) =&gt; observer.error(e.error);
            });
        });
    }
}
</pre></div>
<p>Unit tests for indexedDB:</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
describe(<span style="color:#D69D85;">&#39;IndexedDBStorage: Class&#39;</span>, () =&gt; {
  let key1 = <span style="color:#D69D85;">&#39;key1&#39;</span>, key2 = <span style="color:#D69D85;">&#39;key2&#39;</span>;
  let value1 = <span style="color:#D69D85;">&#39;value1&#39;</span>, value2 = <span style="color:#D69D85;">&#39;value2&#39;</span>;

  it(<span style="color:#D69D85;">&#39;should create empty storage&#39;</span>, (done) =&gt; {
    let storage = <span style="color:#569CD6;">new</span> IndexedDBStorage&lt;TestKeyValue&gt;();
    storage.init(<span style="color:#D69D85;">&#39;test1&#39;</span>).subscribe(() =&gt; {
      storage.all().isEmpty().subscribe(isAny =&gt; {
        expect(isAny).toBeTruthy();
        done();
      });
    });
  });

  it(<span style="color:#D69D85;">&#39;should save one item &#39;</span>, (done) =&gt; {
    let storage = <span style="color:#569CD6;">new</span> IndexedDBStorage&lt;TestKeyValue&gt;();
    storage.init(<span style="color:#D69D85;">&#39;test2&#39;</span>).subscribe(() =&gt; {
      storage.put({ id: key1, value: value1 }).subscribe(() =&gt; {
        storage.all().isEmpty().subscribe(isAny =&gt; {
          expect(isAny).toBeFalsy();
          done();
        });
      });
    });
  });

  it(<span style="color:#D69D85;">&#39;should save/get one item&#39;</span>, (done) =&gt; {
    let storage = <span style="color:#569CD6;">new</span> IndexedDBStorage&lt;TestKeyValue&gt;();
    storage.init(<span style="color:#D69D85;">&#39;test3&#39;</span>).subscribe(() =&gt; {
      let item = { id: key1, value: value1 };
      storage.put(item).subscribe(() =&gt; {
        storage.get(key1).subscribe(value =&gt; {
          expect(value).toEqual(item);
          done();
        });
      });
    });
  });

  it(<span style="color:#D69D85;">&#39;should save/get two items&#39;</span>, (done) =&gt; {
    let storage = <span style="color:#569CD6;">new</span> IndexedDBStorage&lt;TestKeyValue&gt;();
    storage.init(<span style="color:#D69D85;">&#39;test4&#39;</span>).subscribe(() =&gt; {
      let items = [{ id: key1, value: value1 }, { id: key2, value: value2 }];
      let item1 = storage.put(items[0])
        .merge(storage.put(items[1])).last()
        .subscribe(y =&gt; {
          storage.getDenseBatch([key1, key2]).toArray().subscribe(x =&gt; {
            expect(x[0]).toEqual(items[0]);
            expect(x[1]).toEqual(items[1]);
            done();
          });
        });
      });
  });

  it(<span style="color:#D69D85;">&#39;should clear saved items&#39;</span>, (done) =&gt; {
    let storage = <span style="color:#569CD6;">new</span> IndexedDBStorage&lt;TestKeyValue&gt;();
    storage.init(<span style="color:#D69D85;">&#39;test5&#39;</span>).subscribe(() =&gt; {
      let items = [{ id: key1, value: value1 }, { id: key2, value: value2 }];
      storage.put(items[0])
        .merge(storage.put(items[1])).last()
        .subscribe(x =&gt; storage.clear()
          .subscribe(y =&gt; storage.all().isEmpty().subscribe(isAny =&gt; {
              expect(isAny).toBeTruthy();
              done();
            })));
    });
  });
});
</pre></div>
"""""
),
            ["""2016-10-26-Octave-Tutorial"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Octave Tutorial
""""",
["""date"""] =
"""""
 2016-10-26
""""",
["""tags"""] =
"""""
 octava
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<p>Information is from this wonderful <a href="https://www.coursera.org/learn/machine-learning/">course</a>.</p>
<h3 id="basic-operations">Basic operations</h3>
<pre><code class="language-none">%% Change Octave prompt
PS1('&gt;&gt; ');
%% Change working directory in windows example:
cd 'c:/path/to/desired/directory name'
%% Note that it uses normal slashes and does not use escape characters for the empty spaces.

%% elementary operations
5+6
3-2
5*8
1/2
2^6
1 == 2 % false
1 ~= 2 % true.  note, not &quot;!=&quot;
1 &amp;&amp; 0
1 || 0
xor(1,0)


%% variable assignment
a = 3; % semicolon suppresses output
b = 'hi';
c = 3&gt;=1;

% Displaying them:
a = pi
disp(a)
disp(sprintf('2 decimals: %0.2f', a))
disp(sprintf('6 decimals: %0.6f', a))
format long
a
format short
a


%%  vectors and matrices
A = [1 2; 3 4; 5 6]


v = [1 2 3]
v = [1; 2; 3]
v = 1:0.1:2   % from 1 to 2, with stepsize of 0.1. Useful for plot axes
v = 1:6       % from 1 to 6, assumes stepsize of 1 (row vector)

C = 2*ones(2,3) % same as C = [2 2 2; 2 2 2]
w = ones(1,3)   % 1x3 vector of ones
w = zeros(1,3)
w = rand(1,3) % drawn from a uniform distribution
w = randn(1,3)% drawn from a normal distribution (mean=0, var=1)
w = -6 + sqrt(10)*(randn(1,10000));  % (mean = -6, var = 10) - note: add the semicolon
hist(w)    % plot histogram using 10 bins (default)
hist(w,50) % plot histogram using 50 bins
% note: if hist() crashes, try &quot;graphics_toolkit('gnu_plot')&quot;

I = eye(4)   % 4x4 identity matrix

% help function
help eye
help rand
help help
</code></pre>
<h3 id="moving-data-around">Moving Data Around</h3>
<pre><code class="language-none">%% dimensions
sz = size(A) % 1x2 matrix: [(number of rows) (number of columns)]
size(A,1) % number of rows
size(A,2) % number of cols
length(v) % size of longest dimension


%% loading data
pwd   % show current directory (current path)
cd 'C:\Users\ang\Octave files'  % change directory
ls    % list files in current directory
load q1y.dat   % alternatively, load('q1y.dat')
load q1x.dat
who   % list variables in workspace
whos  % list variables in workspace (detailed view)
clear q1y      % clear command without any args clears all vars
v = q1x(1:10); % first 10 elements of q1x (counts down the columns)
save hello.mat v;  % save variable v into file hello.mat
save hello.txt v -ascii; % save as ascii
% fopen, fread, fprintf, fscanf also work  [[not needed in class]]

%% indexing
A(3,2)  % indexing is (row,col)
A(2,:)  % get the 2nd row.
        % &quot;:&quot; means every element along that dimension
A(:,2)  % get the 2nd col
A([1 3],:) % print all  the elements of rows 1 and 3

A(:,2) = [10; 11; 12]     % change second column
A = [A, [100; 101; 102]]; % append column vec
A(:) % Select all elements as a column vector.

% Putting data together
A = [1 2; 3 4; 5 6]
B = [11 12; 13 14; 15 16] % same dims as A
C = [A B]  % concatenating A and B matrices side by side
C = [A, B] % concatenating A and B matrices side by side
C = [A; B] % Concatenating A and B top and bottom
</code></pre>
<h3 id="computing-on-data">Computing on Data</h3>
<pre><code class="language-none">%% initialize variables
A = [1 2;3 4;5 6]
B = [11 12;13 14;15 16]
C = [1 1;2 2]
v = [1;2;3]

%% matrix operations
A * C  % matrix multiplication
A .* B % element-wise multiplication
% A .* C  or A * B gives error - wrong dimensions
A .^ 2 % element-wise square of each element in A
1./v   % element-wise reciprocal
log(v)  % functions like this operate element-wise on vecs or matrices
exp(v)
abs(v)

-v  % -1*v

v + ones(length(v), 1)
% v + 1  % same

A'  % matrix transpose

%% misc useful functions

% max  (or min)
a = [1 15 2 0.5]
val = max(a)
[val,ind] = max(a) % val -  maximum element of the vector a and index - index value where maximum occur
val = max(A) % if A is matrix, returns max from each column

% compare values in a matrix &amp; find
a &lt; 3 % checks which values in a are less than 3
find(a &lt; 3) % gives location of elements less than 3
A = magic(3) % generates a magic matrix - not much used in ML algorithms
[r,c] = find(A&gt;=7)  % row, column indices for values matching comparison

% sum, prod
sum(a)
prod(a)
floor(a) % or ceil(a)
max(rand(3),rand(3))
max(A,[],1) -  maximum along columns(defaults to columns - max(A,[]))
max(A,[],2) - maximum along rows
A = magic(9)
sum(A,1)
sum(A,2)
sum(sum( A .* eye(9) ))
sum(sum( A .* flipud(eye(9)) ))


% Matrix inverse (pseudo-inverse)
pinv(A)        % inv(A'*A)*A'
</code></pre>
<h3 id="plotting-data">Plotting Data</h3>
<pre><code class="language-none">%% plotting
t = [0:0.01:0.98];
y1 = sin(2*pi*4*t);
plot(t,y1);
y2 = cos(2*pi*4*t);
hold on;  % &quot;hold off&quot; to turn off
plot(t,y2,'r');
xlabel('time');
ylabel('value');
legend('sin','cos');
title('my plot');
print -dpng 'myPlot.png'
close;           % or,  &quot;close all&quot; to close all figs
figure(1); plot(t, y1);
figure(2); plot(t, y2);
figure(2), clf;  % can specify the figure number
subplot(1,2,1);  % Divide plot into 1x2 grid, access 1st element
plot(t,y1);
subplot(1,2,2);  % Divide plot into 1x2 grid, access 2nd element
plot(t,y2);
axis([0.5 1 -1 1]);  % change axis scale

%% display a matrix (or image)
figure;
imagesc(magic(15)), colorbar, colormap gray;
% comma-chaining function calls.
a=1,b=2,c=3
a=1;b=2;c=3;
</code></pre>
<h3 id="control-statements-for-while-if-statements">Control statements: for, while, if statements</h3>
<pre><code class="language-none">v = zeros(10,1);
for i=1:10,
    v(i) = 2^i;
end;
% Can also use &quot;break&quot; and &quot;continue&quot; inside for and while loops to control execution.

i = 1;
while i &lt;= 5,
  v(i) = 100;
  i = i+1;
end

i = 1;
while true,
  v(i) = 999;
  i = i+1;
  if i == 6,
    break;
  end;
end

if v(1)==1,
  disp('The value is one!');
elseif v(1)==2,
  disp('The value is two!');
else
  disp('The value is not one or two!');
end
</code></pre>
<h3 id="functions">Functions</h3>
<p>To create a function, type the function code in a text editor (e.g. gedit or notepad), and save the file as &quot;functionName.m&quot;</p>
<pre><code class="language-none">function y = squareThisNumber(x)

y = x^2;
</code></pre>
<pre><code class="language-none">function [y1, y2] = squareandCubeThisNo(x)
y1 = x^2
y2 = x^3
</code></pre>
<p>More info:
<a href="https://www.coursera.org/learn/machine-learning">https://www.coursera.org/learn/machine-learning</a></p>

"""""
),
            ["""2016-12-18-Implementing-asyncqueue-using-rxjs"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Implementing async.queue using rxjs
""""",
["""date"""] =
"""""
 2016-12-18
""""",
["""tags"""] =
"""""
 javascript
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<p>There is an example of queue using rxjs:</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
Rx.Observable.from([<span style="color:#D69D85;">&#39;foo&#39;</span>, <span style="color:#D69D85;">&#39;bar&#39;</span>, <span style="color:#D69D85;">&#39;baz&#39;</span>, <span style="color:#D69D85;">&#39;bay&#39;</span>, <span style="color:#D69D85;">&#39;bax&#39;</span>, <span style="color:#D69D85;">&#39;bar&#39;</span>, <span style="color:#D69D85;">&#39;cat&#39;</span>])
    .<span style="color:#569CD6;">do</span>(x =&gt; console.log((<span style="color:#569CD6;">new</span> Date).toLocaleTimeString() + <span style="color:#D69D85;">&quot; &quot;</span> + x))
    <span style="color:#57A64A;">// grouping by 2</span>
    .bufferCount(2)
    <span style="color:#57A64A;">// concat received results</span>
    .concatMap((data) =&gt; {
        <span style="color:#569CD6;">return</span> Rx.Observable.defer(() =&gt; {
            <span style="color:#57A64A;">// assuming long operation here, e.g. downloading,</span>
            <span style="color:#57A64A;">// we can use merge here if we want to do operation per item</span>
            <span style="color:#569CD6;">return</span> Rx.Observable.create((observer)=&gt;{
                setTimeout(<span style="color:#569CD6;">function</span> () {
                    observer.next(data);
                    observer.complete();
                }, 2000);
            })
        });
    })
    .subscribe(
        result =&gt; console.log((<span style="color:#569CD6;">new</span> Date).toLocaleTimeString() + <span style="color:#D69D85;">&quot; finished &quot;</span> + result),
        error =&gt; console.error(error),
        () =&gt; console.log(<span style="color:#D69D85;">&#39;done&#39;</span>)
    );

<span style="color:#57A64A;">// Console ouput</span>
<span style="color:#57A64A;">// rxjs.html:9 Console was cleared</span>
<span style="color:#57A64A;">// rxjs.html:11 9:56:36 PM foo</span>
<span style="color:#57A64A;">// rxjs.html:11 9:56:36 PM bar</span>
<span style="color:#57A64A;">// rxjs.html:11 9:56:36 PM baz</span>
<span style="color:#57A64A;">// rxjs.html:11 9:56:36 PM bay</span>
<span style="color:#57A64A;">// rxjs.html:11 9:56:36 PM bax</span>
<span style="color:#57A64A;">// rxjs.html:11 9:56:36 PM bar</span>
<span style="color:#57A64A;">// rxjs.html:11 9:56:36 PM cat</span>
<span style="color:#57A64A;">// rxjs.html:28 9:56:38 PM finished foo,bar</span>
<span style="color:#57A64A;">// rxjs.html:28 9:56:40 PM finished baz,bay</span>
<span style="color:#57A64A;">// rxjs.html:28 9:56:42 PM finished bax,bar</span>
<span style="color:#57A64A;">// rxjs.html:28 9:56:44 PM finished cat</span>
<span style="color:#57A64A;">// rxjs.html:30 done</span>
</pre></div>
<p>Used links:</p>
<ul>
<li><a href="https://github.com/Reactive-Extensions/RxJS/issues/613">Question about promise chains/queues in Rx</a></li>
<li><a href="http://reactivex.io/documentation/operators/defer.html">Defer</a></li>
<li><a href="https://github.com/ReactiveX/rxjs">RxJS</a></li>
</ul>

"""""
),
            ["""2016-12-19-Simple-question-to-check-understanding-of-recursion-in-NET"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Simple question to check understanding of recursion in .NET
""""",
["""date"""] =
"""""
 2016-12-19
""""",
["""tags"""] =
"""""
 dotnet interview
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<p>There is the next code:</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">public</span> <span style="color:#569CD6;">static</span> <span style="color:#569CD6;">void</span> Main(<span style="color:#569CD6;">string</span>[] args) {
    Console.WriteLine(Test());
}

<span style="color:#569CD6;">public</span> <span style="color:#569CD6;">static</span> <span style="color:#569CD6;">int</span> Test(<span style="color:#569CD6;">int</span> index = <span style="color:#B5CEA8;">0</span>) {
    <span style="color:#569CD6;">if</span> (index &gt; <span style="color:#B5CEA8;">10</span>) <span style="color:#569CD6;">return</span> <span style="color:#B5CEA8;">0</span>;
    <span style="color:#569CD6;">try</span> {
        <span style="color:#569CD6;">for</span> (<span style="color:#569CD6;">var</span> i=<span style="color:#B5CEA8;">0</span>; i&lt; <span style="color:#B5CEA8;">10</span>; i++) {
            index++;
        }
    }
    <span style="color:#569CD6;">catch</span> {
        Console.Write(<span style="color:#D69D85;">&quot;Error&quot;</span>);
    }
    <span style="color:#569CD6;">for</span> (<span style="color:#569CD6;">var</span> j = <span style="color:#B5CEA8;">1</span>; j &lt; <span style="color:#B5CEA8;">10</span>; j++)
        index += Test(index);
    <span style="color:#569CD6;">return</span> index;
}

</pre></div>
<p>Is it working? What is the output?</p>

"""""
),
            ["""2016-12-21-InfluxDB-can't-be-started-as-a-service"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 InfluxDB can't be started as a service
""""",
["""date"""] =
"""""
 2016-12-21
""""",
["""tags"""] =
"""""
 indluxdb
""""",
["""categories"""] =
"""""
 deployment
""""",
 },
"""""
<p>I was not able to run influxdb as a service after <a href="https://docs.influxdata.com/influxdb/v1.1/introduction/installation/">installing</a> influxdb on my local ubuntu:</p>
<p>Command <code>sudo service influxd status</code> showed:</p>
<pre><code class="language-none">● influxdb.service - InfluxDB is an open-source, distributed, time series database
   Loaded: loaded (/lib/systemd/system/influxdb.service; enabled; vendor preset: enabled)
   Active: inactive (dead) (Result: exit-code) since Fri 2016-12-23 15:05:34 CET; 3min 47s ago
     Docs: https://docs.influxdata.com/influxdb/
  Process: 13938 ExecStart=/usr/bin/influxd -config /etc/influxdb/influxdb.conf ${INFLUXD_OPTS} (code=exited, status=1/FAILURE)
 Main PID: 13938 (code=exited, status=1/FAILURE)

Dec 23 15:05:34 fes-U36SG systemd[1]: influxdb.service: Main process exited, code=exited, status=1/FAILURE
Dec 23 15:05:34 fes-U36SG systemd[1]: influxdb.service: Unit entered failed state.
Dec 23 15:05:34 fes-U36SG systemd[1]: influxdb.service: Failed with result 'exit-code'.
Dec 23 15:05:34 fes-U36SG systemd[1]: influxdb.service: Service hold-off time over, scheduling restart.
Dec 23 15:05:34 fes-U36SG systemd[1]: Stopped InfluxDB is an open-source, distributed, time series database.
Dec 23 15:05:34 fes-U36SG systemd[1]: influxdb.service: Start request repeated too quickly.
Dec 23 15:05:34 fes-U36SG systemd[1]: Failed to start InfluxDB is an open-source, distributed, time series database.
</code></pre>
<p>But the simple command <code>influxd</code> worked well.</p>
<p>I found that there is the next code in <code>/lib/systemd/system/influxdb.service</code>:</p>
<pre><code class="language-none"># If you modify this, please also make sure to edit init.sh

[Unit]
Description=InfluxDB is an open-source, distributed, time series database
Documentation=https://docs.influxdata.com/influxdb/
After=network-online.target

[Service]
User=influxdb
Group=influxdb
LimitNOFILE=65536
EnvironmentFile=-/etc/default/influxdb
ExecStart=/usr/bin/influxd -config /etc/influxdb/influxdb.conf ${INFLUXD_OPTS}
KillMode=control-group
Restart=on-failure

[Install]
WantedBy=multi-user.target
Alias=influxd.service
</code></pre>
<p>All is working well after I commended the next two lines:</p>
<pre><code class="language-none">[Service]
# User=influxdb
# Group=influxdb
</code></pre>
<p>Thanks!</p>

"""""
),
            ["""2016-12-22-Discord-Belarus-chat-By"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Discord Belarus chat By
""""",
["""date"""] =
"""""
 2016-12-22
""""",
["""tags"""] =
"""""
 dotnet discord
""""",
["""categories"""] =
"""""
 other
""""",
 },
"""""
<h1 id="discord-belarus-chat-by">Discord Belarus chat By</h1>
<p>Приглашаю всех присоединиться к белорусскому серверу в Discrod - <strong>чату</strong>, который позволит пообщаться и познакомиться!</p>
<p>Возможно, у многих есть желание пообщаться с людьми, которые живут с тобой в одном городе и стране. Такого места нет для тех, кто живет в Беларуси, или хочет общаться с людьми, которым небезразлична жизнь в Беларуси, особенно после закрытия <a href="http://chat.by">chat.by</a>. Наверное, единственного и широко известного чата для Беларуси.</p>
<p>Для того, чтобы избежать создания отдельного сайта, который будет собирать информацию о Вас и ваши сообщения, был создан сервер в отличном сервисе - <a href="https://discordapp.com/">Discord</a>. <em>Присоединяйтесь, знакомьтесь и общайтесь с интересными людьми!</em> Переходите по <a href="https://discord.gg/Pt2ERRv">этой ссылке</a> и регистрируйтесь!</p>
<p>На данный момент этот сервер не очень известен и популярен, но, надеюсь, общими усилиями мы сделаем его приятным и интересным местом для нас всех! Заранее спасибо!</p>
<p>С уважением,
Discord Chat By</p>

"""""
),
            ["""2017-01-21-Understanding-Docker"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Understanding Docker
""""",
["""date"""] =
"""""
 2017-01-21
""""",
["""tags"""] =
"""""
 docker
""""",
["""categories"""] =
"""""
 deployment
""""",
 },
"""""
<h3 id="what-is-docker"><a href="https://www.docker.com/what-docker">What is Docker?</a></h3>
<p>Docker is the world's leading software containerization platform</p>
<blockquote>
<p>Note: Docker is licensed under the open source <a href="https://inteist.com/how-to-use-apache-2-0-in-commercial-products-explained-in-simple-terms/">Apache 2.0</a> license.</p>
</blockquote>
<p>Docker containers wrap a piece of software in a complete filesystem that contains everything needed to run: code, runtime, system tools, system libraries – anything that can be installed on a server. This guarantees that the software will always run the same, regardless of its environment.</p>
<p><img src="./images/WhatIsDocker_1_kernal-2_1.png" alt="image1" /></p>
<ol>
<li>Lightweight</li>
</ol>
<p>Containers running on a single machine share the same operating system kernel; they start instantly and use less RAM. Images are constructed from layered filesystems and share common files, making disk usage and image downloads much more efficient.</p>
<ol start="2">
<li>Open and supported by community</li>
</ol>
<p>Docker containers are based on open standards, enabling containers to run on all major Linux distributions and on Microsoft Windows - and on top of any infrastructure. In addition, because Docker's <a href="http://www.zdnet.com/article/what-is-docker-and-why-is-it-so-darn-popular/">partnering</a> with the other container powers, including Canonical, Google, Red Hat, and Parallels, on its key open-source component <a href="https://github.com/opencontainers/runc">runc</a>, it's brought standardization to containers. More info is <a href="https://www.opencontainers.org/">here</a>.</p>
<ol start="3">
<li>Secure by default</li>
</ol>
<p>Containers isolate applications from one another and the underlying infrastructure, while providing an added layer of protection for the application.</p>
<h3 id="containers-and-virtual-machines">Containers and virtual machines</h3>
<p>Containers and virtual machines have similar resource isolation and allocation benefits - but a different architectural approach allows containers to be more portable and efficient. Docker is built on top of <a href="https://en.wikipedia.org/wiki/LXC">LXC</a>. Like with any container technology, as far as the program is concerned, it has its own file system, storage, CPU, RAM, and so on. The <a href="http://www.zdnet.com/article/what-is-docker-and-why-is-it-so-darn-popular/">key difference</a> between containers and VMs is that while the hypervisor abstracts an entire device, containers just abstract the operating system kernel. It means that you are able to run only containers which are supported by host operating system, i.e. there are containers for Windows OS and containers for Linux.</p>
<ul>
<li>Virtual Machines</li>
</ul>
<p><img src="./images/WhatIsDocker_2_VMs_0-2_2.png" alt="image" /></p>
<p>Virtual machines include the application, the necessary binaries and libraries, and an entire guest operating system - all of which can amount to tens of GBs.</p>
<ul>
<li>Containers</li>
</ul>
<p><img src="./images/WhatIsDocker_3_Containers_2_0.png" alt="image" /></p>
<p>Containers include the application and all of its dependencies - but share the kernel with other containers, running as isolated processes in user space on the host operating system. Docker containers are not tied to any specific infrastructure: they run on any computer, on any infrastructure, and in any cloud.</p>
<h3 id="additional-benefits">Additional benefits</h3>
<p>Docker allows you to dynamically change your application - from adding new capabilities and scaling services, to quickly changing problem areas.</p>
<ul>
<li>Shorter delivery time</li>
</ul>
<p>On average, Docker users ship 7X more software after deploying Docker in their environment. More frequent software updates provide added value to customers.</p>
<ul>
<li>Quickly scale</li>
</ul>
<p>Docker containers spin up and down in seconds, making it easy to scale application services to satisfy peak customer demand, and then reduce running containers when demand ebbs. And Docker containers are easy to deploy in a cloud.</p>
<ul>
<li>Easily remediate issue</li>
</ul>
<p>Docker makes it easy to identify issues, isolate the problem container, quickly roll back to make the necessary changes, and then push the updated container into production. Isolation between containers makes these changes less disruptive than in traditional software models.</p>
<p>In summary: docker allows to deploy, use and support containers on production easier and safer than previous approaches. On the other hand, developers can use Docker to pack, ship, and run any application as a lightweight, portable, self sufficient LXC container that can run virtually anywhere.</p>
<h3 id="docker-toolset"><a href="https://docs.docker.com/engine/understanding-docker/#/what-is-the-docker-platform">Docker toolset</a></h3>
<p>Docker provides tooling and a platform to manage the lifecycle of your containers:</p>
<ul>
<li>Encapsulate your applications (and supporting components) into Docker containers</li>
<li>Distribute and ship those containers to your teams for further development and testing</li>
<li>Deploy those applications to your production environment, whether it is in a local data center or the Cloud</li>
</ul>
<h3 id="docker-engine"><a href="https://docs.docker.com/engine/understanding-docker/#/what-is-docker-engine">Docker Engine</a></h3>
<p>Docker Engine is a client-server application with these major components:</p>
<ul>
<li>A server which is a type of long-running program called a daemon process.</li>
<li>A REST API which specifies interfaces that programs can use to talk to the daemon and instruct it what to do.</li>
<li>A command line interface (CLI) client.</li>
</ul>
<p><img src="./images/engine-components-flow.png" alt="image" /></p>
<h3 id="what-can-i-use-docker-for"><a href="https://docs.docker.com/engine/understanding-docker/#/what-can-i-use-docker-for">What can I use Docker for?</a></h3>
<p>Docker can streamline the development lifecycle by allowing developers to work in standardized environments using local containers which provide your applications and services. You can also integrate Docker into your continuous integration and continuous deployment (CI/CD) workflow.</p>
<p>Docker’s portability and lightweight nature also make it easy to dynamically manage workloads, scaling up or tearing down applications and services as business needs dictate, in near real time.</p>
<p>Docker is lightweight and fast. It provides a viable, cost-effective alternative to hypervisor-based virtual machines, allowing you to use more of your compute capacity to achieve your business goals.</p>
<h3 id="dockers-architecture"><a href="https://docs.docker.com/engine/understanding-docker/#/what-is-dockers-architecture">Docker’s architecture</a></h3>
<p>Docker uses a client-server architecture. The Docker client and daemon communicate using a REST API, over UNIX sockets or a network interface. One client can even communicate with multiple unrelated daemons.</p>
<p><img src="./images/architecture.svg" alt="image" /></p>
<h3 id="inside-docker"><a href="https://docs.docker.com/engine/understanding-docker/#/inside-docker">Inside Docker</a></h3>
<ul>
<li>Docker images</li>
</ul>
<p>A Docker image is a read-only template with instructions for creating a Docker container. For example, an image might contain an <a href="https://technet.microsoft.com/en-us/windows-server-docs/get-started/getting-started-with-nano-server">Nano Server</a> operating system with dotnet core and your web application installed. You can build or update images from scratch or download and use images created by others. A docker image is described in text file called a Dockerfile, which has a simple, well-defined syntax.</p>
<h4 id="docker-images-are-the-build-component-of-docker">Docker images are the build component of Docker.</h4>
<ul>
<li>Docker containers</li>
</ul>
<p>A Docker container is a runnable instance of a Docker image. You can run, start, stop, move, or delete a container using Docker API or CLI commands. When you run a container, you can provide configuration metadata such as networking information or environment variables. Each container is an isolated and secure application platform, but can be given access to resources running in a different host or container, as well as persistent storage or databases.</p>
<h4 id="docker-containers-are-the-run-component-of-docker">Docker containers are the run component of Docker.</h4>
<ul>
<li>Docker registries</li>
</ul>
<p>A docker registry is a library of images. A registry can be public or private, and can be on the same server as the Docker daemon or Docker client, or on a totally separate server.</p>
<h4 id="docker-registries-are-the-distribution-component-of-docker">Docker registries are the distribution component of Docker.</h4>
<ul>
<li>Docker services</li>
</ul>
<p>A Docker service allows a swarm of Docker nodes to work together, running a defined number of instances of a replica task, which is itself a Docker image. You can specify the number of concurrent replica tasks to run, and the swarm manager ensures that the load is spread evenly across the worker nodes. To the consumer, the Docker service appears to be a single application.</p>
<h4 id="docker-services-are-the-scalability-component-of-docker">Docker services are the scalability component of Docker.</h4>
<h3 id="docker-image-work"><a href="https://docs.docker.com/engine/understanding-docker/#/how-does-a-docker-image-work">Docker image work</a></h3>
<p>Docker images are read-only templates from which Docker containers are instantiated. Each image consists of a series of layers. Docker uses union file systems to combine these layers into a single image. Union file systems allow files and directories of separate file systems, known as branches, to be transparently overlaid, forming a single coherent file system.</p>
<p>These layers are one of the reasons Docker is so lightweight. When you change a Docker image, such as when you update an application to a new version, a new layer is built and replaces only the layer it updates. The other layers remain intact. To distribute the update, you only need to transfer the updated layer. Layering speeds up distribution of Docker images. Docker determines which layers need to be updated at runtime.</p>
<p>An image is defined in a Dockerfile. Every image starts from a base image, such as ubuntu (Note: <a href="https://hub.docker.com/">Docker Hub</a> is a public registry and stores images). The base image is defined using the FROM keyword in the dockerfile. There are a set of <a href="https://docs.docker.com/engine/reference/builder/#/parser-directives">intructions</a> after this world usually. Each instruction creates a new layer in the image:</p>
<ul>
<li>Specify the base image (<a href="https://docs.docker.com/engine/reference/builder/#/from">FROM</a>)</li>
<li>Specify the maintainer (<a href="https://docs.docker.com/engine/reference/builder/#/label">LABEL</a>)</li>
<li>Run a command (<a href="https://docs.docker.com/engine/reference/builder/#/run">RUN</a>)</li>
<li>Add a file or directory (<a href="https://docs.docker.com/engine/reference/builder/#/add">ADD</a>)</li>
<li>Create an environment variable (<a href="https://docs.docker.com/engine/reference/builder/#/env">ENV</a>)</li>
<li>What process to run when launching a container from this image (<a href="https://docs.docker.com/engine/reference/builder/#/cmd">CMD</a>)</li>
</ul>
<p>Docker reads this Dockerfile when you request a build of an image, executes the instructions, and returns the image.</p>
<h3 id="docker-registry-work"><a href="https://docs.docker.com/engine/understanding-docker/#/how-does-a-docker-registry-work">Docker registry work</a></h3>
<p>A Docker registry stores Docker images. After you build a Docker image, you can push it to a public registry such as Docker Hub or to a private registry running behind your firewall. You can also search for existing images and pull them from the registry to a host.</p>
<h3 id="container-work"><a href="https://docs.docker.com/engine/understanding-docker/#/how-does-a-container-work">Container work</a></h3>
<p>A container uses the host machine’s Linux/Windows kernel, and consists of any extra files you add when the image is created, along with metadata associated with the container at creation or when the container is started. Each container is built from an image. The image defines the container’s contents, which process to run when the container is launched, and a variety of other configuration details. The Docker image is read-only. When Docker runs a container from an image, it adds a read-write layer on top of the image in which your application runs.</p>
<h4 id="what-happens-when-you-run-a-container">What happens when you run a container?</h4>
<p>When you use the docker run CLI command or the equivalent API, the Docker Engine client instructs the Docker daemon to run a container. For example:</p>
<pre><code class="language-docker">$ docker run -i -t ubuntu /bin/bash
</code></pre>
<p>When you run this command, Docker Engine does the following:</p>
<ul>
<li><strong>Pulls the ubuntu image</strong>: Docker Engine checks for the presence of the ubuntu image. If the image already exists locally, Docker Engine uses it for the new container. Otherwise, then Docker Engine pulls it from Docker Hub.</li>
<li><strong>Creates a new container</strong>: Docker uses the image to create a container.</li>
<li><strong>Allocates a filesystem and mounts a read-write layer</strong>: The container is created in the file system and a read-write layer is added to the image.</li>
<li><strong>Allocates a network / bridge interface</strong>: Creates a network interface that allows the Docker container to talk to the local host.</li>
<li><strong>Sets up an IP address</strong>: Finds and attaches an available IP address from a pool.</li>
<li><strong>Executes a process that you specify</strong>: Executes the /bin/bash executable.</li>
<li><strong>Captures and provides application output</strong>: Connects and logs standard input, outputs and errors for you to see how your application is running, because you requested interactive mode.</li>
</ul>
<p>You can manage and interact with it, use the services and applications it provides, and eventually stop and remove it.</p>
<h3 id="the-underlying-technology"><a href="https://docs.docker.com/engine/understanding-docker/#/the-underlying-technology">The underlying technology</a></h3>
<p>Docker is written in Go programming language.</p>
<h4 id="namespaces"><a href="https://www.toptal.com/linux/separation-anxiety-isolating-your-system-with-linux-namespaces">Namespaces</a></h4>
<p>Docker uses a technology called namespaces to provide the isolated workspace called the container. When you run a container, Docker creates a set of namespaces for that container.</p>
<p>These namespaces provide a layer of isolation. Each aspect of a container runs in a separate namespace and its access is limited to that namespace.</p>
<p>Docker Engine uses namespaces such as the following on Linux:</p>
<ul>
<li>The <code>pid</code> namespace: Process isolation (PID: Process ID).</li>
<li>The <code>net</code> namespace: Managing network interfaces (NET: Networking).</li>
<li>The <code>ipc</code> namespace: Managing access to IPC resources (IPC: InterProcess Communication).</li>
<li>The <code>mnt</code> namespace: Managing filesystem mount points (MNT: Mount).</li>
<li>The <code>uts</code> namespace: Isolating kernel and version identifiers. (UTS: Unix Timesharing System).</li>
</ul>
<h4 id="control-groups"><a href="https://en.wikipedia.org/wiki/Cgroups">Control groups</a></h4>
<p>Docker Engine on Linux also relies on another technology called <em>control groups</em> (<code>cgroups</code>). A cgroup limits an application to a specific set of resources. Control groups allow Docker Engine to share available hardware resources to containers and optionally enforce limits and constraints. For example, you can limit the memory available to a specific container.</p>
<h4 id="union-file-systems"><a href="https://en.wikipedia.org/wiki/UnionFS">Union file systems</a></h4>
<p>Union file systems, or UnionFS, are file systems that operate by creating layers, making them very lightweight and fast. Docker Engine uses UnionFS to provide the building blocks for containers.</p>
<h4 id="container-format"><a href="https://blog.docker.com/2015/07/open-container-format-progress-report/">Container format</a></h4>
<p>Docker Engine combines the namespaces, control groups, and UnionFS into a wrapper called a container format.</p>
<p>Resourses:</p>
<ul>
<li><a href="https://www.docker.com/what-docker">What is Docker?</a></li>
<li><a href="http://www.zdnet.com/article/what-is-docker-and-why-is-it-so-darn-popular/">What is Docker and why is it so darn popular?</a></li>
<li><a href="https://habrahabr.ru/post/253877/">Понимая Docker</a></li>
<li><a href="https://docs.docker.com/engine/understanding-docker/">Docker Overview</a></li>
<li><a href="http://www.zdnet.com/article/docker-libcontainer-unifies-linux-container-powers/">Docker libcontainer unifies Linux container powers</a></li>
<li><a href="https://www.youtube.com/watch?v=4nviEODZlsA&amp;list=PL0M0zPgJ3HSftTAAHttA3JQU4vOjXFquF&amp;index=0">ASP.NET Community Standup - January 17th, 2017 - Messing with Docker</a></li>
<li><a href="https://www.simple-talk.com/sysadmin/virtualization/working-windows-containers-docker-basics/">Working with Windows Containers and Docker: The Basics</a></li>
<li><a href="https://docs.google.com/presentation/d/1M-b0BGA57bczBUg3er4rQsBta0U1RQ5lahrY1cEhUew/edit?usp=sharing">Understanding Docker presentation</a></li>
</ul>

"""""
),
            ["""2017-01-21-Update-pip-application-in-Ubuntu"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Update pip application in Ubuntu
""""",
["""date"""] =
"""""
 2017-01-21
""""",
["""tags"""] =
"""""
 linux
""""",
["""categories"""] =
"""""
 administration
""""",
 },
"""""
<p>To update application installed by pip, e.g. <a href="https://github.com/streamlink/streamlink">streamlink</a>:</p>
<pre><code class="language-bat">sudo pip install -U streamlink
</code></pre>

"""""
),
            ["""2017-02-12-Nancy-sample-application"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Nancy sample application
""""",
["""date"""] =
"""""
 2017-02-12
""""",
["""tags"""] =
"""""
 dotnet web
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<p>Hi there,</p>
<p>Just trying to create a simple service running on server. This service should report his status by HTTP and should have a nice log mechanism. So I finished my investigation to use <a href="https://www.microsoft.com/net/core">NetCore</a> + <a href="http://nancyfx.org/">Nancy</a> + <a href="https://serilog.net/">Serilog</a> + <a href="http://www.newtonsoft.com/json">Newtonsoft.Json</a> + <a href="https://github.com/FakeItEasy/FakeItEasy">FakeItEasy</a> + <a href="https://github.com/alhardy/AppMetrics">App Metrics</a>.</p>
<p>Please find the source code of sample application <a href="https://github.com/eapyl/nancy-netcore-sample">here</a>.</p>
<p>Want to mention that I had to install the next lib:</p>
<pre><code class="language-bat">sudo apt-get install libunwind8
</code></pre>
<p>to actually run my service on remote server - Ubuntu 16.04 x64. There was the next error: <code>Failed to load libcoreclr.so libunwind.so.8 cannot open shared object file”</code> without this library.</p>
<p>Also project.json is set up to build self-contained application:</p>
<pre><code class="language-bat">dotnet publish -c Release -r ubuntu.16.04-x64 -o packages/ubuntu
</code></pre>
<p>Thanks.</p>

"""""
),
            ["""2017-02-18-How-to-create-Discord-bot"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 How to create Discord bot
""""",
["""date"""] =
"""""
 2017-02-18
""""",
["""tags"""] =
"""""
 javascript discord
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<p>That is a manual how to create simple ping-pong discord bot using javascript (nodejs).</p>
<ul>
<li>Install nodejs and npm</li>
<li>Create a folder for your discord bot</li>
<li>Run <code>npm init</code> in the folder</li>
<li>Install <a href="https://discord.js.org/#/">Discrod.js</a>: <code>npm install --save discordjs</code></li>
<li>Create index.js in this folder:</li>
</ul>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#57A64A;">/*
  A ping pong bot, whenever you send &quot;ping&quot;, it replies &quot;pong&quot;.
*/</span>

<span style="color:#57A64A;">// import the discord.js module</span>
<span style="color:#569CD6;">const</span> Discord = require(<span style="color:#D69D85;">&#39;discord.js&#39;</span>);

<span style="color:#57A64A;">// create an instance of a Discord Client, and call it bot</span>
<span style="color:#569CD6;">const</span> bot = <span style="color:#569CD6;">new</span> Discord.Client();

<span style="color:#57A64A;">// the token of your bot - https://discordapp.com/developers/applications/me</span>
<span style="color:#569CD6;">const</span> token = <span style="color:#D69D85;">&#39;your bot token here&#39;</span>;

<span style="color:#57A64A;">// the ready event is vital, it means that your bot will only start reacting to information</span>
<span style="color:#57A64A;">// from Discord _after_ ready is emitted.</span>
bot.on(<span style="color:#D69D85;">&#39;ready&#39;</span>, () =&gt; {
  console.log(<span style="color:#D69D85;">&#39;I am ready!&#39;</span>);
});

<span style="color:#57A64A;">// create an event listener for messages</span>
bot.on(<span style="color:#D69D85;">&#39;message&#39;</span>, message =&gt; {
  <span style="color:#57A64A;">// if the message is &quot;ping&quot;,</span>
  <span style="color:#569CD6;">if</span> (message.content === <span style="color:#D69D85;">&#39;ping&#39;</span>) {
    <span style="color:#57A64A;">// send &quot;pong&quot; to the same channel.</span>
    message.channel.sendMessage(<span style="color:#D69D85;">&#39;pong&#39;</span>);
  }
});

<span style="color:#57A64A;">// log our bot in</span>
bot.login(token);
</pre></div>
<ul>
<li>Got to <a href="https://discordapp.com/developers/applications/me">https://discordapp.com/developers/applications/me</a> and create your bot</li>
<li>Put all needed values, click &quot;Create Application&quot;. On the next page scroll down until you see &quot;Create a bot user&quot;, click that.</li>
<li>After that you will be able to copy a token of your bot. Copy it and post it in created index.js</li>
<li>Go to <a href="https://discordapp.com/oauth2/authorize?&amp;client_id=YOUR_CLIENT_ID_HERE&amp;scope=bot&amp;permissions=0">https://discordapp.com/oauth2/authorize?&amp;client_id=YOUR_CLIENT_ID_HERE&amp;scope=bot&amp;permissions=0</a>. You should replace YOUR_CLIENT_ID_HERE with Client ID (it should be in App Details on the web page where you got your token).</li>
<li>Add your bot to the server.</li>
<li>Run created bot by command <code>node index.js</code></li>
<li>You should be able to see a bot in Discord at your server. Write 'ping' to the bot. The answer should be 'pong'.</li>
</ul>
<p>Well done! You created your Discord bot! Thank you.</p>
<p>Here is a simple rss bot for discord:</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">const</span> Discord = require(<span style="color:#D69D85;">&#39;discord.js&#39;</span>);
<span style="color:#569CD6;">var</span> Store = require(<span style="color:#D69D85;">&quot;jfs&quot;</span>); <span style="color:#57A64A;">// using jfs to save already posted rss news</span>
<span style="color:#569CD6;">var</span> db = <span style="color:#569CD6;">new</span> Store(<span style="color:#D69D85;">&quot;rssfeeds&quot;</span>);
<span style="color:#569CD6;">const</span> client = <span style="color:#569CD6;">new</span> Discord.Client();

<span style="color:#569CD6;">var</span> currentNews = [];
<span style="color:#569CD6;">var</span> postedNews = [];
<span style="color:#569CD6;">var</span> interval;

<span style="color:#569CD6;">function</span> log(message) {
    console.log(<span style="color:#569CD6;">new</span> Date() + <span style="color:#D69D85;">&quot;: &quot;</span> + message);
}

<span style="color:#57A64A;">/// load all posted rss news</span>
db.all(<span style="color:#569CD6;">function</span> (err, objs) {
    <span style="color:#569CD6;">if</span> (err) log(err);
    <span style="color:#569CD6;">for</span> (<span style="color:#569CD6;">var</span> id <span style="color:#569CD6;">in</span> objs) {
        postedNews.push({ id: id, value: objs[id] });
        log(<span style="color:#D69D85;">&quot;Restored posted news &quot;</span> + id);
    }
    loadFeeds();
});

client.on(<span style="color:#D69D85;">&#39;ready&#39;</span>, () =&gt; {
    log(<span style="color:#D69D85;">&#39;I am ready!&#39;</span>);
    <span style="color:#569CD6;">var</span> generalChannel = client.channels.get(<span style="color:#D69D85;">&quot;25466045464298784169786&quot;</span>);
    <span style="color:#569CD6;">if</span> (!interval) {
        interval = setInterval(() =&gt; {
            <span style="color:#569CD6;">if</span> (currentNews.length &gt; 0) {
                <span style="color:#569CD6;">var</span> newsToPost = currentNews.shift();
                generalChannel.sendMessage(newsToPost.title + <span style="color:#D69D85;">&quot; - &quot;</span> + newsToPost.link);
                db.save(newsToPost, <span style="color:#569CD6;">function</span> (err, id) {
                    <span style="color:#569CD6;">if</span> (err) log(err);
                    log(<span style="color:#D69D85;">&quot;Saved posted news &quot;</span> + id);
                    postedNews.push({ id: id, value: newsToPost });
                });

                log(<span style="color:#D69D85;">&quot;Post &quot;</span> + newsToPost.link);
                log(<span style="color:#D69D85;">&quot;Left in array - &quot;</span> + currentNews.length);
            }
        }, 60000 * 30);
    }
});

setInterval(() =&gt; {
    log(<span style="color:#D69D85;">&quot;Updating news&quot;</span>);
    loadFeeds();
}, 60000 * 60 * 24);

setInterval(() =&gt; {
    <span style="color:#569CD6;">while</span> (postedNews.length &gt; 1000) {
        <span style="color:#569CD6;">var</span> oldNewsToDelete = postedNews.shift();
        log(<span style="color:#D69D85;">&quot;deleting &quot;</span> + oldNewsToDelete.id)
        db.<span style="color:#569CD6;">delete</span>(oldNewsToDelete.id, <span style="color:#569CD6;">function</span> (err) {
            <span style="color:#569CD6;">if</span> (err) log(err);
        });
    }
}, 60000 * 60 * 24);

client.login(<span style="color:#D69D85;">&#39;MjgyNDg5MjQ0MDEyNzczMzc2.C4nUkw.Na6H7ZVrXbMZbXv4Wt9p8cZaj2Q&#39;</span>);

<span style="color:#57A64A;">// rss.json should contain information about rss, like:</span>
<span style="color:#57A64A;">//{</span>
<span style="color:#57A64A;">//    &quot;bbc&quot;: {</span>
<span style="color:#57A64A;">//        &quot;description&quot; : &quot;bbc news&quot;,</span>
<span style="color:#57A64A;">//        &quot;url&quot; : &quot;https://bbs.com/rss&quot;</span>
<span style="color:#57A64A;">//    }</span>
<span style="color:#57A64A;">//}</span>
<span style="color:#569CD6;">var</span> rssFeeds = require(<span style="color:#D69D85;">&quot;./rss.json&quot;</span>);

<span style="color:#57A64A;">/// load feeds from Resources</span>
<span style="color:#569CD6;">function</span> loadFeeds() {
    <span style="color:#569CD6;">for</span> (<span style="color:#569CD6;">var</span> feedName <span style="color:#569CD6;">in</span> rssFeeds) {
        rssfeed(rssFeeds[feedName].url);
    }
}

<span style="color:#569CD6;">function</span> rssfeed(url) {
    <span style="color:#569CD6;">var</span> FeedParser = require(<span style="color:#D69D85;">&#39;feedparser&#39;</span>);
    <span style="color:#569CD6;">var</span> feedparser = <span style="color:#569CD6;">new</span> FeedParser();
    <span style="color:#569CD6;">var</span> request = require(<span style="color:#D69D85;">&#39;request&#39;</span>);
    request(url).pipe(feedparser);
    feedparser.on(<span style="color:#D69D85;">&#39;error&#39;</span>, <span style="color:#569CD6;">function</span> (error) {
        log(error);
    });
    feedparser.on(<span style="color:#D69D85;">&#39;readable&#39;</span>, <span style="color:#569CD6;">function</span> () {
        <span style="color:#569CD6;">var</span> stream = <span style="color:#569CD6;">this</span>;
        <span style="color:#569CD6;">var</span> meta = <span style="color:#569CD6;">this</span>.meta; <span style="color:#57A64A;">// **NOTE** the &quot;meta&quot; is always available in the context of the feedparser instance</span>
        <span style="color:#569CD6;">var</span> item;

        <span style="color:#569CD6;">while</span> (item = stream.read()) {
            <span style="color:#569CD6;">if</span> (postedNews &amp;&amp; postedNews.some(x =&gt; x.value.title == item.title)) <span style="color:#569CD6;">continue</span>;
            <span style="color:#569CD6;">if</span> (currentNews.some(x =&gt; x.title == item.title)) <span style="color:#569CD6;">continue</span>;
            log(<span style="color:#D69D85;">&#39;Add news to current news array &#39;</span> + item.link);
            currentNews.push({
                title = &quot;item.title,
                link: item.link,
                date = &quot;item.date
            });
            <span style="color:#569CD6;">if</span> (currentNews.length &gt; 100) currentNews.shift();
        }
    });
}
</pre></div>
<p>Links:</p>
<ul>
<li><a href="https://github.com/reactiflux/discord-irc/wiki/Creating-a-discord-bot-&amp;-getting-a-token">Creating a discord bot &amp; getting a token</a></li>
<li><a href="https://discord.js.org/#/">Discord.js</a></li>
<li><a href="https://discord.js.org/#/docs/main/stable/examples/ping">Ping-Pong example</a></li>
<li><a href="https://discordapp.com/developers/applications/me">Discord Developers</a></li>
<li><a href="https://discordapp.com/">Discord</a></li>
</ul>

"""""
),
            ["""2017-03-05-Simple-question-to-check-understanding-of-multithreading"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Simple question to check understanding of multithreading
""""",
["""date"""] =
"""""
 2017-03-05
""""",
["""tags"""] =
"""""
 dotnet interview
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<p>How to do planning of two threads so none of them can leave a circle (X is global value and default value is 0)?</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">while</span> (X == <span style="color:#B5CEA8;">0</span>)
{
    X = <span style="color:#B5CEA8;">1</span> - X;
}
</pre></div>
"""""
),
            ["""2017-04-10-Giving-full-read+write-permissions-to-a-folder-by-all-users-and-apps"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Giving full read+write permissions to a folder by all users and apps
""""",
["""date"""] =
"""""
 2017-04-10
""""",
["""tags"""] =
"""""
 linux
""""",
["""categories"""] =
"""""
 administration
""""",
 },
"""""
<p>Allows delete, write and edit all files in a particular folder:</p>
<pre><code class="language-bat">chmod -R 777 &lt;desired folder&gt;
</code></pre>

"""""
),
            ["""2017-04-15-Backup-InfluxDB-in-Docker"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Backup InfluxDB in Docker
""""",
["""date"""] =
"""""
 2017-04-15
""""",
["""tags"""] =
"""""
 docker
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<p>If you want to backup your InfluxDB in Docker you can probably can start with this wonderful <a href="https://devblog.digimondo.io/how-to-backup-influxdb-running-in-a-docker-container-615938dbab90?gi=78ccabcf77cf">article</a>.</p>
<p>Later I will just describe how I am doing backup to local folder instead of S3 storage.</p>
<p>It is my docker-compose:</p>
<pre><code class="language-docker">    db:
        image: &quot;influxdb:1.2&quot;
        restart: always
        ports:
            - &quot;8086:8086&quot;
        volumes:
            - /etc/influxdb:/var/lib/ #folder with db data
            - ./influxdb.conf:/etc/influxdb/influxdb.conf:ro #configuration for InfluxDB
    influxdb-backup:
        image: influxdb-backup:1.2
        container_name: influxdb-backup
        restart: always
        volumes:
            - /backup:/backup #folder with backups
        links:
            - db
        environment:
            INFLUX_HOST: db
            DATABASES: entity_db
</code></pre>
<p>So there are two containers: influxdb is the standard <a href="https://docs.influxdata.com/influxdb/v1.2/introduction/getting_started/">InfluxDB</a> and influxdb-backup:1.2 (see dockerfile for this image below).</p>
<pre><code class="language-docker">FROM influxdb:1.2-alpine

# Backup the following databases, separator &quot;:&quot;
ENV DATABASES=entity_db
ENV INFLUX_HOST=influxdb

# Some tiny helpers
RUN apk update &amp;&amp; apk add ca-certificates &amp;&amp; update-ca-certificates &amp;&amp; apk add openssl
RUN apk add --no-cache bash py2-pip py-setuptools ca-certificates
RUN pip install python-magic

# Backup script
COPY backup.sh /bin/backup.sh
RUN chmod +x /bin/backup.sh

# Setup crontab
COPY cron.conf /var/spool/cron/crontabs/root

# Run Cron in foreground
CMD crond -l 0 -f
</code></pre>
<p>So we are running cron job to run our <code>backup.sh</code>. The configuration (cron.conf):</p>
<pre><code class="language-bat"># do daily/weekly/monthly maintenance
# min	hour	day	month	weekday	command
0 0 * * * /bin/backup.sh
# run every day at 00:00:00
</code></pre>
<p>There is backup.sh with the next content:</p>
<pre><code class="language-bat">#!/bin/bash
set -e

: ${INFLUX_HOST:?&quot;INFLUX_HOST env variable is required&quot;}

dir=/backup
min_dirs=16
#we are saving only last 14 backups (2 weeks)

if [ $(find &quot;$dir&quot; -maxdepth 1 -type d | wc -l) -ge $min_dirs ]
  then find &quot;$dir&quot; -maxdepth 1 | sort | head -n 2 | sort -r | head -n 1 | xargs rm -rf
fi

#all backups are in /backup folder
#every backup is in a folder with name which is date when a backup has been created
DATE=`date +%Y-%m-%d-%H-%M-%S`

echo 'Backup Influx metadata'
influxd backup -host $INFLUX_HOST:8088 /backup/$DATE

# Replace colons with spaces to create list.
for db in ${DATABASES//:/ }; do
  echo &quot;Creating backup for $db&quot;
  influxd backup -database $db -host $INFLUX_HOST:8088 /backup/$DATE
done
</code></pre>
<p>Please find an image <a href="./assets/inluxDbBackupDocker.zip">here</a>.</p>
<p>Thank you!</p>

"""""
),
            ["""2017-05-19-Daemon-cron-using-FSharp"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Daemon cron using F#
""""",
["""date"""] =
"""""
 2017-05-19
""""",
["""tags"""] =
"""""
 dotnet fsharp
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<p>As continuation for [my previous post]({% post_url 2017-06-01-Cron-schedule-using-FSharp %}) I want to create a daemon which runs jobs using created cron code.</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">module</span> Daemon =
    [&lt;Literal&gt;]
    <span style="color:#569CD6;">let</span> INTERVAL = 30000

    <span style="color:#569CD6;">let</span> internalRun interval (now: unit<span style="color:#569CD6;">-&gt;</span>DateTime) (jobs: seq&lt;Job&gt;) =
        <span style="color:#57A64A;">// to dispose System.Threading.Timer properly</span>
        <span style="color:#569CD6;">let</span> createDisposable f =
            {
                <span style="color:#569CD6;">new</span> IDisposable <span style="color:#569CD6;">with</span>
                    <span style="color:#569CD6;">member</span> x.Dispose() = f()
            }

        <span style="color:#57A64A;">// event fot Timer</span>
        <span style="color:#569CD6;">let</span> timerElapsed obj =
            <span style="color:#569CD6;">let</span> checkJob = () |&gt; now |&gt; Schedule.isTime
            jobs
            |&gt; Seq.map (<span style="color:#569CD6;">fun</span> x <span style="color:#569CD6;">-&gt;</span>
                <span style="color:#569CD6;">let</span> schedule = Schedule.generate x.cron
                (schedule, x.action)
            )
            |&gt; Seq.filter (<span style="color:#569CD6;">fun</span> (x, y) <span style="color:#569CD6;">-&gt;</span> checkJob x)
            |&gt; Seq.map (<span style="color:#569CD6;">fun</span> (x, y) <span style="color:#569CD6;">-&gt;</span> y)
            |&gt; Async.Parallel
            |&gt; Async.RunSynchronously
            |&gt; ignore

        <span style="color:#57A64A;">// timer</span>
        <span style="color:#569CD6;">let</span> localTimer = <span style="color:#569CD6;">new</span> Timer(timerElapsed, <span style="color:#569CD6;">null</span>, Timeout.Infinite, interval)
        <span style="color:#57A64A;">// start timer</span>
        localTimer.Change(0, interval) |&gt; ignore
        <span style="color:#57A64A;">// return timer as IDisposable</span>
        createDisposable (<span style="color:#569CD6;">fun</span>() <span style="color:#569CD6;">-&gt;</span> localTimer.Dispose())

    <span style="color:#57A64A;">// get DateTime</span>
    <span style="color:#569CD6;">let</span> now = <span style="color:#569CD6;">fun</span> () <span style="color:#569CD6;">-&gt;</span> DateTime.UtcNow
    <span style="color:#57A64A;">// public method to call</span>
    <span style="color:#569CD6;">let</span> run jobs = internalRun INTERVAL now jobs
</pre></div>
<p>How to use the daemon above:</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">type</span> Job = { action: Async&lt;unit&gt;; cron: string }

<span style="color:#569CD6;">let</span> act id =
    <span style="color:#569CD6;">async</span> {
        printfn <span style="color:#D69D85;">&quot;Execution %A&quot;</span> id
    }
<span style="color:#569CD6;">let</span> jobs = [|1; 2|] |&gt; Array.map (<span style="color:#569CD6;">fun</span> id <span style="color:#569CD6;">-&gt;</span>
    {
        action = act id;
        cron = <span style="color:#D69D85;">&quot;* * * * *&quot;</span>
    })
<span style="color:#569CD6;">let</span> daemon = run jobs
</pre></div>
<p>Unfortunately I don't see the good way to wtite unit test for this code as there is hardcoded dependency to System.Threading.Timer.</p>
<p>Feel free to comment if you see the solution. Thanks in advance.</p>

"""""
),
            ["""2017-05-28-Cron-service-using-FSharp-on-NET-Core"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Cron service using F# on .NET Core
""""",
["""date"""] =
"""""
 2017-05-28
""""",
["""tags"""] =
"""""
 dotnet fsharp
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<p>As continuation for [my previous post]({% post_url 2017-06-01-Cron-schedule-using-FSharp %}) I want to create a nancy service to run my cron jobs.</p>
<p>The source is <a href="https://github.com/eapyl/fsharp-nancy-service">here</a>.</p>
<p>A service to run jobs:</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">module</span> Service =
    <span style="color:#569CD6;">let</span> start (logger:ILogger) (items:Item[]) =
        <span style="color:#569CD6;">let</span> version = Microsoft.Extensions.PlatformAbstractions.PlatformServices.Default.Application.ApplicationVersion
        logger.LogInformation(<span style="color:#D69D85;">&quot;Staring service {version}&quot;</span>, version)
        <span style="color:#569CD6;">let</span> itemCount = Array.length items
        logger.LogInformation(<span style="color:#D69D85;">&quot;Item count is {Length}&quot;</span>, itemCount)
        <span style="color:#569CD6;">let</span> proceedItem item =
            <span style="color:#569CD6;">async</span> {
                logger.LogTrace(<span style="color:#D69D85;">&quot;ExecuteForItem {ip}&quot;</span>, item.id)
            }
        <span style="color:#569CD6;">let</span> jobs = items |&gt; Array.map (<span style="color:#569CD6;">fun</span> item <span style="color:#569CD6;">-&gt;</span>
            {
                action = proceedItem item;
                cron = item.cron
            })
        <span style="color:#569CD6;">let</span> daemon = run jobs
        logger.LogInformation(<span style="color:#D69D85;">&quot;Started service&quot;</span>)
        daemon
</pre></div>
<p>It contains only method <code>start</code> to create cron daemon.</p>
<p>All other classes is related to Nancy platform and it is easy to write using <a href="https://github.com/NancyFx/Nancy/wiki/Documentation">nancy documentation</a>.</p>

"""""
),
            ["""2017-06-01-Cron-schedule-using-FSharp"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Cron schedule using F#
""""",
["""date"""] =
"""""
 2017-06-01
""""",
["""tags"""] =
"""""
 dotnet fsharp
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<p>I decided to start learning fsharp and hope I will be able to use F# in my future small projects.</p>
<p>Currently I have a small service worked in Docker container. It is written using C# on dotnet core.
This service is for grabbing data from external services via HTTP and putting aggregated data to InfluxDB database. Internally the service is using cron to plan and run this process as we want to grab data periodically.</p>
<h4 id="i-started-with-rewriting-cron-scheduling">I started with rewriting cron scheduling.</h4>
<p>So there is implementation in F# below:</p>
<p>Let's start with two helper objects: <code>String.split</code> and <code>TooMuchArgumentsException</code> exception.</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">type</span> System.String <span style="color:#569CD6;">with</span>
    <span style="color:#569CD6;">static</span> <span style="color:#569CD6;">member</span> split c (value: string) =
        value.Split c

<span style="color:#569CD6;">exception</span> TooMuchArgumentsException <span style="color:#569CD6;">of</span> int
</pre></div>
<p><code>String.split</code> is just wrapper for <code>String.Split</code> method. Exception is needed to show when cron expression contains too much parts.</p>
<p>My internal cron supports the next template: 'minute hour dayOfMonth month dayOfWeek'. And the next type of cron expressions:</p>
<ol>
<li>'*' - wildcard;</li>
<li>'*/5' - every 5th, e.g. every five minutes;</li>
<li>'10-20/5' - range value, e.g. every from 10 till 20, e.g. every minute from 10 till 20. '/5' is optional and it works the same as previous one, so '10-20/5' for minutes means run at 10, 15 and 20;</li>
<li>'5' - one value only, e.g. only at 5th minute</li>
<li>'5,10,15,45' - list value, e.g. run at 5th, 10th, 15th and 45th minutes</li>
</ol>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">open</span> System
<span style="color:#569CD6;">open</span> System.Text.RegularExpressions

<span style="color:#569CD6;">module</span> Schedule =
    <span style="color:#57A64A;">// regexp for */5</span>
    [&lt;Literal&gt;]
    <span style="color:#569CD6;">let</span> DividePattern = <span style="color:#D69D85;">@&quot;(\*/\d+)&quot;</span>
    <span style="color:#57A64A;">// regexp for range</span>
    [&lt;Literal&gt;]
    <span style="color:#569CD6;">let</span> RangePattern = <span style="color:#D69D85;">@&quot;(\d+\-\d+(/\d+)?)&quot;</span>
    <span style="color:#57A64A;">// regexp for wild char</span>
    [&lt;Literal&gt;]
    <span style="color:#569CD6;">let</span> WildPattern = <span style="color:#D69D85;">@&quot;(\*)&quot;</span>
    <span style="color:#57A64A;">// regexp for one value</span>
    [&lt;Literal&gt;]
    <span style="color:#569CD6;">let</span> OneValuePattern = <span style="color:#D69D85;">@&quot;(\d)&quot;</span>
    <span style="color:#57A64A;">// regexp for list value</span>
    [&lt;Literal&gt;]
    <span style="color:#569CD6;">let</span> ListPattern = <span style="color:#D69D85;">@&quot;((\d+,)+\d+)&quot;</span>

    <span style="color:#57A64A;">// internal record to parsed cron expression, so it contains minutes,</span>
    <span style="color:#57A64A;">// hours, days of month, months and day of week when we should run our jobs</span>
    <span style="color:#569CD6;">type</span> ISchedueSet =
        {
            Minutes: int list;
            Hours: int list;
            DayOfMonth: int list;
            Months: int list;
            DayOfWeek: int list
        }

    <span style="color:#57A64A;">// method to generate ISchedueSet record from cron expression</span>
    <span style="color:#569CD6;">let</span> generate expression =
        <span style="color:#57A64A;">// internal method to parse */5</span>
        <span style="color:#569CD6;">let</span> dividedArray (m:string) start max =
            <span style="color:#569CD6;">let</span> divisor = m |&gt;  String.split [|<span style="color:#D69D85;">&#39;/&#39;</span>|] |&gt; Array.skip 1 |&gt; Array.head |&gt; Int32.Parse
            [start .. max] |&gt; List.filter (<span style="color:#569CD6;">fun</span> x <span style="color:#569CD6;">-&gt;</span> x % divisor = 0)
        <span style="color:#57A64A;">// internal method to parse range</span>
        <span style="color:#569CD6;">let</span> rangeArray (m:string) =
            <span style="color:#569CD6;">let</span> split = m |&gt; String.split [|<span style="color:#D69D85;">&#39;-&#39;</span>; <span style="color:#D69D85;">&#39;/&#39;</span>|] |&gt; Array.map Int32.Parse
            <span style="color:#569CD6;">match</span> Array.length split <span style="color:#569CD6;">with</span>
                | 2 <span style="color:#569CD6;">-&gt;</span> [split.[0] .. split.[1]]
                | 3 <span style="color:#569CD6;">-&gt;</span> [split.[0] .. split.[1]] |&gt; List.filter (<span style="color:#569CD6;">fun</span> x <span style="color:#569CD6;">-&gt;</span> x % split.[2] = 0)
                | _ <span style="color:#569CD6;">-&gt;</span> []
        <span style="color:#57A64A;">// internal method to parse wild char</span>
        <span style="color:#569CD6;">let</span> wildArray (m:string) start max =
            [start .. max]
        <span style="color:#57A64A;">// internal method to parse single value</span>
        <span style="color:#569CD6;">let</span> oneValue (m:string) =
            [m |&gt; Int32.Parse]
        <span style="color:#57A64A;">// internal method to parse list value</span>
        <span style="color:#569CD6;">let</span> listArray (m:string) =
            m |&gt; String.split [|<span style="color:#D69D85;">&#39;,&#39;</span>|] |&gt; Array.map Int32.Parse |&gt; Array.toList

        <span style="color:#57A64A;">// we need to set minimum and maximum value for every part of date time</span>
        <span style="color:#569CD6;">let</span> getStartAndMax i =
            <span style="color:#569CD6;">match</span> i <span style="color:#569CD6;">with</span>
            <span style="color:#57A64A;">// for minutes</span>
            | 0 <span style="color:#569CD6;">-&gt;</span> (0, 59)
            <span style="color:#57A64A;">// for hours</span>
            | 1 <span style="color:#569CD6;">-&gt;</span> (0, 23)
            <span style="color:#57A64A;">// for days of month</span>
            | 2 <span style="color:#569CD6;">-&gt;</span> (1, 31)
            <span style="color:#57A64A;">// for months</span>
            | 3 <span style="color:#569CD6;">-&gt;</span> (1, 12)
            <span style="color:#57A64A;">// for day of week</span>
            | 4 <span style="color:#569CD6;">-&gt;</span> (0, 6)
            <span style="color:#57A64A;">// throw an exception if don&#39;t know for what part of date time we need values</span>
            | _ <span style="color:#569CD6;">-&gt;</span> raise (TooMuchArgumentsException i)

        <span style="color:#57A64A;">// active pattern to match regexp</span>
        <span style="color:#569CD6;">let</span> (|MatchRegex|_|) pattern input =
            <span style="color:#569CD6;">let</span> m = Regex.Match(input, pattern)
            <span style="color:#569CD6;">if</span> m.Success <span style="color:#569CD6;">then</span> Some (m.ToString()) <span style="color:#569CD6;">else</span> None

        <span style="color:#57A64A;">// parsing cron expression and create a array of lists which contains all possibles values</span>
        <span style="color:#57A64A;">// for every part of daytime</span>
        <span style="color:#569CD6;">let</span> parts =
            expression
            |&gt; String.split [|<span style="color:#D69D85;">&#39; &#39;</span>|]
            |&gt; Array.mapi (<span style="color:#569CD6;">fun</span> i x <span style="color:#569CD6;">-&gt;</span>
                <span style="color:#569CD6;">let</span> (start, max) = getStartAndMax i
                <span style="color:#569CD6;">match</span> x <span style="color:#569CD6;">with</span>
                    | MatchRegex DividePattern x <span style="color:#569CD6;">-&gt;</span> dividedArray x start max
                    | MatchRegex RangePattern x <span style="color:#569CD6;">-&gt;</span> rangeArray x
                    | MatchRegex WildPattern x <span style="color:#569CD6;">-&gt;</span> wildArray x start max
                    | MatchRegex ListPattern x <span style="color:#569CD6;">-&gt;</span> listArray x
                    | MatchRegex OneValuePattern x <span style="color:#569CD6;">-&gt;</span> oneValue x
                    | _ <span style="color:#569CD6;">-&gt;</span> []
            )
        <span style="color:#57A64A;">// convert list of array to ISchedueSet</span>
        {
            Minutes = parts.[0];
            Hours = parts.[1];
            DayOfMonth = parts.[2];
            Months = parts.[3];
            DayOfWeek = parts.[4]
        }
    <span style="color:#57A64A;">// method to check date time via generated ISchedueSet</span>
    <span style="color:#569CD6;">let</span> isTime schedueSet (dateTime : DateTime) =
        List.exists ((=) dateTime.Minute) schedueSet.Minutes &amp;&amp;
        List.exists ((=) dateTime.Hour) schedueSet.Hours &amp;&amp;
        List.exists ((=) dateTime.Day) schedueSet.DayOfMonth &amp;&amp;
        List.exists ((=) dateTime.Month) schedueSet.Months &amp;&amp;
        List.exists ((=) (int dateTime.DayOfWeek)) schedueSet.DayOfWeek
</pre></div>
<p>So Schedule module contains two methods and one type:</p>
<ul>
<li>ISchedueSet is a container for parsed cron expression;</li>
<li>generate is to generate ISchedueSet record from cron expression. This record contains all possible values of minutes, hours, months, days of month, days of week for particular cron expression;</li>
<li>isTime is to check if we need to run a job in passed date time</li>
</ul>
<p>Small sets of unit tests written using mstest:</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">namespace</span> FsharpTest

<span style="color:#569CD6;">open</span> System
<span style="color:#569CD6;">open</span> Microsoft.VisualStudio.TestTools.UnitTesting
<span style="color:#569CD6;">open</span> Cron
<span style="color:#569CD6;">open</span> Schedule

<span style="color:#57A64A;">// minute hour dayOfMonth month dayOfWeek</span>
[&lt;TestClass&gt;]
<span style="color:#569CD6;">type</span> ScheduleTests () =

    [&lt;TestMethod&gt;]
    <span style="color:#569CD6;">member</span> this.All () =
        <span style="color:#569CD6;">let</span> schedule = Schedule.generate <span style="color:#D69D85;">&quot;* * * * *&quot;</span>
        Assert.IsTrue(List.forall2 ( = ) schedule.DayOfMonth [1..31]);
        Assert.IsTrue(List.forall2 ( = ) schedule.DayOfWeek [0..6]);
        Assert.IsTrue(List.forall2 ( = ) schedule.Hours [0..23]);
        Assert.IsTrue(List.forall2 ( = ) schedule.Minutes [0..59]);
        Assert.IsTrue(List.forall2 ( = ) schedule.Months [1..12]);

    [&lt;TestMethod&gt;]
    <span style="color:#569CD6;">member</span> this.Range () =
        <span style="color:#569CD6;">let</span> schedule = Schedule.generate <span style="color:#D69D85;">&quot;0-5 0-10/2 10-20/3 3-5 2-6/2&quot;</span>
        Assert.IsTrue(List.forall2 ( = ) schedule.DayOfMonth [12; 15; 18]);
        Assert.IsTrue(List.forall2 ( = ) schedule.DayOfWeek [2; 4; 6]);
        Assert.IsTrue(List.forall2 ( = ) schedule.Hours [0; 2; 4; 6; 8; 10]);
        Assert.IsTrue(List.forall2 ( = ) schedule.Minutes [0; 1; 2; 3; 4; 5]);
        Assert.IsTrue(List.forall2 ( = ) schedule.Months [3; 4; 5]);

    [&lt;TestMethod&gt;]
    <span style="color:#569CD6;">member</span> this.OneTime () =
        <span style="color:#569CD6;">let</span> schedule = Schedule.generate <span style="color:#D69D85;">&quot;0 0 1 1 0&quot;</span>
        Assert.IsTrue(List.forall2 ( = ) schedule.DayOfMonth [1]);
        Assert.IsTrue(List.forall2 ( = ) schedule.DayOfWeek [0]);
        Assert.IsTrue(List.forall2 ( = ) schedule.Hours [0]);
        Assert.IsTrue(List.forall2 ( = ) schedule.Minutes [0]);
        Assert.IsTrue(List.forall2 ( = ) schedule.Months [1]);

    [&lt;TestMethod&gt;]
    <span style="color:#569CD6;">member</span> this.Every () =
        <span style="color:#569CD6;">let</span> schedule = Schedule.generate <span style="color:#D69D85;">&quot;*/15 */3 */2 */5 *&quot;</span>
        Assert.IsTrue(List.forall2 ( = ) schedule.DayOfMonth [<span style="color:#569CD6;">for</span> i <span style="color:#569CD6;">in</span> [1 .. 31] <span style="color:#569CD6;">do</span>
                                                                <span style="color:#569CD6;">if</span> i%2 = 0 <span style="color:#569CD6;">then</span>
                                                                    <span style="color:#569CD6;">yield</span> i]
        );
        Assert.IsTrue(List.forall2 ( = ) schedule.DayOfWeek [0 .. 6]);
        Assert.IsTrue(List.forall2 ( = ) schedule.Hours [0; 3; 6; 9; 12; 15; 18; 21]);
        Assert.IsTrue(List.forall2 ( = ) schedule.Minutes [0; 15; 30; 45]);
        Assert.IsTrue(List.forall2 ( = ) schedule.Months [5; 10]);

    [&lt;TestMethod&gt;]
    <span style="color:#569CD6;">member</span> this.OnlySome () =
        <span style="color:#569CD6;">let</span> schedule = Schedule.generate <span style="color:#D69D85;">&quot;1,2,3 5,6,7 28,29 1,2 5,6&quot;</span>
        Assert.IsTrue(List.forall2 ( = ) schedule.DayOfMonth [28;29]);
        Assert.IsTrue(List.forall2 ( = ) schedule.DayOfWeek [5;6]);
        Assert.IsTrue(List.forall2 ( = ) schedule.Hours [5;6;7]);
        Assert.IsTrue(List.forall2 ( = ) schedule.Minutes [1;2;3]);
        Assert.IsTrue(List.forall2 ( = ) schedule.Months [1;2]);

    [&lt;TestMethod&gt;]
    <span style="color:#569CD6;">member</span> this.IsTime () =
        <span style="color:#569CD6;">let</span> dateTime = DateTime(2000, 1, 1, 0, 0, 0)
        <span style="color:#569CD6;">let</span> schedule = { Minutes = [0]; Hours = [0]; DayOfWeek = [0 .. 6]; DayOfMonth = [1]; Months = [1]}
        Assert.IsTrue(Schedule.isTime schedule dateTime)
</pre></div>
<p>Quite simple implementation of cron schedule part of mentioned service.</p>
<p>Thanks.</p>

"""""
),
            ["""2017-06-22-CakeNet-Useful-scripts-for-AngularJS,-dotnet-core,-docker-application"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Cake.Net. Useful scripts for AngularJS, dotnet core, docker application
""""",
["""date"""] =
"""""
 2017-06-22
""""",
["""tags"""] =
"""""
 dotnet docker cake
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<p>There is a great <a href="http://cakebuild.net/">cross-platform build automation tool</a> - Cake.Net.</p>
<p>I started using it and created some useful scripts to Release and Publish new version of application.</p>
<p>I am using AngularJS as frontend framework, asp net core (dotnet core) as backend framework, git as source system and docker to deploy and run application on remote server.</p>
<p>So it is a small cake script to release a new version of application:</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
#addin <span style="color:#D69D85;">&quot;Cake.Docker&quot;</span>
#addin <span style="color:#D69D85;">&quot;Cake.FileHelpers&quot;</span>

<span style="color:#57A64A;">// Release: ./build.sh -t Release &quot;-packageVersion=x.x.x.x&quot;</span>
<span style="color:#57A64A;">// Publish: ./build.sh -t Publish &quot;-packageVersion=x.x.x.x&quot; &quot;-env=one&quot;</span>
<span style="color:#57A64A;">// Delete release: ./build.sh -t Delete &quot;-packageVersion=x.x.x.x&quot;</span>
<span style="color:#569CD6;">var</span> target = Argument&lt;<span style="color:#569CD6;">string</span>&gt;(<span style="color:#D69D85;">&quot;target&quot;</span>);
<span style="color:#569CD6;">var</span> version = Argument&lt;<span style="color:#569CD6;">string</span>&gt;(<span style="color:#D69D85;">&quot;packageVersion&quot;</span>);

<span style="color:#569CD6;">public</span> <span style="color:#569CD6;">class</span> Settings
{
    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">string</span> SshAddress;
    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">string</span> SshPort;
    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">string</span> HomePath;
}

Settings sets;

Task(<span style="color:#D69D85;">&quot;SelectEnvironment&quot;</span>)
    .Does(()=&gt;{
        <span style="color:#569CD6;">var</span> env = Argument&lt;<span style="color:#569CD6;">string</span>&gt;(<span style="color:#D69D85;">&quot;env&quot;</span>);
        <span style="color:#569CD6;">var</span> environments = <span style="color:#569CD6;">new</span> Dictionary&lt;<span style="color:#569CD6;">string</span>, Settings&gt; {
            [<span style="color:#D69D85;">&quot;one&quot;</span>] = <span style="color:#569CD6;">new</span> Settings {
                SshAddress = <span style="color:#D69D85;">&quot;root@66.66.66.66&quot;</span>,
                SshPort = <span style="color:#D69D85;">&quot;22&quot;</span>,
                HomePath = <span style="color:#D69D85;">&quot;/root/Templates&quot;</span>
            },
            [<span style="color:#D69D85;">&quot;two&quot;</span>] = <span style="color:#569CD6;">new</span> Settings{
                SshAddress = <span style="color:#D69D85;">&quot;root@99.99.99.99&quot;</span>,
                SshPort = <span style="color:#D69D85;">&quot;26&quot;</span>,
                HomePath = <span style="color:#D69D85;">&quot;/home/Templates&quot;</span>
            }
        };
        sets = environments[env];
});

Task(<span style="color:#D69D85;">&quot;Publish&quot;</span>)
    .IsDependentOn(<span style="color:#D69D85;">&quot;SelectEnvironment&quot;</span>)
    .IsDependentOn(<span style="color:#D69D85;">&quot;CheckAllCommitted&quot;</span>)
    .IsDependentOn(<span style="color:#D69D85;">&quot;CheckoutTag&quot;</span>)
    .IsDependentOn(<span style="color:#D69D85;">&quot;BuildAngular&quot;</span>)
    .IsDependentOn(<span style="color:#D69D85;">&quot;BuildDocker&quot;</span>)
    .IsDependentOn(<span style="color:#D69D85;">&quot;CheckoutBranch&quot;</span>)
    .IsDependentOn(<span style="color:#D69D85;">&quot;PushToGitLab&quot;</span>)
    .IsDependentOn(<span style="color:#D69D85;">&quot;PublishService&quot;</span>)
    .Does(()=&gt;
    {
        Information(<span style="color:#D69D85;">&quot;Finished!&quot;</span>);
    });

Task(<span style="color:#D69D85;">&quot;Release&quot;</span>)
    .IsDependentOn(<span style="color:#D69D85;">&quot;SetVersion&quot;</span>)
    .IsDependentOn(<span style="color:#D69D85;">&quot;ReleaseNotes&quot;</span>)
    .IsDependentOn(<span style="color:#D69D85;">&quot;Commit&quot;</span>)
    .IsDependentOn(<span style="color:#D69D85;">&quot;Build&quot;</span>)
    .IsDependentOn(<span style="color:#D69D85;">&quot;PushTagToGit&quot;</span>)
    .Does(()=&gt;
    {
        Information(<span style="color:#D69D85;">&quot;Finished!&quot;</span>);
    });

<span style="color:#57A64A;">//build angular</span>
Task(<span style="color:#D69D85;">&quot;Build Angular&quot;</span>)
    .Does(() =&gt;
    {
        StartProcess(<span style="color:#D69D85;">&quot;ng&quot;</span>, <span style="color:#D69D85;">&quot;build&quot;</span>);
    });

<span style="color:#57A64A;">// delete release (tag)</span>
Task(<span style="color:#D69D85;">&quot;Delete&quot;</span>)
    .Does(()=&gt;
    {
        StartProcess(<span style="color:#D69D85;">&quot;git&quot;</span>, $<span style="color:#D69D85;">&quot;tag --delete v{version}&quot;</span>);
        StartProcess(<span style="color:#D69D85;">&quot;git&quot;</span>, $<span style="color:#D69D85;">&quot;push --delete origin v{version}&quot;</span>);
    });

<span style="color:#57A64A;">// add release notes to historys</span>
Task(<span style="color:#D69D85;">&quot;ReleaseNotes&quot;</span>)
    .Does(()=&gt; {
        IEnumerable&lt;<span style="color:#569CD6;">string</span>&gt; redirectedOutput;
        StartProcess(<span style="color:#D69D85;">&quot;git&quot;</span>,
            <span style="color:#569CD6;">new</span> ProcessSettings {
                Arguments = $<span style="color:#D69D85;">&quot;describe --abbrev=0 --tags&quot;</span>,
                RedirectStandardOutput = <span style="color:#569CD6;">true</span>
            },
            <span style="color:#569CD6;">out</span> redirectedOutput
        );
        <span style="color:#569CD6;">var</span> previousVersion = redirectedOutput.First();
        Information(previousVersion);
        IEnumerable&lt;<span style="color:#569CD6;">string</span>&gt; redirectedOutput2;
        StartProcess(<span style="color:#D69D85;">&quot;git&quot;</span>,
            <span style="color:#569CD6;">new</span> ProcessSettings {
                Arguments = $<span style="color:#D69D85;">&quot;log --pretty=\&quot;%s\&quot; HEAD...{previousVersion}&quot;</span>,
                RedirectStandardOutput = <span style="color:#569CD6;">true</span>
            },
            <span style="color:#569CD6;">out</span> redirectedOutput2
        );
        FileAppendLines(<span style="color:#D69D85;">&quot;./src/HISTORY.txt&quot;</span>, <span style="color:#569CD6;">new</span> <span style="color:#569CD6;">string</span>[]{$<span style="color:#D69D85;">&quot;------release v{version}-----&quot;</span>});
        FileAppendLines(<span style="color:#D69D85;">&quot;./src/HISTORY.txt&quot;</span>, redirectedOutput2.ToArray());
    });

<span style="color:#57A64A;">// push docker image to gitlab</span>
Task(<span style="color:#D69D85;">&quot;PushToGitLab&quot;</span>)
    .Does(()=&gt;{
        StartProcess(<span style="color:#D69D85;">&quot;docker&quot;</span>, $<span style="color:#D69D85;">&quot;push registry.gitlab.com/counterra/service:{version}&quot;</span>);
    });

<span style="color:#57A64A;">// build project locally</span>
Task(<span style="color:#D69D85;">&quot;Build&quot;</span>)
    .Does(() =&gt;
{
    DotNetCoreRestore(<span style="color:#D69D85;">&quot;./src/counterra.csproj&quot;</span>);
    CleanDirectory(<span style="color:#D69D85;">&quot;./artifacts&quot;</span>);
    <span style="color:#569CD6;">var</span> settings = <span style="color:#569CD6;">new</span> DotNetCorePublishSettings
    {
        Framework = <span style="color:#D69D85;">&quot;netcoreapp1.1&quot;</span>,
        Configuration = <span style="color:#D69D85;">&quot;Release&quot;</span>,
        OutputDirectory = <span style="color:#D69D85;">&quot;./artifacts/&quot;</span>
    };
    DotNetCorePublish(<span style="color:#D69D85;">&quot;./src/counterra.csproj&quot;</span>, settings);
});

<span style="color:#57A64A;">// set new version in project file</span>
Task(<span style="color:#D69D85;">&quot;SetVersion&quot;</span>)
    .Does(()=&gt;
    {
        <span style="color:#569CD6;">var</span> file = File(<span style="color:#D69D85;">&quot;./src/counterra.csproj&quot;</span>);
        XmlPoke(file, <span style="color:#D69D85;">&quot;/Project/PropertyGroup/Version&quot;</span>, version);
    });

<span style="color:#57A64A;">// build docker</span>
Task(<span style="color:#D69D85;">&quot;BuildDocker&quot;</span>)
    .Does(() =&gt;
{
    <span style="color:#569CD6;">var</span> settings = <span style="color:#569CD6;">new</span> DockerBuildSettings {
        Tag = <span style="color:#569CD6;">new</span> []{ $<span style="color:#D69D85;">&quot;registry.gitlab.com/counterra/service:{version}&quot;</span> }
    };
    DockerBuild(settings, <span style="color:#D69D85;">&quot;.&quot;</span>);
});

<span style="color:#57A64A;">// go to remote server and replace docker there</span>
Task(<span style="color:#D69D85;">&quot;PublishService&quot;</span>)
    .Does(() =&gt;
{
    StartProcess(<span style="color:#D69D85;">&quot;scp&quot;</span>, $<span style="color:#D69D85;">&quot;-P {sets.SshPort} {sets.SshAddress}:{sets.HomePath}/server/docker-compose.yml ./artifacts/&quot;</span>);
    ReplaceRegexInFiles(<span style="color:#D69D85;">&quot;./artifacts/docker-compose.yml&quot;</span>, <span style="color:#D69D85;">@&quot;registry.gitlab.com/counterra/service:\d+\.\d+\.\d+\.\d+&quot;</span>, $<span style="color:#D69D85;">&quot;registry.gitlab.com/counterra/service:{version}&quot;</span>);

    StartProcess(<span style="color:#D69D85;">&quot;ssh&quot;</span>, $<span style="color:#D69D85;">&quot;-p {sets.SshPort} {sets.SshAddress} cd {sets.HomePath}/server/; docker-compose stop service&quot;</span>);
    StartProcess(<span style="color:#D69D85;">&quot;ssh&quot;</span>, $<span style="color:#D69D85;">&quot;-p {sets.SshPort} {sets.SshAddress} cd {sets.HomePath}/server/; docker-compose rm -f service&quot;</span>);
    StartProcess(<span style="color:#D69D85;">&quot;scp&quot;</span>, $<span style="color:#D69D85;">&quot;-P {sets.SshPort} ./artifacts/docker-compose.yml {sets.SshAddress}:{sets.HomePath}/server/&quot;</span>);
    StartProcess(<span style="color:#D69D85;">&quot;ssh&quot;</span>, $<span style="color:#D69D85;">&quot;-p {sets.SshPort} {sets.SshAddress} cd {sets.HomePath}/server/; docker-compose create service&quot;</span>);
    StartProcess(<span style="color:#D69D85;">&quot;ssh&quot;</span>, $<span style="color:#D69D85;">&quot;-p {sets.SshPort} {sets.SshAddress} cd {sets.HomePath}/server/; docker-compose start service&quot;</span>);
});

<span style="color:#57A64A;">// push new tag</span>
Task(<span style="color:#D69D85;">&quot;PushTagToGit&quot;</span>)
    .Does(() =&gt;
{
    StartProcess(<span style="color:#D69D85;">&quot;git&quot;</span>, $<span style="color:#D69D85;">&quot;tag v{version}&quot;</span>);
    StartProcess(<span style="color:#D69D85;">&quot;git&quot;</span>, <span style="color:#D69D85;">&quot;push --tags&quot;</span>);
});

<span style="color:#57A64A;">// checkout tag</span>
Task(<span style="color:#D69D85;">&quot;CheckoutTag&quot;</span>)
    .Does(() =&gt;
{
    StartProcess(<span style="color:#D69D85;">&quot;git&quot;</span>, $<span style="color:#D69D85;">&quot;checkout tags/v{version}&quot;</span>);
});

<span style="color:#57A64A;">// checkout master</span>
Task(<span style="color:#D69D85;">&quot;CheckoutBranch&quot;</span>)
    .Does(() =&gt;
{
    StartProcess(<span style="color:#D69D85;">&quot;git&quot;</span>, $<span style="color:#D69D85;">&quot;checkout master&quot;</span>);
});

<span style="color:#57A64A;">// commit all to branch and push it</span>
Task(<span style="color:#D69D85;">&quot;Commit&quot;</span>)
    .Does(() =&gt;
{
    StartProcess(<span style="color:#D69D85;">&quot;git&quot;</span>, $<span style="color:#D69D85;">&quot;add .&quot;</span>);
    StartProcess(<span style="color:#D69D85;">&quot;git&quot;</span>, $<span style="color:#D69D85;">&quot;commit -m \&quot;Release v{version}\&quot; &quot;</span>);
    StartProcess(<span style="color:#D69D85;">&quot;git&quot;</span>, $<span style="color:#D69D85;">&quot;push&quot;</span>);
});

<span style="color:#57A64A;">// check that we haven&#39;t uncommitted files</span>
Task(<span style="color:#D69D85;">&quot;CheckAllCommitted&quot;</span>)
    .Does(() =&gt;
{
    IEnumerable&lt;<span style="color:#569CD6;">string</span>&gt; redirectedOutput;
    StartProcess(<span style="color:#D69D85;">&quot;git&quot;</span>,
        <span style="color:#569CD6;">new</span> ProcessSettings {
            Arguments = <span style="color:#D69D85;">&quot;status&quot;</span>,
            RedirectStandardOutput = <span style="color:#569CD6;">true</span>
        },
        <span style="color:#569CD6;">out</span> redirectedOutput
    );
    <span style="color:#569CD6;">if</span> (!redirectedOutput.LastOrDefault().Contains(<span style="color:#D69D85;">&quot;nothing to commit&quot;</span>))
    {
        <span style="color:#569CD6;">throw</span> <span style="color:#569CD6;">new</span> Exception(<span style="color:#D69D85;">&quot;Exists uncommitted changes&quot;</span>);
    }
});

RunTarget(target);

</pre></div>
<p>It is a script to build released version and publish a docker container to a server:</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#57A64A;">// Release: ./build.sh -t Release &quot;-packageVersion=x.x.x.x&quot;</span>
<span style="color:#57A64A;">// Publish: ./build.sh -t Publish &quot;-packageVersion=x.x.x.x&quot; &quot;-env=counterra&quot;</span>
<span style="color:#57A64A;">// Delete release: ./build.sh -t Delete &quot;-packageVersion=x.x.x.x&quot;</span>
<span style="color:#569CD6;">var</span> target = Argument&lt;<span style="color:#569CD6;">string</span>&gt;(<span style="color:#D69D85;">&quot;target&quot;</span>);
<span style="color:#569CD6;">var</span> version = Argument&lt;<span style="color:#569CD6;">string</span>&gt;(<span style="color:#D69D85;">&quot;packageVersion&quot;</span>);

<span style="color:#569CD6;">public</span> <span style="color:#569CD6;">class</span> Settings
{
    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">string</span> SshAddress;
    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">string</span> SshPort;
    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">string</span> HomePath;
}

Settings sets;

Task(<span style="color:#D69D85;">&quot;SelectEnvironment&quot;</span>)
    .Does(()=&gt;{
        <span style="color:#569CD6;">var</span> env = Argument&lt;<span style="color:#569CD6;">string</span>&gt;(<span style="color:#D69D85;">&quot;env&quot;</span>);
        <span style="color:#569CD6;">var</span> environments = <span style="color:#569CD6;">new</span> Dictionary&lt;<span style="color:#569CD6;">string</span>, Settings&gt; {
            [<span style="color:#D69D85;">&quot;counterra&quot;</span>] = <span style="color:#569CD6;">new</span> Settings {
                SshAddress = <span style="color:#D69D85;">&quot;root@83.220.171.23&quot;</span>,
                SshPort = <span style="color:#D69D85;">&quot;22&quot;</span>,
                HomePath = <span style="color:#D69D85;">&quot;/root/Templates&quot;</span>
            },
            [<span style="color:#D69D85;">&quot;tj&quot;</span>] = <span style="color:#569CD6;">new</span> Settings{
                SshAddress = <span style="color:#D69D85;">&quot;vorsa@195.14.96.218&quot;</span>,
                SshPort = <span style="color:#D69D85;">&quot;26&quot;</span>,
                HomePath = <span style="color:#D69D85;">&quot;/home/vorsa&quot;</span>
            }
        };
        sets = environments[env];
});

Task(<span style="color:#D69D85;">&quot;Publish&quot;</span>)
    .IsDependentOn(<span style="color:#D69D85;">&quot;SelectEnvironment&quot;</span>)
    .IsDependentOn(<span style="color:#D69D85;">&quot;CheckAllCommitted&quot;</span>)
    .IsDependentOn(<span style="color:#D69D85;">&quot;CheckoutTag&quot;</span>)
    <span style="color:#57A64A;">// build angular</span>
    .IsDependentOn(<span style="color:#D69D85;">&quot;Build Angular&quot;</span>)
    .IsDependentOn(<span style="color:#D69D85;">&quot;BuildDocker&quot;</span>)
    .IsDependentOn(<span style="color:#D69D85;">&quot;CheckoutBranch&quot;</span>)
    .IsDependentOn(<span style="color:#D69D85;">&quot;PushToGitLab&quot;</span>)
    .IsDependentOn(<span style="color:#D69D85;">&quot;PublishService&quot;</span>)
    .Does(()=&gt;
    {
        Information(<span style="color:#D69D85;">&quot;Finished!&quot;</span>);
    });

Task(<span style="color:#D69D85;">&quot;Release&quot;</span>)
    .IsDependentOn(<span style="color:#D69D85;">&quot;SetVersion&quot;</span>)
    .IsDependentOn(<span style="color:#D69D85;">&quot;ReleaseNotes&quot;</span>)
    .IsDependentOn(<span style="color:#D69D85;">&quot;Commit&quot;</span>)
    .IsDependentOn(<span style="color:#D69D85;">&quot;Build&quot;</span>)
    .IsDependentOn(<span style="color:#D69D85;">&quot;PushTagToGit&quot;</span>)
    .Does(()=&gt;
    {
        Information(<span style="color:#D69D85;">&quot;Finished!&quot;</span>);
    });

Task(<span style="color:#D69D85;">&quot;Publish&quot;</span>)
    <span style="color:#57A64A;">// check that current &#39;master&#39; branch hasn&#39;t uncommitted changes</span>
    .IsDependentOn(<span style="color:#D69D85;">&quot;CheckAllCommitted&quot;</span>)
    <span style="color:#57A64A;">// checkout release tag</span>
    .IsDependentOn(<span style="color:#D69D85;">&quot;CheckoutTag&quot;</span>)
    <span style="color:#57A64A;">// build angular</span>
    .IsDependentOn(<span style="color:#D69D85;">&quot;Build Angular&quot;</span>)
    <span style="color:#57A64A;">// build release</span>
    .IsDependentOn(<span style="color:#D69D85;">&quot;Build&quot;</span>)
    <span style="color:#57A64A;">// return &#39;master&#39; to HEAD as we have published release in artifacts folder</span>
    .IsDependentOn(<span style="color:#D69D85;">&quot;CheckoutBranch&quot;</span>)
    <span style="color:#57A64A;">// create docker image using published release</span>
    .IsDependentOn(<span style="color:#D69D85;">&quot;BuildDocker&quot;</span>)
    <span style="color:#57A64A;">// copy image to remote server</span>
    .IsDependentOn(<span style="color:#D69D85;">&quot;ExportDocker&quot;</span>)
    <span style="color:#57A64A;">// import new image, replace running container</span>
    .IsDependentOn(<span style="color:#D69D85;">&quot;PublishService&quot;</span>)
    .Does(()=&gt;
    {
        Information(<span style="color:#D69D85;">&quot;Finished!&quot;</span>);
    });

Task(<span style="color:#D69D85;">&quot;Build Angular&quot;</span>)
    .Does(() =&gt;
{
    StartProcess(<span style="color:#D69D85;">&quot;ng&quot;</span>, <span style="color:#D69D85;">&quot;build&quot;</span>);
});

Task(<span style="color:#D69D85;">&quot;Build&quot;</span>)
    .Does(() =&gt;
{
    DotNetCoreRestore($ <span style="color:#D69D85;">&quot;./src/{Settings.ProjectName}&quot;</span>);
    CleanDirectory(<span style="color:#D69D85;">&quot;./artifacts&quot;</span>);
    <span style="color:#569CD6;">var</span> settings = <span style="color:#569CD6;">new</span> DotNetCorePublishSettings
    {
        Framework = <span style="color:#D69D85;">&quot;netcoreapp1.1&quot;</span>,
        Configuration = <span style="color:#D69D85;">&quot;Release&quot;</span>,
        OutputDirectory = <span style="color:#D69D85;">&quot;./artifacts/&quot;</span>
    };
    DotNetCorePublish($ <span style="color:#D69D85;">&quot;./src/{Settings.ProjectName}&quot;</span>, settings);
    <span style="color:#57A64A;">// clean up artifacts folder</span>
    DeleteDirectory(<span style="color:#D69D85;">&quot;./artifacts/e2e&quot;</span>, recursive:<span style="color:#569CD6;">true</span>);
    DeleteDirectory(<span style="color:#D69D85;">&quot;./artifacts/src&quot;</span>, recursive:<span style="color:#569CD6;">true</span>);
    DeleteFiles(<span style="color:#D69D85;">&quot;./artifacts/ts*.json&quot;</span>);
});

Task(<span style="color:#D69D85;">&quot;BuildDocker&quot;</span>)
    .Does(() =&gt;
{
    <span style="color:#569CD6;">var</span> settings = <span style="color:#569CD6;">new</span> DockerBuildSettings {
        Tag = <span style="color:#569CD6;">new</span> []{ $ <span style="color:#D69D85;">&quot;{Settings.ContainerName}:{version}&quot;</span> }
    };
    DockerBuild(settings, <span style="color:#D69D85;">&quot;.&quot;</span>);
});

Task(<span style="color:#D69D85;">&quot;ExportDocker&quot;</span>)
    .Does(() =&gt;
{
    <span style="color:#569CD6;">var</span> settings = <span style="color:#569CD6;">new</span> DockerSaveSettings {
        Output = $ <span style="color:#D69D85;">&quot;./artifacts/{Settings.ContainerName}.{version}.tar&quot;</span>
    };
    <span style="color:#57A64A;">// save docker image to tar archive</span>
    DockerSave(settings, <span style="color:#569CD6;">new</span>[] { $ <span style="color:#D69D85;">&quot;{Settings.ContainerName}:{version}&quot;</span>});
});

Task(<span style="color:#D69D85;">&quot;PublishService&quot;</span>)
    .Does(() =&gt;
{
    <span style="color:#57A64A;">// cope docker image to remote server</span>
    StartProcess(<span style="color:#D69D85;">&quot;scp&quot;</span>, $ <span style="color:#D69D85;">&quot;-P {Settings.SshPort} ./artifacts/{Settings.ContainerName}.{version}.tar {Settings.SshAddress}:{Settings.HomePath}/&quot;</span>);
    <span style="color:#57A64A;">// load copied image to docker on remote server</span>
    StartProcess(<span style="color:#D69D85;">&quot;ssh&quot;</span>, $ <span style="color:#D69D85;">&quot;-p {Settings.SshPort} {Settings.SshAddress} docker load &lt; {Settings.HomePath}/{Settings.ContainerName}.{version}.tar&quot;</span>);

    <span style="color:#57A64A;">// copy docker-compose configuration from remote server to artifacts folder</span>
    StartProcess(<span style="color:#D69D85;">&quot;scp&quot;</span>, $ <span style="color:#D69D85;">&quot;-P {Settings.SshPort} {Settings.SshAddress}:{Settings.HomePath}/docker-compose.yml ./artifacts/&quot;</span>);
    <span style="color:#57A64A;">// replace the version of docker image in docker-compose configuration</span>
    ReplaceRegexInFiles(<span style="color:#D69D85;">&quot;./artifacts/docker-compose.yml&quot;</span>, $ <span style="color:#D69D85;">&quot;{Settings.ContainerName}:\\d+\\.\\d+\\.\\d+\\.\\d+&quot;</span>, $ <span style="color:#D69D85;">&quot;{Settings.ContainerName}:{version}&quot;</span>);

    <span style="color:#57A64A;">// stop old docker container on server</span>
    StartProcess(<span style="color:#D69D85;">&quot;ssh&quot;</span>, $ <span style="color:#D69D85;">&quot;-p {Settings.SshPort} {Settings.SshAddress} cd {Settings.HomePath}/; docker-compose stop {Settings.ContainerName}&quot;</span>);
    <span style="color:#57A64A;">// delete old container</span>
    StartProcess(<span style="color:#D69D85;">&quot;ssh&quot;</span>, $ <span style="color:#D69D85;">&quot;-p {Settings.SshPort} {Settings.SshAddress} cd {Settings.HomePath}/; docker-compose rm -f {Settings.ContainerName}&quot;</span>);
    <span style="color:#57A64A;">// copy new docker-compose configuration to remote server</span>
    StartProcess(<span style="color:#D69D85;">&quot;scp&quot;</span>, $ <span style="color:#D69D85;">&quot;-P {Settings.SshPort} ./artifacts/docker-compose.yml {Settings.SshAddress}:{Settings.HomePath}/&quot;</span>);
    <span style="color:#57A64A;">// recreate docker container, it will create a new version</span>
    StartProcess(<span style="color:#D69D85;">&quot;ssh&quot;</span>, $ <span style="color:#D69D85;">&quot;-p {Settings.SshPort} {Settings.SshAddress} cd {Settings.HomePath}/; docker-compose create {Settings.ContainerName}&quot;</span>);
    <span style="color:#57A64A;">// start new docker container</span>
    StartProcess(<span style="color:#D69D85;">&quot;ssh&quot;</span>, $ <span style="color:#D69D85;">&quot;-p {Settings.SshPort} {Settings.SshAddress} cd {Settings.HomePath}/; docker-compose start {Settings.ContainerName}&quot;</span>);
});

Task(<span style="color:#D69D85;">&quot;CheckoutTag&quot;</span>)
    .Does(() =&gt;
{
    StartProcess(<span style="color:#D69D85;">&quot;git&quot;</span>, $ <span style="color:#D69D85;">&quot;checkout tags/v{version}&quot;</span>);
});

Task(<span style="color:#D69D85;">&quot;CheckoutBranch&quot;</span>)
    .Does(() =&gt;
{
    StartProcess(<span style="color:#D69D85;">&quot;git&quot;</span>, $ <span style="color:#D69D85;">&quot;checkout master&quot;</span>);
});

Task(<span style="color:#D69D85;">&quot;CheckAllCommitted&quot;</span>)
    .Does(() =&gt;
{
    IEnumerable&lt;<span style="color:#569CD6;">string</span>&gt; redirectedOutput;
    <span style="color:#569CD6;">var</span> exitCodeWithArgument = StartProcess(<span style="color:#D69D85;">&quot;git&quot;</span>, <span style="color:#569CD6;">new</span> ProcessSettings{
    Arguments = <span style="color:#D69D85;">&quot;status&quot;</span>,
    RedirectStandardOutput = <span style="color:#569CD6;">true</span>
    },
    <span style="color:#569CD6;">out</span> redirectedOutput
    );
    <span style="color:#569CD6;">if</span> (!redirectedOutput.LastOrDefault().Contains(<span style="color:#D69D85;">&quot;nothing to commit&quot;</span>))
    {
        <span style="color:#569CD6;">throw</span> <span style="color:#569CD6;">new</span> Exception(<span style="color:#D69D85;">&quot;Exists uncommitted changes&quot;</span>);
    }
});

RunTarget(target);
</pre></div>
<p>I am running service using docker compose like:</p>
<pre><code class="language-yaml">version: '2'
services:
    ContainerName:
        image: ContainerName:x.x.x.x
</code></pre>
<p>Thanks.</p>

"""""
),
            ["""2017-07-24-Personal-mobile-radio-application-using-Ionic"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Personal mobile radio application using Ionic
""""",
["""date"""] =
"""""
 2017-07-24
""""",
["""tags"""] =
"""""
 javascript
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<p>Hi, there!</p>
<p>Finally I am tired because of all advertisements which we have in any simple radio mobile application. I just want to listen radio and that is all! Quite simple, hah?</p>
<p>So I decided to create a simple radio mobile application by myself. I thought about Xamarin as I have some experience in creating application using it. But I decided to use new framework for me and it is Ionic. I am very impressed how cool it is and how easy to create application using it. It took about 2 hours to install all dependencies (ionic, android studio, java), deploy and run a first version of my application on my android device. Quite fast!</p>
<p>I am using Ubuntu 16.04.</p>
<p>Please find the steps below:</p>
<ol>
<li>I have installed ionic framework using this <a href="http://ionicframework.com/docs/intro/installation/">link</a> and create blank application: <code>ionic start radioOn blank</code>.</li>
<li>And that is all, to start our application need to run <code>ionic serve</code>.</li>
<li>As I want to listen an online radio, I need to create a provider to listen online stream: Html5Audio:</li>
</ol>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">import</span> { Injectable, Output, EventEmitter } from <span style="color:#D69D85;">&#39;@angular/core&#39;</span>;

@Injectable()
<span style="color:#569CD6;">export</span> <span style="color:#569CD6;">class</span> Html5Audio {
    @Output()
    ended = <span style="color:#569CD6;">new</span> EventEmitter();

    <span style="color:#569CD6;">private</span> pad2(<span style="color:#569CD6;">number</span>) { (<span style="color:#569CD6;">number</span> &lt; 10 ? <span style="color:#D69D85;">&#39;0&#39;</span> : <span style="color:#D69D85;">&#39;&#39;</span>) + <span style="color:#569CD6;">number</span>; }

    audioPlayer: <span style="color:#569CD6;">any</span>;
    time: <span style="color:#569CD6;">string</span>;
    @Output()
    isPlaying = <span style="color:#569CD6;">false</span>;
    readyStateInterval = <span style="color:#569CD6;">null</span>;
    url: <span style="color:#569CD6;">string</span>;

    <span style="color:#569CD6;">public</span> play(url: <span style="color:#569CD6;">string</span>) {
        <span style="color:#569CD6;">if</span> (<span style="color:#569CD6;">this</span>.audioPlayer) {
            <span style="color:#569CD6;">this</span>.stop();
        }
        <span style="color:#569CD6;">this</span>.url = url;
        <span style="color:#569CD6;">this</span>.audioPlayer = <span style="color:#569CD6;">new</span> Audio(<span style="color:#569CD6;">this</span>.url);
        <span style="color:#569CD6;">this</span>.isPlaying = <span style="color:#569CD6;">true</span>;
        <span style="color:#569CD6;">this</span>.audioPlayer.play();

        <span style="color:#569CD6;">this</span>.audioPlayer.addEventListener(<span style="color:#D69D85;">&quot;timeupdate&quot;</span>, () =&gt; {
            <span style="color:#569CD6;">if</span> (<span style="color:#569CD6;">this</span>.audioPlayer) {
                <span style="color:#569CD6;">var</span> s = <span style="color:#569CD6;">this</span>.audioPlayer.currentTime % 60;
                <span style="color:#569CD6;">var</span> m = (<span style="color:#569CD6;">this</span>.audioPlayer.currentTime / 60) % 60;
                <span style="color:#569CD6;">var</span> h = ((<span style="color:#569CD6;">this</span>.audioPlayer.currentTime / 60) / 60) % 60;
                <span style="color:#569CD6;">if</span> (<span style="color:#569CD6;">this</span>.isPlaying &amp;&amp; <span style="color:#569CD6;">this</span>.audioPlayer.currentTime &gt; 0) {
                    <span style="color:#569CD6;">this</span>.time = <span style="color:#569CD6;">this</span>.pad2(h) + <span style="color:#D69D85;">&#39;:&#39;</span> + <span style="color:#569CD6;">this</span>.pad2(m) + <span style="color:#D69D85;">&#39;:&#39;</span> + <span style="color:#569CD6;">this</span>.pad2(s);
                }
            }
        }, <span style="color:#569CD6;">false</span>);
        <span style="color:#569CD6;">this</span>.audioPlayer.addEventListener(<span style="color:#D69D85;">&quot;error&quot;</span>, (ex) =&gt; {
            console.error(ex);
        }, <span style="color:#569CD6;">false</span>);
        <span style="color:#569CD6;">this</span>.audioPlayer.addEventListener(<span style="color:#D69D85;">&quot;canplay&quot;</span>, () =&gt; {
            console.log(<span style="color:#D69D85;">&#39;CAN PLAY&#39;</span>);
        }, <span style="color:#569CD6;">false</span>);
        <span style="color:#569CD6;">this</span>.audioPlayer.addEventListener(<span style="color:#D69D85;">&quot;waiting&quot;</span>, () =&gt; {
            <span style="color:#569CD6;">this</span>.isPlaying = <span style="color:#569CD6;">false</span>;
        }, <span style="color:#569CD6;">false</span>);
        <span style="color:#569CD6;">this</span>.audioPlayer.addEventListener(<span style="color:#D69D85;">&quot;playing&quot;</span>, () =&gt; {
            <span style="color:#569CD6;">this</span>.isPlaying = <span style="color:#569CD6;">true</span>;
        }, <span style="color:#569CD6;">false</span>);
        <span style="color:#569CD6;">this</span>.audioPlayer.addEventListener(<span style="color:#D69D85;">&quot;ended&quot;</span>, () =&gt; {
            <span style="color:#569CD6;">this</span>.stop();
            <span style="color:#569CD6;">this</span>.ended.emit();
        }, <span style="color:#569CD6;">false</span>);
    }

    pause() {
        <span style="color:#569CD6;">this</span>.isPlaying = <span style="color:#569CD6;">false</span>;
        <span style="color:#569CD6;">this</span>.audioPlayer.pause();
    }

    stop() {
        <span style="color:#569CD6;">this</span>.isPlaying = <span style="color:#569CD6;">false</span>;
        <span style="color:#569CD6;">this</span>.audioPlayer.pause();
        <span style="color:#569CD6;">this</span>.audioPlayer = <span style="color:#569CD6;">null</span>;
    }
}
</pre></div>
<ol start="4">
<li><p>It has been imported to /src/app/app.module.</p>
</li>
<li><p>There is only one page with a list of stations (I have <a href="https://github.com/eapyl/radioon/blob/master/src/pages/home/home.ts">only 3</a> which I listen). Click on a station - starting this station, and there is one button to stop music(<a href="https://github.com/eapyl/radioon/blob/master/src/pages/home/home.html">link</a>). That is all. Simple!</p>
</li>
<li><p>After that we need to prepare icon and splash image for application. I am using <a href="http://game-icons.net">game-icons</a> to create an icon and <a href="https://unsplash.com/">unspalsh</a> to find full size images. Moreover, I have received a feedback about <a href="http://game-icons.net">game-icons</a> and I believe it can be useful:</p>
<blockquote>
<p>many of the icons from <code>game-icons</code> featured have restrictions on commercial use
Anyway, while checking elsewhere online, I found <a href="https://www.websiteplanet.com/blog/free-icons-for-commercial-use/">this list of websites</a> with icons that are free for commercial use. It was incredibly helpful.</p>
</blockquote>
</li>
<li><p>Need to put created icon.png and splash.png to /resources/icon.png and /resources/splash.png and run the next command <code>ionic cordova resources</code> (you have to have an account in Ionic portal and it is free).</p>
</li>
<li><p>To <a href="http://ionicframework.com/docs/intro/deploying/">deploy</a> our application need to run <code>ionic cordova build android --prod --release</code> and it will create *.apk file. We need to sign it using 'Sign Android APK' section from <a href="http://ionicframework.com/docs/intro/deploying/">here</a>.</p>
</li>
<li><p>That is all. We have signed apk which we can copy on our device and install.</p>
</li>
</ol>
<p>Please find my project <a href="https://github.com/eapyl/radioon">here</a>. Signed apk file <a href="https://mega.nz/#!edsTXT6L">here</a>.</p>
<p>How it looks like:
<img src="./images/radio-on-screenshot.png" alt="image" /></p>
<p>Cheers,</p>

"""""
),
            ["""2017-08-07-Restore-InfluxDB-in-Docker"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Restore InfluxDB in Docker
""""",
["""date"""] =
"""""
 2017-08-07
""""",
["""tags"""] =
"""""
 docker influxdb
""""",
["""categories"""] =
"""""
 administration
""""",
 },
"""""
<p>It is not easy to restore influxdb in an official container. Unfortunately it is not possible directly. You need to restore db out of a container and mount restored db to the container.</p>
<pre><code class="language-bat"># Restoring a backup requires that influxd is stopped (note that stopping the process kills the container).
docker stop &quot;$CONTAINER_ID&quot;

# Run the restore command in an ephemeral container.
# This affects the previously mounted volume mapped to /var/lib/influxdb.
docker run --rm \
--entrypoint /bin/bash \
-v &quot;$INFLUXDIR&quot;:/var/lib/influxdb \
-v &quot;$BACKUPDIR&quot;:/backups \
influxdb:1.3 \
-c &quot;influxd restore -metadir /var/lib/influxdb/meta -datadir /var/lib/influxdb/data -database foo /backups/foo.backup&quot;

# Start the container just like before, and get the new container ID.
CONTAINER_ID=$(docker run --rm \
--detach \
-v &quot;$INFLUXDIR&quot;:/var/lib/influxdb \
-v &quot;$BACKUPDIR&quot;:/backups \
-p 8086 \
influxdb:1.3
)
</code></pre>
<p>More info <a href="https://gist.github.com/mark-rushakoff/36b4491f97b8781198da36752ecd949b">here</a>.</p>
<p>Thanks.</p>

"""""
),
            ["""2017-09-12-Simplest-syslog-server"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Simplest syslog server for rfc5424 (TCP)
""""",
["""date"""] =
"""""
 2017-09-12
""""",
["""tags"""] =
"""""
 dotnet docker
""""",
["""categories"""] =
"""""
 deployment
""""",
 },
"""""
<p>I am working on onside project where we have more than 5 docker containers. Previously we used just serilog to do our logging in all our containers. So each project had his own logging mechanism. Finally we decided to centralize our logging system ans start using docker logs. There are a lot of solutions using clouds (e.g. <a href="https://www.loggly.com/">loggly</a>) or quite complex systems to grab, analyze and show your logs (like <a href="https://kafka.apache.org">kafka</a>, <a href="https://www.elastic.co/products/kibana">kibana</a>). But we wanted to save our logs to simple txt files without any additional complex stuff.</p>
<p>There are nice project which allows automatically read docker container logs and push them to one syslog server - <a href="https://github.com/gliderlabs/logspout">logspout</a>.</p>
<p>We tried to find simple syslog server without success. So there is a <a href="https://github.com/eapyl/syslog-collector">small syslog server</a> written in dotnet core. I used serilog to write logs to files (<a href="https://github.com/serilog/serilog-sinks-rollingfile">Rolling File</a>).</p>
<p>So docker-compose configuration looks like:</p>
<pre><code class="language-yaml">  #another containers
  logspout:
    image: gliderlabs/logspout
    command: syslog+tcp://logcollector:5000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - logcollector
  logcollector:
    image: eapyl/syslog-collector
    volumes:
      - $PWD/../logs:/log/logs
</code></pre>
<p>After that logs from all our containers are in logs folder! Very simple and easy!</p>
<p>Please find docker image <a href="https://hub.docker.com/r/eapyl/syslog-collector/">here</a>.</p>
<p>P.S. We started to write log message to stdout or stderr using <a href="https://github.com/serilog/serilog-sinks-literate">serilog</a>. So it was just small configuration change in all our projects to use Serilog.Literate instead of Serilog.RollingFile .</p>
<p>Thanks!</p>

"""""
),
            ["""2017-09-19-Auto-deployment-for-SSRS-reports"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Auto deployment for SSRS reports
""""",
["""date"""] =
"""""
 2017-09-19
""""",
["""tags"""] =
"""""
 ssrs reports
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<p>If you work with SSRS it is not so easy to create CI build for SSRS project. It looks like the best approach is to use shared datasources, shared datasets and embedded datasets in reports which use shared datasets. Shared datasets should use stored procedures to receive data so you will be able to cover your SQL logic by unit tests.</p>
<p>So you will have the next types of files in your project:</p>
<ol>
<li>*.rdl - reports</li>
<li>*.rsd - shared datasets</li>
<li>*.rds - shared datasources</li>
</ol>
<p>To deploy them to clean SSRS server we can use <a href="https://docs.microsoft.com/en-us/sql/reporting-services/tools/rs-exe-utility-ssrs">RS tool</a>. And that is a bat file to call it:</p>
<pre><code class="language-bat">REM SSRS server, you can provide also user and password to RS tool if you can't use Windows credentials (default behaviour)
set varServerPath=http://desktop-h33a7aa/reportserver
REM name of folder at SSRS server for reports
set varReportFolder=My_Reports
REM name of folder at SSRS server for datasets
Set varDatasetFolder=Datasets
REM name of folder at SSRS server for data sources
set varDataSourceFolder=Data Sources
REM path to a folder with reports, datasets and datasources
set varReportFilePath=.\Project\Reports\My_Reports

&quot;C:\Program Files\Microsoft SQL Server Reporting Services\Shared Tools\rs.exe&quot; -i Commonscript.rss -s %varServerPath% -v ReportFolder=&quot;%varReportFolder%&quot; -v DataSetFolder=&quot;%varDatasetFolder%&quot; -v DataSourceFolder=&quot;%varDataSourceFolder%&quot; -v filePath=&quot;%varReportFilePath%&quot; -e Mgmt2010
</code></pre>
<p>All logic is described in Commonscript.rss. It creates folders in SSRS server for reports, datasets and datasources (using CreateFolders method), later it reads all *.rds files in varReportFilePath and create datasources for each file if it doesn't exist. After it reads all *.rsd files in varReportFilePath, create datasets and connects a dataset with a datasource. In the end it read all *.rdl files in varReportFilePath, create reports and connects a report with a dataset.</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">Dim</span> definition <span style="color:#569CD6;">As</span> [<span style="color:#569CD6;">Byte</span>]() = <span style="color:#569CD6;">Nothing</span>
<span style="color:#569CD6;">Dim</span> bytedefinition <span style="color:#569CD6;">as</span> [<span style="color:#569CD6;">Byte</span>]() = <span style="color:#569CD6;">nothing</span>
<span style="color:#569CD6;">Dim</span> warnings <span style="color:#569CD6;">As</span> Warning() = <span style="color:#569CD6;">Nothing</span>

<span style="color:#57A64A;">&#39;Main Entry point of utility</span>
<span style="color:#569CD6;">Public</span> <span style="color:#569CD6;">Sub</span> Main()
    Console.WriteLine()
    Console.WriteLine(<span style="color:#D69D85;">&quot;Initiating Deployment&quot;</span>)
    rs.Credentials = System.Net.CredentialCache.DefaultCredentials
    <span style="color:#569CD6;">Try</span>
        <span style="color:#57A64A;">&#39;Create the shared data source</span>
        CreateFolders(DataSourceFolder,<span style="color:#D69D85;">&quot;/&quot;</span>,<span style="color:#D69D85;">&quot;Data Sources&quot;</span>,<span style="color:#D69D85;">&quot;Visible&quot;</span>)
        <span style="color:#57A64A;">&#39;Create the folder that will contain the shared data sets</span>
        CreateFolders(DataSetFolder, <span style="color:#D69D85;">&quot;/&quot;</span>, <span style="color:#D69D85;">&quot;Data Set Folder&quot;</span>, <span style="color:#D69D85;">&quot;Visible&quot;</span>)
        <span style="color:#57A64A;">&#39;Create the folder that will contain the deployed reports</span>
        CreateFolders(ReportFolder, <span style="color:#D69D85;">&quot;/&quot;</span>, <span style="color:#D69D85;">&quot;Report Folder&quot;</span>,<span style="color:#D69D85;">&quot;Visible&quot;</span>)
    <span style="color:#569CD6;">Catch</span> goof <span style="color:#569CD6;">As</span> Exception
        Console.WriteLine(goof.Message)
    <span style="color:#569CD6;">End</span> <span style="color:#569CD6;">Try</span>
    ReadFiles(filepath, <span style="color:#D69D85;">&quot;*.rds&quot;</span>)
    ReadFiles(filepath, <span style="color:#D69D85;">&quot;*.rsd&quot;</span>)
    ReadFiles(filepath, <span style="color:#D69D85;">&quot;*.rdl&quot;</span>)
<span style="color:#569CD6;">End</span> <span style="color:#569CD6;">Sub</span>

<span style="color:#57A64A;">&#39;Utility for creation of folders</span>
<span style="color:#569CD6;">Public</span> <span style="color:#569CD6;">Sub</span> CreateFolders(<span style="color:#569CD6;">ByVal</span> folderName <span style="color:#569CD6;">as</span> <span style="color:#569CD6;">string</span>, <span style="color:#569CD6;">ByVal</span> parentPath <span style="color:#569CD6;">as</span> <span style="color:#569CD6;">string</span>, <span style="color:#569CD6;">ByVal</span> description <span style="color:#569CD6;">as</span> <span style="color:#569CD6;">String</span>, <span style="color:#569CD6;">ByVal</span> visible <span style="color:#569CD6;">as</span> <span style="color:#569CD6;">string</span>)
    Console.WriteLine()
    Console.WriteLine(<span style="color:#D69D85;">&quot;Checking for Target Folders&quot;</span>)
    <span style="color:#57A64A;">&#39;CatalogItem properties</span>
    <span style="color:#569CD6;">Dim</span> descriptionProp <span style="color:#569CD6;">as</span> <span style="color:#569CD6;">new</span> [<span style="color:#569CD6;">Property</span>]
    descriptionProp.Name = <span style="color:#D69D85;">&quot;Description&quot;</span>
    descriptionProp.Value= description
    <span style="color:#569CD6;">Dim</span> visibleProp <span style="color:#569CD6;">as</span> <span style="color:#569CD6;">new</span> [<span style="color:#569CD6;">Property</span>]
    visibleProp.Name = <span style="color:#D69D85;">&quot;Visible&quot;</span>
    visibleProp.value= visible
    <span style="color:#569CD6;">Dim</span> props(1) <span style="color:#569CD6;">as</span> [<span style="color:#569CD6;">Property</span>]
    props(0) = descriptionProp
    props(1) = visibleProp
    <span style="color:#569CD6;">Try</span>
        rs.CreateFolder(folderName,parentPath,props)
        Console.WriteLine(<span style="color:#D69D85;">&quot;Folder {0} successfully created&quot;</span>, foldername)
    <span style="color:#569CD6;">Catch</span> goof <span style="color:#569CD6;">as</span> SoapException
        <span style="color:#569CD6;">If</span> goof.Message.Indexof(<span style="color:#D69D85;">&quot;AlreadyExists&quot;</span>)&gt;0 <span style="color:#569CD6;">Then</span>
            Console.WriteLine(<span style="color:#D69D85;">&quot;Folder {0} already exists&quot;</span>,foldername)
        <span style="color:#569CD6;">End</span> <span style="color:#569CD6;">If</span>
    <span style="color:#569CD6;">End</span> <span style="color:#569CD6;">Try</span>
<span style="color:#569CD6;">End</span> <span style="color:#569CD6;">Sub</span>

<span style="color:#57A64A;">&#39;Utility for reading files from the Report Sevices Project</span>
<span style="color:#569CD6;">Public</span> <span style="color:#569CD6;">sub</span> ReadFiles(filepath <span style="color:#569CD6;">as</span> <span style="color:#569CD6;">string</span>, fileextension <span style="color:#569CD6;">as</span> <span style="color:#569CD6;">string</span>)
    Console.WriteLine()
    Console.WriteLine(<span style="color:#D69D85;">&quot;Reading Files from Report Services Project&quot;</span>)
    <span style="color:#569CD6;">Dim</span> rptdirinfo <span style="color:#569CD6;">As</span> System.IO.DirectoryInfo
    rptdirinfo = <span style="color:#569CD6;">New</span> System.IO.DirectoryInfo(filepath)
    <span style="color:#569CD6;">Dim</span> filedoc <span style="color:#569CD6;">As</span> FileInfo()
    filedoc = rptdirinfo.GetFiles(fileextension)
    <span style="color:#569CD6;">Try</span>
        <span style="color:#569CD6;">For</span> rptcount <span style="color:#569CD6;">As</span> <span style="color:#569CD6;">Integer</span> = 0 <span style="color:#569CD6;">To</span> filedoc.Length-1
            <span style="color:#569CD6;">If</span> <span style="color:#569CD6;">Not</span> filedoc(rptcount).Name.ToString.Trim.ToUpper.Contains(<span style="color:#D69D85;">&quot;BACKUP&quot;</span>) <span style="color:#569CD6;">Then</span>
                <span style="color:#569CD6;">SELECT</span> <span style="color:#569CD6;">Case</span> fileextension
                <span style="color:#569CD6;">Case</span> <span style="color:#D69D85;">&quot;*.rds&quot;</span>
                    CreateDataSource(filedoc(rptcount).tostring.trim)
                <span style="color:#569CD6;">Case</span> <span style="color:#D69D85;">&quot;*.rsd&quot;</span>
                    CreateDataSet(filedoc(rptcount).tostring.trim)
                <span style="color:#569CD6;">Case</span> <span style="color:#D69D85;">&quot;*.rdl&quot;</span>
                    PublishReport(filedoc(rptcount).tostring.trim)
                <span style="color:#569CD6;">End</span> <span style="color:#569CD6;">Select</span>
            <span style="color:#569CD6;">End</span> <span style="color:#569CD6;">If</span>
        <span style="color:#569CD6;">Next</span>
    <span style="color:#569CD6;">Catch</span> goof <span style="color:#569CD6;">as</span> Exception
        Console.WriteLine(<span style="color:#D69D85;">&quot;In ReadFiles &quot;</span> + goof.message)
    <span style="color:#569CD6;">End</span> <span style="color:#569CD6;">Try</span>
<span style="color:#569CD6;">End</span> <span style="color:#569CD6;">Sub</span>

<span style="color:#57A64A;">&#39;Utility for Creating Shared Data Sets contained in the project</span>
<span style="color:#569CD6;">Public</span> <span style="color:#569CD6;">Sub</span> CreateDataSet(<span style="color:#569CD6;">ByVal</span> filename <span style="color:#569CD6;">as</span> <span style="color:#569CD6;">string</span>)
    <span style="color:#569CD6;">Dim</span> valstart <span style="color:#569CD6;">as</span> <span style="color:#569CD6;">integer</span>
    <span style="color:#569CD6;">Dim</span> valend <span style="color:#569CD6;">as</span> <span style="color:#569CD6;">integer</span>
    <span style="color:#569CD6;">Dim</span> DSDefinitionStr <span style="color:#569CD6;">as</span> <span style="color:#569CD6;">string</span>
    <span style="color:#569CD6;">Dim</span> DataSourceName <span style="color:#569CD6;">as</span> <span style="color:#569CD6;">string</span>
    <span style="color:#569CD6;">Dim</span> QueryString <span style="color:#569CD6;">as</span> <span style="color:#569CD6;">string</span>
    <span style="color:#569CD6;">Try</span>
        <span style="color:#569CD6;">Dim</span> stream <span style="color:#569CD6;">As</span> FileStream = File.OpenRead(filePath + <span style="color:#D69D85;">&quot;\&quot;</span> + filename )
        definition = <span style="color:#569CD6;">New</span> [<span style="color:#569CD6;">Byte</span>](stream.Length-1) {}
        stream.Read(definition, 0, <span style="color:#569CD6;">CInt</span>(stream.Length))
        stream.Close()
        <span style="color:#569CD6;">For</span> i <span style="color:#569CD6;">As</span> <span style="color:#569CD6;">Integer</span> = 0 <span style="color:#569CD6;">To</span> definition.Length - 1
            DSDefinitionStr = DSDefinitionStr + Convert.ToString(Convert.ToChar(Convert.ToInt16(definition(i).ToString)))
        <span style="color:#569CD6;">Next</span>
        valstart=DSDefinitionStr.ToString.Indexof(<span style="color:#D69D85;">&quot;&lt;DataSourceReference&gt;&quot;</span>)
        <span style="color:#569CD6;">If</span> valstart &gt; 0 <span style="color:#569CD6;">Then</span>
            valstart = DSDefinitionStr.ToString.IndexOf(<span style="color:#D69D85;">&quot;&lt;DataSourceReference&gt;&quot;</span>) + 21
            valend = DSDefinitionStr.ToString.IndexOf(<span style="color:#D69D85;">&quot;&lt;/DataSourceReference&gt;&quot;</span>)
            DataSourceName=DSDefinitionStr.ToString.Substring(valstart, valend - valstart)
            Console.WriteLine(DataSourceName)
        <span style="color:#569CD6;">End</span> <span style="color:#569CD6;">If</span>
    <span style="color:#569CD6;">Catch</span> e <span style="color:#569CD6;">As</span> IOException
        Console.WriteLine(e.Message)
    <span style="color:#569CD6;">End</span> <span style="color:#569CD6;">Try</span>
    filename=filename.tostring.replace(<span style="color:#D69D85;">&quot;.rsd&quot;</span>,<span style="color:#D69D85;">&quot;&quot;</span>)
    Console.WriteLine(<span style="color:#D69D85;">&quot;Attempting to Deploy DataSet {0}&quot;</span>, filename)
    <span style="color:#569CD6;">Try</span>
        <span style="color:#569CD6;">Dim</span> item <span style="color:#569CD6;">as</span> CatalogItem
        item=rs.CreateCatalogItem(<span style="color:#D69D85;">&quot;DataSet&quot;</span>,filename, <span style="color:#D69D85;">&quot;/&quot;</span> + DataSetFolder, <span style="color:#569CD6;">false</span>, definition, <span style="color:#569CD6;">nothing</span>, warnings)
        <span style="color:#569CD6;">If</span> <span style="color:#569CD6;">Not</span> (warnings <span style="color:#569CD6;">Is</span> <span style="color:#569CD6;">Nothing</span>) <span style="color:#569CD6;">Then</span>
            <span style="color:#569CD6;">Dim</span> warning <span style="color:#569CD6;">As</span> Warning
            <span style="color:#569CD6;">For</span> <span style="color:#569CD6;">Each</span> warning <span style="color:#569CD6;">In</span> warnings
                <span style="color:#569CD6;">if</span> warning.message.tostring.tolower.contains(<span style="color:#D69D85;">&quot;refers to the shared data source&quot;</span>) <span style="color:#569CD6;">then</span>
                    Console.WriteLine(<span style="color:#D69D85;">&quot;Connecting DataSet {0} to Data Source {1}&quot;</span>,filename, DataSourceName)
                    <span style="color:#569CD6;">Dim</span> referenceData() <span style="color:#569CD6;">as</span> ItemReferenceData = rs.GetItemReferences(<span style="color:#D69D85;">&quot;/&quot;</span> + DataSetFolder + <span style="color:#D69D85;">&quot;/&quot;</span> + filename,<span style="color:#D69D85;">&quot;DataSet&quot;</span>)
                    <span style="color:#569CD6;">Dim</span> references(0) <span style="color:#569CD6;">as</span> ItemReference
                    <span style="color:#569CD6;">Dim</span> reference <span style="color:#569CD6;">as</span> <span style="color:#569CD6;">New</span> ItemReference()
                    <span style="color:#569CD6;">Dim</span> datasourceURL = <span style="color:#D69D85;">&quot;/&quot;</span> + DataSourceFolder + <span style="color:#D69D85;">&quot;/&quot;</span> + DataSourceName
                    reference.name=referenceData(0).Name
                    Console.WriteLine(<span style="color:#D69D85;">&quot;Reference name = &quot;</span> + reference.name)
                    reference.Reference=datasourceURL
                    references(0)=reference
                    rs.SetItemReferences(<span style="color:#D69D85;">&quot;/&quot;</span> + DataSetFolder + <span style="color:#D69D85;">&quot;/&quot;</span> + filename, references)
                <span style="color:#569CD6;">else</span>
                    Console.WriteLine(warning.Message)
                <span style="color:#569CD6;">end</span> <span style="color:#569CD6;">if</span>
            <span style="color:#569CD6;">Next</span> warning
        <span style="color:#569CD6;">Else</span>
            Console.WriteLine(<span style="color:#D69D85;">&quot;DataSet: {0} published successfully with no warnings&quot;</span>, filename)
        <span style="color:#569CD6;">End</span> <span style="color:#569CD6;">If</span>
    <span style="color:#569CD6;">Catch</span> goof <span style="color:#569CD6;">as</span> SoapException
        <span style="color:#569CD6;">If</span> goof.Message.Indexof(<span style="color:#D69D85;">&quot;AlreadyExists&quot;</span>)&gt;0 <span style="color:#569CD6;">Then</span>
            Console.WriteLine(<span style="color:#D69D85;">&quot;The DataSet {0} already exists&quot;</span>,fileName.ToString)
        <span style="color:#569CD6;">Else</span>
            <span style="color:#569CD6;">If</span> goof.Message.IndexOf(<span style="color:#D69D85;">&quot;published&quot;</span>)=-1 <span style="color:#569CD6;">Then</span>
                Console.Writeline(goof.Message)
            <span style="color:#569CD6;">End</span> <span style="color:#569CD6;">If</span>
        <span style="color:#569CD6;">End</span> <span style="color:#569CD6;">If</span>
    <span style="color:#569CD6;">End</span> <span style="color:#569CD6;">Try</span>
<span style="color:#569CD6;">End</span> <span style="color:#569CD6;">Sub</span>

<span style="color:#57A64A;">&#39;Utility for creating Data Sources on the Server</span>
<span style="color:#569CD6;">Public</span> <span style="color:#569CD6;">Sub</span> CreateDataSource(filename <span style="color:#569CD6;">as</span> <span style="color:#569CD6;">string</span>)
    <span style="color:#57A64A;">&#39;Define the data source definition.</span>
    <span style="color:#569CD6;">Dim</span> dsDefinition <span style="color:#569CD6;">As</span> <span style="color:#569CD6;">New</span> DataSourceDefinition()
    <span style="color:#569CD6;">Dim</span> DataSourceName <span style="color:#569CD6;">as</span> <span style="color:#569CD6;">string</span>
    <span style="color:#569CD6;">Dim</span> valstart <span style="color:#569CD6;">As</span> <span style="color:#569CD6;">Integer</span>
    <span style="color:#569CD6;">Dim</span> valend <span style="color:#569CD6;">As</span> <span style="color:#569CD6;">Integer</span>
    <span style="color:#569CD6;">Dim</span> ConnectionString <span style="color:#569CD6;">As</span> <span style="color:#569CD6;">String</span>
    <span style="color:#569CD6;">Dim</span> Extension <span style="color:#569CD6;">As</span> <span style="color:#569CD6;">String</span>
    <span style="color:#569CD6;">Dim</span> IntegratedSec <span style="color:#569CD6;">As</span> <span style="color:#569CD6;">String</span>
    <span style="color:#569CD6;">Dim</span> DataSourceID <span style="color:#569CD6;">As</span> <span style="color:#569CD6;">String</span>
    <span style="color:#569CD6;">Dim</span> PromptStr <span style="color:#569CD6;">As</span> <span style="color:#569CD6;">String</span>
    PromptStr=<span style="color:#D69D85;">&quot;&quot;</span>
    <span style="color:#569CD6;">Dim</span> DSDefinitionStr <span style="color:#569CD6;">As</span> <span style="color:#569CD6;">String</span>
    DSDefinitionStr = <span style="color:#D69D85;">&quot;&quot;</span>
    DataSourceName=filename.tostring.trim.substring(0,filename.tostring.trim.length-4)
    Console.WriteLine(<span style="color:#D69D85;">&quot;Attempting to Deploy Data Source {0}&quot;</span>, DataSourceName)
    <span style="color:#569CD6;">Try</span>
        <span style="color:#569CD6;">Dim</span> stream <span style="color:#569CD6;">As</span> FileStream = File.OpenRead(filepath + <span style="color:#D69D85;">&quot;\&quot;</span> + filename)
        bytedefinition = <span style="color:#569CD6;">New</span> [<span style="color:#569CD6;">Byte</span>](stream.Length-1) {}
        stream.Read(bytedefinition, 0, <span style="color:#569CD6;">CInt</span>(stream.Length))
        stream.Close()
        <span style="color:#569CD6;">For</span> i <span style="color:#569CD6;">As</span> <span style="color:#569CD6;">Integer</span> = 0 <span style="color:#569CD6;">To</span> bytedefinition.Length - 1
            DSDefinitionStr = DSDefinitionStr + Convert.ToString(Convert.ToChar(Convert.ToInt16(bytedefinition(i).ToString)))
        <span style="color:#569CD6;">Next</span>
    <span style="color:#569CD6;">Catch</span> goof <span style="color:#569CD6;">As</span> IOException
        Console.WriteLine(goof.Message)
    <span style="color:#569CD6;">End</span> <span style="color:#569CD6;">Try</span>
    <span style="color:#569CD6;">If</span> DSDefinitionStr.ToString.Contains(<span style="color:#D69D85;">&quot;&lt;ConnectString&gt;&quot;</span>) <span style="color:#569CD6;">And</span> DSDefinitionStr.ToString.Contains(<span style="color:#D69D85;">&quot;&lt;/ConnectString&gt;&quot;</span>) <span style="color:#569CD6;">Then</span>
        valstart = DSDefinitionStr.ToString.IndexOf(<span style="color:#D69D85;">&quot;&lt;ConnectString&gt;&quot;</span>) + 15
        valend = DSDefinitionStr.ToString.IndexOf(<span style="color:#D69D85;">&quot;&lt;/ConnectString&gt;&quot;</span>)
        ConnectionString = DSDefinitionStr.ToString.Substring(valstart, valend - valstart)
    <span style="color:#569CD6;">End</span> <span style="color:#569CD6;">If</span>
    <span style="color:#569CD6;">If</span> DSDefinitionStr.ToString.Contains(<span style="color:#D69D85;">&quot;&lt;Extension&gt;&quot;</span>) <span style="color:#569CD6;">And</span> DSDefinitionStr.ToString.Contains(<span style="color:#D69D85;">&quot;&lt;/Extension&gt;&quot;</span>) <span style="color:#569CD6;">Then</span>
        valstart = DSDefinitionStr.ToString.IndexOf(<span style="color:#D69D85;">&quot;&lt;Extension&gt;&quot;</span>) + 11
        valend = DSDefinitionStr.ToString.IndexOf(<span style="color:#D69D85;">&quot;&lt;/Extension&gt;&quot;</span>)
        Extension = DSDefinitionStr.ToString.Substring(valstart, valend - valstart)
    <span style="color:#569CD6;">End</span> <span style="color:#569CD6;">If</span>
    <span style="color:#569CD6;">If</span> DSDefinitionStr.ToString.Contains(<span style="color:#D69D85;">&quot;&lt;IntegratedSecurity&gt;&quot;</span>) <span style="color:#569CD6;">And</span> DSDefinitionStr.ToString.Contains(<span style="color:#D69D85;">&quot;&lt;/IntegratedSecurity&gt;&quot;</span>) <span style="color:#569CD6;">Then</span>
        valstart = DSDefinitionStr.ToString.IndexOf(<span style="color:#D69D85;">&quot;&lt;IntegratedSecurity&gt;&quot;</span>) + 20
        valend = DSDefinitionStr.ToString.IndexOf(<span style="color:#D69D85;">&quot;&lt;/IntegratedSecurity&gt;&quot;</span>)
        IntegratedSec = DSDefinitionStr.ToString.Substring(valstart, valend - valstart)
    <span style="color:#569CD6;">End</span> <span style="color:#569CD6;">If</span>
    <span style="color:#569CD6;">If</span> DSDefinitionStr.ToString.Contains(<span style="color:#D69D85;">&quot;&lt;DataSourceID&gt;&quot;</span>) <span style="color:#569CD6;">And</span> DSDefinitionStr.ToString.Contains(<span style="color:#D69D85;">&quot;&lt;/DataSourceID&gt;&quot;</span>) <span style="color:#569CD6;">Then</span>
        valstart = DSDefinitionStr.ToString.IndexOf(<span style="color:#D69D85;">&quot;&lt;DataSourceID&gt;&quot;</span>) + 14
        valend = DSDefinitionStr.ToString.IndexOf(<span style="color:#D69D85;">&quot;&lt;/DataSourceID&gt;&quot;</span>)
        DataSourceID = DSDefinitionStr.ToString.Substring(valstart, valend - valstart)
    <span style="color:#569CD6;">End</span> <span style="color:#569CD6;">If</span>
    <span style="color:#569CD6;">If</span> DSDefinitionStr.ToString.Contains(<span style="color:#D69D85;">&quot;&lt;Prompt&gt;&quot;</span>) <span style="color:#569CD6;">And</span> DSDefinitionStr.ToString.Contains(<span style="color:#D69D85;">&quot;&lt;/Prompt&gt;&quot;</span>) <span style="color:#569CD6;">Then</span>
        valstart = DSDefinitionStr.ToString.IndexOf(<span style="color:#D69D85;">&quot;&lt;Prompt&gt;&quot;</span>) + 8
        valend = DSDefinitionStr.ToString.IndexOf(<span style="color:#D69D85;">&quot;&lt;/Prompt&gt;&quot;</span>)
        PromptStr = DSDefinitionStr.ToString.Substring(valstart, valend - valstart)
    <span style="color:#569CD6;">End</span> <span style="color:#569CD6;">If</span>
    dsdefinition.CredentialRetrieval = CredentialRetrievalEnum.Integrated
    dsdefinition.ConnectString = ConnectionString
    dsdefinition.Enabled = <span style="color:#569CD6;">True</span>
    dsdefinition.EnabledSpecified = <span style="color:#569CD6;">True</span>
    dsdefinition.Extension = extension
    dsdefinition.ImpersonateUser = <span style="color:#569CD6;">False</span>
    dsdefinition.ImpersonateUserSpecified = <span style="color:#569CD6;">True</span>
    <span style="color:#57A64A;">&#39;Use the default prompt string.</span>
    <span style="color:#569CD6;">If</span> PromptStr.ToString.Length=0 <span style="color:#569CD6;">Then</span>
        dsdefinition.Prompt = <span style="color:#569CD6;">Nothing</span>
    <span style="color:#569CD6;">Else</span>
        dsdefinition.Prompt = PromptStr
    <span style="color:#569CD6;">End</span> <span style="color:#569CD6;">if</span>
    dsdefinition.WindowsCredentials = <span style="color:#569CD6;">False</span>
    <span style="color:#569CD6;">Try</span>
        rs.CreateDataSource(DataSourceName, <span style="color:#D69D85;">&quot;/&quot;</span> + DataSourceFolder, <span style="color:#569CD6;">False</span>, dsdefinition, <span style="color:#569CD6;">Nothing</span>)
        Console.WriteLine(<span style="color:#D69D85;">&quot;Data source {0} created successfully&quot;</span>, DataSourceName.ToString)
    <span style="color:#569CD6;">Catch</span> goof <span style="color:#569CD6;">as</span> SoapException
        <span style="color:#569CD6;">If</span> goof.Message.Indexof(<span style="color:#D69D85;">&quot;AlreadyExists&quot;</span>)&gt;0 <span style="color:#569CD6;">Then</span>
            Console.WriteLine(<span style="color:#D69D85;">&quot;The Data Source name {0} already exists&quot;</span>,DataSourceName.ToString)
        <span style="color:#569CD6;">End</span> <span style="color:#569CD6;">If</span>
    <span style="color:#569CD6;">End</span> <span style="color:#569CD6;">Try</span>
<span style="color:#569CD6;">End</span> <span style="color:#569CD6;">Sub</span>

<span style="color:#57A64A;">&#39;Utility to Publish the Reports</span>
<span style="color:#569CD6;">Public</span> <span style="color:#569CD6;">Sub</span> PublishReport(<span style="color:#569CD6;">ByVal</span> reportName <span style="color:#569CD6;">As</span> <span style="color:#569CD6;">String</span>)
    Console.WriteLine(<span style="color:#D69D85;">&quot;Publishing &quot;</span> + reportName)
    <span style="color:#569CD6;">Dim</span> DSDefinitionStr <span style="color:#569CD6;">As</span> <span style="color:#569CD6;">String</span>
    DSDefinitionStr = <span style="color:#D69D85;">&quot;&quot;</span>
    <span style="color:#569CD6;">Try</span>
        <span style="color:#569CD6;">Dim</span> stream <span style="color:#569CD6;">As</span> FileStream = File.OpenRead(filePath + <span style="color:#D69D85;">&quot;\&quot;</span> + reportName )
        definition = <span style="color:#569CD6;">New</span> [<span style="color:#569CD6;">Byte</span>](stream.Length-1) {}
        stream.Read(definition, 0, <span style="color:#569CD6;">CInt</span>(stream.Length))
        stream.Close()
        <span style="color:#569CD6;">For</span> i <span style="color:#569CD6;">As</span> <span style="color:#569CD6;">Integer</span> = 0 <span style="color:#569CD6;">To</span> definition.Length - 1
            DSDefinitionStr = DSDefinitionStr + Convert.ToString(Convert.ToChar(Convert.ToInt16(definition(i).ToString)))
        <span style="color:#569CD6;">Next</span>
    <span style="color:#569CD6;">Catch</span> e <span style="color:#569CD6;">As</span> IOException
        Console.WriteLine(e.Message)
    <span style="color:#569CD6;">End</span> <span style="color:#569CD6;">Try</span>
    reportname=reportname.tostring.replace(<span style="color:#D69D85;">&quot;.rdl&quot;</span>,<span style="color:#D69D85;">&quot;&quot;</span>)
    Console.WriteLine(<span style="color:#D69D85;">&quot;Attempting to Deploy Report Name {0}&quot;</span>, reportname.tostring)
    <span style="color:#569CD6;">Try</span>
        <span style="color:#569CD6;">Dim</span> item <span style="color:#569CD6;">as</span> CatalogItem
        item=rs.CreateCatalogItem(<span style="color:#D69D85;">&quot;Report&quot;</span>,reportname, <span style="color:#D69D85;">&quot;/&quot;</span> + ReportFolder, <span style="color:#569CD6;">false</span>, definition,<span style="color:#569CD6;">nothing</span>, warnings)
        <span style="color:#57A64A;">&#39;warnings = rs.CreateCatalogItem(reportName, &quot;/&quot; + ReportFolder, False, definition, Nothing)</span>
        <span style="color:#569CD6;">If</span> <span style="color:#569CD6;">Not</span> (warnings <span style="color:#569CD6;">Is</span> <span style="color:#569CD6;">Nothing</span>) <span style="color:#569CD6;">Then</span>
            <span style="color:#569CD6;">If</span> item.Name &lt;&gt; <span style="color:#D69D85;">&quot;&quot;</span> <span style="color:#569CD6;">then</span>
                Console.WriteLine(<span style="color:#D69D85;">&quot;Report: {0} published successfully with warnings&quot;</span>, reportName)
                UpdateDataSources_report(reportName)
                UpdateDataSet_report(reportName, DSDefinitionStr)
            <span style="color:#569CD6;">else</span>
                <span style="color:#569CD6;">Dim</span> warning <span style="color:#569CD6;">As</span> Warning
                <span style="color:#569CD6;">For</span> <span style="color:#569CD6;">Each</span> warning <span style="color:#569CD6;">In</span> warnings
                    Console.WriteLine(warning.Message)
                <span style="color:#569CD6;">Next</span> warning
            <span style="color:#569CD6;">End</span> <span style="color:#569CD6;">If</span>
        <span style="color:#569CD6;">Else</span>
            Console.WriteLine(<span style="color:#D69D85;">&quot;Report: {0} published successfully with no warnings&quot;</span>, reportName)
            UpdateDataSources_report(reportName)
            UpdateDataSet_report(reportName, DSDefinitionStr)
        <span style="color:#569CD6;">End</span> <span style="color:#569CD6;">If</span>
    <span style="color:#569CD6;">Catch</span> goof <span style="color:#569CD6;">as</span> SoapException
        <span style="color:#569CD6;">If</span> goof.Message.Indexof(<span style="color:#D69D85;">&quot;AlreadyExists&quot;</span>)&gt;0 <span style="color:#569CD6;">Then</span>
            Console.WriteLine(<span style="color:#D69D85;">&quot;The Report Name {0} already exists&quot;</span>,reportName.ToString)
        <span style="color:#569CD6;">Else</span>
            <span style="color:#569CD6;">If</span> goof.Message.IndexOf(<span style="color:#D69D85;">&quot;published&quot;</span>)=-1 <span style="color:#569CD6;">Then</span>
            Console.WriteLine(goof.Message)
            <span style="color:#569CD6;">End</span> <span style="color:#569CD6;">If</span>
        <span style="color:#569CD6;">End</span> <span style="color:#569CD6;">If</span>
    <span style="color:#569CD6;">End</span> <span style="color:#569CD6;">Try</span>
<span style="color:#569CD6;">End</span> <span style="color:#569CD6;">Sub</span>

<span style="color:#57A64A;">&#39;Utility to Update The Data Sources on the Server</span>
<span style="color:#569CD6;">Public</span> <span style="color:#569CD6;">Sub</span> UpdateDataSources_report(ReportName <span style="color:#569CD6;">as</span> <span style="color:#569CD6;">string</span>)
    rs.Credentials = System.Net.CredentialCache.DefaultCredentials
    <span style="color:#569CD6;">Dim</span> item <span style="color:#569CD6;">as</span> CatalogItem
    <span style="color:#569CD6;">Dim</span> items <span style="color:#569CD6;">as</span> CatalogItem()
    <span style="color:#569CD6;">Try</span>
        <span style="color:#569CD6;">Dim</span> dataSources() <span style="color:#569CD6;">as</span> DataSource = rs.GetItemDataSources( <span style="color:#D69D85;">&quot;/&quot;</span> +  ReportFolder + <span style="color:#D69D85;">&quot;/&quot;</span> + ReportName)
        <span style="color:#569CD6;">For</span> <span style="color:#569CD6;">Each</span> ds <span style="color:#569CD6;">as</span> DataSource <span style="color:#569CD6;">in</span> dataSources
            <span style="color:#569CD6;">Dim</span> sharedDs(0) <span style="color:#569CD6;">as</span> DataSource
            sharedDs(0)=GetDataSource(DataSourceFolder, ds.Name)
            rs.SetItemDataSources(<span style="color:#D69D85;">&quot;/&quot;</span> +  ReportFolder + <span style="color:#D69D85;">&quot;/&quot;</span> + ReportName, sharedDs)
            Console.WriteLine(<span style="color:#D69D85;">&quot;Set &quot;</span> &amp; ds.Name &amp; <span style="color:#D69D85;">&quot; datasource for &quot;</span> &amp; <span style="color:#D69D85;">&quot;/&quot;</span> +  ReportFolder + <span style="color:#D69D85;">&quot;/&quot;</span> + ReportName &amp; <span style="color:#D69D85;">&quot; report&quot;</span>)
        <span style="color:#569CD6;">Next</span>
        Console.WriteLine(<span style="color:#D69D85;">&quot;All the shared data source reference set for report {0} &quot;</span>, <span style="color:#D69D85;">&quot;/&quot;</span> + ReportFolder + <span style="color:#D69D85;">&quot;/&quot;</span> + ReportName)
    <span style="color:#569CD6;">Catch</span> goof <span style="color:#569CD6;">As</span> SoapException
    Console.WriteLine(goof.Detail.InnerXml.ToString())
    <span style="color:#569CD6;">End</span> <span style="color:#569CD6;">Try</span>
<span style="color:#569CD6;">End</span> <span style="color:#569CD6;">Sub</span>

<span style="color:#57A64A;">&#39;Utility to link The Dataset with the Report</span>
<span style="color:#569CD6;">Public</span> <span style="color:#569CD6;">Sub</span> UpdateDataSet_report(ReportName <span style="color:#569CD6;">as</span> <span style="color:#569CD6;">string</span>, DSDefinitionStr <span style="color:#569CD6;">as</span> <span style="color:#569CD6;">string</span>)
    <span style="color:#569CD6;">Dim</span> valstart <span style="color:#569CD6;">As</span> <span style="color:#569CD6;">Integer</span>
    <span style="color:#569CD6;">Dim</span> valend <span style="color:#569CD6;">As</span> <span style="color:#569CD6;">Integer</span>
    <span style="color:#569CD6;">Dim</span> sharedDataSetReference <span style="color:#569CD6;">As</span> <span style="color:#569CD6;">string</span>
    rs.Credentials = System.Net.CredentialCache.DefaultCredentials
    <span style="color:#569CD6;">Try</span>
        <span style="color:#569CD6;">Dim</span> dataSets <span style="color:#569CD6;">As</span> ItemReferenceData() = rs.GetItemReferences(<span style="color:#D69D85;">&quot;/&quot;</span> +  ReportFolder + <span style="color:#D69D85;">&quot;/&quot;</span> + ReportName, <span style="color:#D69D85;">&quot;DataSet&quot;</span>)
        <span style="color:#569CD6;">If</span> dataSets <span style="color:#569CD6;">IsNot</span> <span style="color:#569CD6;">Nothing</span> <span style="color:#569CD6;">AndAlso</span> dataSets.Length &gt; 0 <span style="color:#569CD6;">AndAlso</span> <span style="color:#569CD6;">Not</span> <span style="color:#569CD6;">String</span>.IsNullOrEmpty(dataSets(0).Name) <span style="color:#569CD6;">Then</span>
            <span style="color:#569CD6;">For</span> i <span style="color:#569CD6;">as</span> <span style="color:#569CD6;">integer</span> = 0 <span style="color:#569CD6;">to</span> dataSets.Length -1
                <span style="color:#569CD6;">If</span> DSDefinitionStr.ToString.Contains(<span style="color:#D69D85;">&quot;&lt;DataSet Name=&quot;&quot;&quot;</span>&amp; dataSets(i).Name &amp;<span style="color:#D69D85;">&quot;&quot;&quot;&gt;&quot;</span>) <span style="color:#569CD6;">Then</span>
                    valstart = DSDefinitionStr.ToString.IndexOf(<span style="color:#D69D85;">&quot;&lt;SharedDataSetReference&gt;&quot;</span>, DSDefinitionStr.ToString.IndexOf(<span style="color:#D69D85;">&quot;&lt;DataSet Name=&quot;&quot;&quot;</span>&amp; dataSets(i).Name &amp;<span style="color:#D69D85;">&quot;&quot;&quot;&gt;&quot;</span>)) + 24
                    valend = DSDefinitionStr.ToString.IndexOf(<span style="color:#D69D85;">&quot;&lt;/SharedDataSetReference&gt;&quot;</span>, DSDefinitionStr.ToString.IndexOf(<span style="color:#D69D85;">&quot;&lt;DataSet Name=&quot;&quot;&quot;</span>&amp; dataSets(i).Name &amp;<span style="color:#D69D85;">&quot;&quot;&quot;&gt;&quot;</span>))
                    sharedDataSetReference = DSDefinitionStr.ToString.Substring(valstart, valend - valstart)
                <span style="color:#569CD6;">End</span> <span style="color:#569CD6;">If</span>
                <span style="color:#569CD6;">Dim</span> sharedDataSetName <span style="color:#569CD6;">as</span> <span style="color:#569CD6;">String</span> = dataSets(i).Name
                <span style="color:#569CD6;">Dim</span> references(0) <span style="color:#569CD6;">as</span> ItemReference
                <span style="color:#569CD6;">Dim</span> sharedDataSet = <span style="color:#569CD6;">New</span> ItemReference()
                sharedDataSet.Name = sharedDataSetName
                Console.WriteLine(<span style="color:#D69D85;">&quot;Attempting to Link Dataset {0}&quot;</span>, sharedDataSetName)
                sharedDataSet.Reference = <span style="color:#D69D85;">&quot;/&quot;</span> + DataSetFolder + <span style="color:#D69D85;">&quot;/&quot;</span> + sharedDataSetReference
                references(0)=sharedDataSet
                rs.SetItemReferences(<span style="color:#D69D85;">&quot;/&quot;</span> + ReportFolder + <span style="color:#D69D85;">&quot;/&quot;</span> + ReportName, references)
                Console.WriteLine(<span style="color:#D69D85;">&quot;Report &quot;</span> + ReportName + <span style="color:#D69D85;">&quot; Linked to data set &quot;</span> + <span style="color:#D69D85;">&quot;/&quot;</span> + DataSetFolder + <span style="color:#D69D85;">&quot;/&quot;</span> + Convert.ToString(sharedDataSet.Name))
            <span style="color:#569CD6;">Next</span>
        <span style="color:#569CD6;">End</span> <span style="color:#569CD6;">If</span>
    <span style="color:#569CD6;">Catch</span> goof <span style="color:#569CD6;">As</span> SoapException
        Console.WriteLine(goof.Detail.InnerXml.ToString())
    <span style="color:#569CD6;">End</span> <span style="color:#569CD6;">Try</span>
<span style="color:#569CD6;">End</span> <span style="color:#569CD6;">Sub</span>

<span style="color:#57A64A;">&#39;Function to Reference Data Sources</span>
<span style="color:#569CD6;">Private</span> <span style="color:#569CD6;">Function</span> GetDataSource(sharedDataSourcePath <span style="color:#569CD6;">as</span> <span style="color:#569CD6;">string</span>, dataSourceName <span style="color:#569CD6;">as</span> <span style="color:#569CD6;">String</span>) <span style="color:#569CD6;">as</span> DataSource
    <span style="color:#569CD6;">Dim</span> reference <span style="color:#569CD6;">As</span> <span style="color:#569CD6;">New</span> DataSourceReference()
    <span style="color:#569CD6;">Dim</span> ds <span style="color:#569CD6;">As</span> <span style="color:#569CD6;">New</span> DataSource
    reference.Reference = <span style="color:#D69D85;">&quot;/&quot;</span> &amp; sharedDataSourcePath &amp; <span style="color:#D69D85;">&quot;/&quot;</span> &amp; dataSourceName
    ds.Item = <span style="color:#569CD6;">CType</span>(reference, DataSourceDefinitionOrReference)
    ds.Name = dataSourceName
    Console.WriteLine(<span style="color:#D69D85;">&quot;Attempting to Publish Data Source {0}&quot;</span>, ds.Name)
    GetDataSource=ds
<span style="color:#569CD6;">End</span> <span style="color:#569CD6;">Function</span>
</pre></div>
<p>This script is based on <a href="https://blogs.msdn.microsoft.com/johndesch/2012/12/17/using-the-rs-exe-utility-to-deploy-a-report-server-project-and-shared-dataset/">this article</a>.</p>
<p>Thanks!</p>

"""""
),
            ["""2017-12-15-How-to-SQL-code-coverage"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 How to set up SQL code coverage
""""",
["""date"""] =
"""""
 2017-12-15
""""",
["""tags"""] =
"""""
 dotnet sql
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<p>If you are creating a lot of SQL code, it is a good idea to do unit testing for it and see <a href="https://en.wikipedia.org/wiki/Code_coverage">code coverage</a>. Luckly there is two nice tools/libs to do it: <a href="http://tsqlt.org/">tSQLt</a> and <a href="https://github.com/GoEddie/SQLCover">SQLCover</a>.</p>
<p>In this article I will show how to create/set up SQLCover and run it for each CI build.
The basic idea is we are creating command line application which runs our tSQLt unit tests via SQLCover and generates HTML report with code coverage information.</p>
<p>Unfortunately there is no SQLCover package in NuGet, but we can download it from <a href="http://the.agilesql.club/SQLCover/download.php">here</a>.</p>
<p>Create a new command line application, add references to SQLCover.dll and Microsoft.SqlServer.TransactSql.ScriptDom.dll.
After that there is an example of Program.cs:</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
    <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">const</span> <span style="color:#569CD6;">string</span> RunAllSqlTestsCommand = <span style="color:#D69D85;">&quot;exec tSQLt.RunAll;&quot;</span>;
    <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">const</span> <span style="color:#569CD6;">string</span> DefaultDatabaseName = <span style="color:#D69D85;">&quot;MyDB&quot;</span>;

    <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">const</span> <span style="color:#569CD6;">string</span> ReportName = <span style="color:#D69D85;">&quot;SQLCoverage.html&quot;</span>;

    <span style="color:#569CD6;">static</span> <span style="color:#569CD6;">void</span> Main(<span style="color:#569CD6;">string</span>[] args)
    {
        <span style="color:#569CD6;">var</span> connectionString = ConfigurationManager.ConnectionStrings[DefaultDatabaseName].ConnectionString;
        <span style="color:#569CD6;">var</span> coverage = <span style="color:#569CD6;">new</span> CodeCoverage(connectionString, DefaultDatabaseName);
        <span style="color:#569CD6;">var</span> result = coverage.Cover(RunAllSqlTestsCommand);
        <span style="color:#569CD6;">var</span> updatedResult =  result.Html();
        File.WriteAllText(ReportName, updatedResult);
    }
</pre></div>
<p>After execution you will see SQLCoverage.html with code coverage statistics in the same folder.</p>
<p>One note from SQLCover owner: &quot;When we target local sql instances we delete the trace files but when targetting remote instances we are unable to delete the files as we do not (or potentially) do not have access. If this is the case keep an eye on the log directory and remove old &quot;SQLCover-Trace-.xel&quot; and &quot;SQLCover-Trace-.xem&quot; files.&quot;</p>
<p>Thanks.</p>

"""""
),
            ["""2017-12-18-Get-information-about-SP-functions"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Get information about all stored procedures, views and functions
""""",
["""date"""] =
"""""
 2017-12-18
""""",
["""tags"""] =
"""""
 dotnet sql
""""",
["""categories"""] =
"""""
 administration
""""",
 },
"""""
<p>When your primary work is adding functionality to MSSQL database (like implementing business logic in stored procedures, functions and view) it is very useful to have the list of all SP, functions and views with their description, name of authors, created dates and input/output parameters.</p>
<p>In this small article I will describer how to create a small console application which will get information from DB and create a list with this information in memory. Later I am creating HTML report using this information. But creating HTML report is not described in this article.</p>
<p>One note: each SP, function and view should have the next comment in their code:</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#57A64A;">-- =============================================</span>
<span style="color:#57A64A;">-- Author:      FirstName LastName</span>
<span style="color:#57A64A;">-- Create date = &quot;yyyyMMdd</span>
<span style="color:#57A64A;">-- Description: Short description</span>
<span style="color:#57A64A;">-- =============================================</span>
</pre></div>
<p>SQL query which shows information about SP, functions and views is:</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">const</span> <span style="color:#569CD6;">string</span> GetAllObjects = <span style="color:#D69D85;">@&quot;
DECLARE @StopString nvarchar(MAX) = &#39;-- =============================================&#39;;

SELECT DISTINCT
o.name,
o.type_desc as Type,
s.name as [Schema],
m.definition,
o.create_date as Created,
o.modify_date as Modified,
CASE WHEN CHARINDEX(@StopString, m.definition, CHARINDEX(@StopString, m.definition, 0)+1)-CHARINDEX(@StopString, m.definition, 0)-LEN(@StopString) &gt; CHARINDEX(@StopString, m.definition, 0) + LEN(@StopString)
    THEN
        SUBSTRING(m.definition, CHARINDEX(@StopString, m.definition, 0) + LEN(@StopString), CHARINDEX(@StopString, m.definition, CHARINDEX(@StopString, m.definition, 0)+1)-CHARINDEX(@StopString, m.definition, 0)-LEN(@StopString))
    ELSE
        &#39;No description&#39;
END
AS Description
FROM sys.sql_modules m
    INNER JOIN sys.objects o ON m.object_id = o.object_id
    INNER JOIN sys.schemas s ON o.schema_id = s.schema_id
WHERE
    s.name = &#39;dbo&#39; and
    (o.type_desc = &#39;VIEW&#39; or o.type_desc = &#39;SQL_STORED_PROCEDURE&#39; or o.type_desc = &#39;SQL_INLINE_TABLE_VALUED_FUNCTION&#39; or o.type_desc = &#39;SQL_SCALAR_FUNCTION&#39;)
&quot;</span>;
</pre></div>
<p>As I usully use <a href="https://github.com/StackExchange/Dapper">Dapper</a> to work with DB there is a list of DTOs:</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">internal</span> <span style="color:#569CD6;">class</span> DBObject
{
    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">string</span> Name { <span style="color:#569CD6;">get</span>; <span style="color:#569CD6;">set</span>; }
    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">string</span> Schema { <span style="color:#569CD6;">get</span>; <span style="color:#569CD6;">set</span>; }
    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">string</span> Type { <span style="color:#569CD6;">get</span>; <span style="color:#569CD6;">set</span>; }
    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">string</span> Definition { <span style="color:#569CD6;">get</span>; <span style="color:#569CD6;">set</span>; }
    <span style="color:#569CD6;">public</span> DateTime Created { <span style="color:#569CD6;">get</span>; <span style="color:#569CD6;">set</span>; }
    <span style="color:#569CD6;">public</span> DateTime Modified { <span style="color:#569CD6;">get</span>; <span style="color:#569CD6;">set</span>; }
    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">string</span> Description { <span style="color:#569CD6;">get</span>; <span style="color:#569CD6;">set</span>; }
}

<span style="color:#569CD6;">internal</span> <span style="color:#569CD6;">class</span> HelpInfo
{
    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">string</span> Name { <span style="color:#569CD6;">get</span>; <span style="color:#569CD6;">set</span>; }
    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">string</span> Owner { <span style="color:#569CD6;">get</span>; <span style="color:#569CD6;">set</span>; }
    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">string</span> Type { <span style="color:#569CD6;">get</span>; <span style="color:#569CD6;">set</span>; }
    <span style="color:#569CD6;">public</span> DateTime Created_datetime { <span style="color:#569CD6;">get</span>; <span style="color:#569CD6;">set</span>; }
}

<span style="color:#569CD6;">internal</span> <span style="color:#569CD6;">class</span> Parameter
{
    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">string</span> Parameter_name { <span style="color:#569CD6;">get</span>; <span style="color:#569CD6;">set</span>; }
    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">string</span> Type { <span style="color:#569CD6;">get</span>; <span style="color:#569CD6;">set</span>; }
    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">int</span> Length { <span style="color:#569CD6;">get</span>; <span style="color:#569CD6;">set</span>; }
    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">string</span> Prec { <span style="color:#569CD6;">get</span>; <span style="color:#569CD6;">set</span>; }
    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">int</span> Param_oder { <span style="color:#569CD6;">get</span>; <span style="color:#569CD6;">set</span>; }
    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">string</span> Collation { <span style="color:#569CD6;">get</span>; <span style="color:#569CD6;">set</span>; }
}

<span style="color:#569CD6;">internal</span> <span style="color:#569CD6;">class</span> Table
{
    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">string</span> Column_name { <span style="color:#569CD6;">get</span>; <span style="color:#569CD6;">set</span>; }
    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">string</span> Type { <span style="color:#569CD6;">get</span>; <span style="color:#569CD6;">set</span>; }
    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">string</span> Computed { <span style="color:#569CD6;">get</span>; <span style="color:#569CD6;">set</span>; }
    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">int</span> Length { <span style="color:#569CD6;">get</span>; <span style="color:#569CD6;">set</span>; }
    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">string</span> Prec { <span style="color:#569CD6;">get</span>; <span style="color:#569CD6;">set</span>; }
    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">string</span> Scale { <span style="color:#569CD6;">get</span>; <span style="color:#569CD6;">set</span>; }
    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">string</span> Nullable { <span style="color:#569CD6;">get</span>; <span style="color:#569CD6;">set</span>; }
    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">string</span> TrimTrailingBlanks { <span style="color:#569CD6;">get</span>; <span style="color:#569CD6;">set</span>; }
    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">string</span> FixedLenNullInSource { <span style="color:#569CD6;">get</span>; <span style="color:#569CD6;">set</span>; }
    <span style="color:#569CD6;">public</span> <span style="color:#569CD6;">string</span> Collation { <span style="color:#569CD6;">get</span>; <span style="color:#569CD6;">set</span>; }
}
</pre></div>
<p>And to get the list of SP, functions and views we can use the next method:</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">public</span> IEnumerable&lt;(DBObject Object, HelpInfo Info, IEnumerable&lt;Parameter&gt; Parameters, IEnumerable&lt;Table&gt; OutputTables)&gt; GetAllDbObjects()
{
    <span style="color:#569CD6;">var</span> objs = _sqlExecutor.Query&lt;DBObject&gt;(GetAllObjects);
    <span style="color:#569CD6;">foreach</span> (<span style="color:#569CD6;">var</span> data <span style="color:#569CD6;">in</span> objs.OrderBy(x =&gt; x.Created))
    {
        <span style="color:#569CD6;">switch</span> (data.Type)
        {
            <span style="color:#569CD6;">case</span> <span style="color:#D69D85;">&quot;SQL_STORED_PROCEDURE&quot;</span>:
            <span style="color:#569CD6;">case</span> <span style="color:#D69D85;">&quot;SQL_SCALAR_FUNCTION&quot;</span>:
                <span style="color:#569CD6;">var</span> infoAboutSPOrScalarFunction = _sqlExecutor.QueryMultiple&lt;HelpInfo, Parameter&gt;(<span style="color:#D69D85;">&quot;sp_help&quot;</span>,
                    <span style="color:#569CD6;">new</span> { @objname = $<span style="color:#D69D85;">&quot;{data.Schema}.{data.Name}&quot;</span> }, CommandType.StoredProcedure);
                <span style="color:#569CD6;">yield</span> <span style="color:#569CD6;">return</span> (data, infoAboutSPOrScalarFunction.Item1, infoAboutSPOrScalarFunction.Item2, <span style="color:#569CD6;">null</span>);
                <span style="color:#569CD6;">break</span>;
            <span style="color:#569CD6;">case</span> <span style="color:#D69D85;">&quot;SQL_INLINE_TABLE_VALUED_FUNCTION&quot;</span>:
            <span style="color:#569CD6;">case</span> <span style="color:#D69D85;">&quot;VIEW&quot;</span>:
                <span style="color:#569CD6;">var</span> inforAboutViewOrInlineFunction = _sqlExecutor.QueryMultiple&lt;HelpInfo, Table, Parameter&gt;(<span style="color:#D69D85;">&quot;sp_help&quot;</span>,
                    <span style="color:#569CD6;">new</span> { @objname = $<span style="color:#D69D85;">&quot;{data.Schema}.{data.Name}&quot;</span> }, CommandType.StoredProcedure);
                <span style="color:#569CD6;">yield</span> <span style="color:#569CD6;">return</span> (data, inforAboutViewOrInlineFunction.Item1, inforAboutViewOrInlineFunction.Item3, inforAboutViewOrInlineFunction.Item2);
                <span style="color:#569CD6;">break</span>;
        }
    }
}

<span style="color:#608B4E;">///</span><span style="color:#608B4E;"> where Query and QueryMultiple methods look like</span>
<span style="color:#569CD6;">public</span> IEnumerable&lt;T&gt; Query&lt;T&gt;(<span style="color:#569CD6;">string</span> query)
{
    <span style="color:#569CD6;">using</span> (<span style="color:#569CD6;">var</span> connection = <span style="color:#569CD6;">new</span> SqlConnection(connectionString))
    {
        <span style="color:#569CD6;">return</span> connection.Query&lt;T&gt;(query);
    }
}

<span style="color:#569CD6;">public</span> (T, IEnumerable&lt;K&gt;) QueryMultiple&lt;T, K&gt;(<span style="color:#569CD6;">string</span> query, <span style="color:#569CD6;">object</span> param, CommandType commandType)
{
    <span style="color:#569CD6;">using</span> (<span style="color:#569CD6;">var</span> connection = <span style="color:#569CD6;">new</span> SqlConnection(connectionString))
    {
        <span style="color:#569CD6;">using</span> (<span style="color:#569CD6;">var</span> multi = connection.QueryMultiple(query, param, commandType: CommandType.StoredProcedure))
        {
            <span style="color:#569CD6;">return</span> (
                multi.Read&lt;T&gt;().Single(),
                multi.IsConsumed ? <span style="color:#569CD6;">null</span> : multi.Read&lt;K&gt;()
            );
        }
    }
}

<span style="color:#569CD6;">public</span> (T, IEnumerable&lt;K&gt;, IEnumerable&lt;M&gt;) QueryMultiple&lt;T, K, M&gt;(<span style="color:#569CD6;">string</span> query, <span style="color:#569CD6;">object</span> param, CommandType commandType)
{
    <span style="color:#569CD6;">using</span> (<span style="color:#569CD6;">var</span> connection = <span style="color:#569CD6;">new</span> SqlConnection(connectionString))
    {
        <span style="color:#569CD6;">using</span> (<span style="color:#569CD6;">var</span> multi = connection.QueryMultiple(query, param, commandType: CommandType.StoredProcedure))
        {
            <span style="color:#569CD6;">return</span> (
                multi.Read&lt;T&gt;().Single(),
                multi.Read&lt;K&gt;(),
                multi.IsConsumed ? <span style="color:#569CD6;">null</span>: multi.Read&lt;M&gt;()
            );
        }
    }
}
</pre></div>
<p>So mentioned GetAllDbObjects returns a list of tuples, where DBObject contains general information about SP, function or view; HelpInfo contains additional information about DBObject; IEnumerable<Parameter> contains information about input/output parameters for SP and functions; IEnumerable<Table> contains information about a view design (as view returns data in table format).</p>
<p>We can use this list to create different kinds of report like HTML report or delta report which shows only modified db objects.</p>
<p>Thanks!</p>

"""""
),
            ["""2017-12-20-Remote-MSSQL-to-local-server"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Copy remote MSSQL DB to local server
""""",
["""date"""] =
"""""
 2017-12-20
""""",
["""tags"""] =
"""""
 dotnet mssql
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<p>I faced with one issue how to automatically download and restore databases from remote server to my local MSSQL server. It sounds like very generic task so I tried to find a solution in Internet without success. So there is a small console application which does the next things:</p>
<ol>
<li>Backup selected databases on remote server;</li>
<li>Copy backups to local folder;</li>
<li>Restore copied databases to local MSSQL;</li>
<li>Change the owner of databases to current user;</li>
</ol>
<p>A small snippet with implementation is below.</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#57A64A;">/*
You need to add next NuGet packages:
&quot;Microsoft.Extensions.Configuration&quot;: &quot;2.0.0&quot;,
&quot;Microsoft.Extensions.Configuration.FileExtensions&quot;: &quot;2.0.0&quot;,
&quot;Microsoft.Extensions.Configuration.Json&quot;: &quot;2.0.0&quot;,
&quot;System.Data.Common&quot;: &quot;4.3.0&quot;,
&quot;System.Data.SqlClient&quot;: &quot;4.4.2&quot;,
&quot;System.Runtime&quot;: &quot;4.3.0&quot;
*/</span>
<span style="color:#569CD6;">class</span> Program
{
    <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">static</span> IConfigurationRoot Configuration = <span style="color:#569CD6;">new</span> ConfigurationBuilder()
            .SetBasePath(Directory.GetCurrentDirectory())
            .AddJsonFile(<span style="color:#D69D85;">&quot;appsettings.json&quot;</span>).Build();

    <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">static</span> <span style="color:#569CD6;">string</span>[] dbs { <span style="color:#569CD6;">get</span>; } = Configuration.GetSection(<span style="color:#D69D85;">&quot;dbs&quot;</span>)
        .GetChildren().Select(x=&gt;x.Value).ToArray();

    <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">static</span> <span style="color:#569CD6;">string</span> remoteServer { <span style="color:#569CD6;">get</span>; } = Configuration[<span style="color:#D69D85;">&quot;connectionStrings:remoteServer&quot;</span>];
    <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">static</span> <span style="color:#569CD6;">string</span> localServer { <span style="color:#569CD6;">get</span>; } = Configuration[<span style="color:#D69D85;">&quot;connectionStrings:localServer&quot;</span>];
    <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">static</span> <span style="color:#569CD6;">string</span> currentUser { <span style="color:#569CD6;">get</span>; } = Configuration[<span style="color:#D69D85;">&quot;currentUser&quot;</span>];
    <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">static</span> <span style="color:#569CD6;">string</span> remoteServerPathWithBackups { <span style="color:#569CD6;">get</span>; } = Configuration[<span style="color:#D69D85;">&quot;remoteServerPathWithBackups&quot;</span>];
    <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">static</span> <span style="color:#569CD6;">string</span> serverPathWithBackups { <span style="color:#569CD6;">get</span>; } = Configuration[<span style="color:#D69D85;">&quot;serverPathWithBackups&quot;</span>];
    <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">static</span> <span style="color:#569CD6;">string</span> userNameToLogInToServer { <span style="color:#569CD6;">get</span>; } = Configuration[<span style="color:#D69D85;">&quot;userNameToLogInToServer&quot;</span>];
    <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">static</span> <span style="color:#569CD6;">string</span> passwordToLogInToServer { <span style="color:#569CD6;">get</span>; } = Configuration[<span style="color:#D69D85;">&quot;passwordToLogInToServer&quot;</span>];
    <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">static</span> <span style="color:#569CD6;">string</span> localPathToCopyBackups { <span style="color:#569CD6;">get</span>; } = Configuration[<span style="color:#D69D85;">&quot;localPathToCopyBackups&quot;</span>];
    <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">static</span> <span style="color:#569CD6;">string</span> backupFileName = Configuration[<span style="color:#D69D85;">&quot;backupFileName&quot;</span>];

    <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">const</span> <span style="color:#569CD6;">string</span> changeOwnerOfDb = <span style="color:#D69D85;">@&quot;
USE {0}
EXEC sp_changedbowner &#39;{1}&#39;&quot;</span>;

    <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">const</span> <span style="color:#569CD6;">string</span> changeToSingleUser = <span style="color:#D69D85;">@&quot;
ALTER DATABASE[{0}] SET Single_User WITH Rollback Immediate&quot;</span>;

    <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">const</span> <span style="color:#569CD6;">string</span> changeToMultiUser = <span style="color:#D69D85;">@&quot;
ALTER DATABASE [{0}] SET Multi_User&quot;</span>;

    <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">const</span> <span style="color:#569CD6;">string</span> AddNetPath = <span style="color:#D69D85;">&quot;NET USE {0} {1} /USER:{2}&quot;</span>;
    <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">const</span> <span style="color:#569CD6;">string</span> DeleteNetPath = <span style="color:#D69D85;">&quot;NET USE {0} /DELETE&quot;</span>;
    <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">const</span> <span style="color:#569CD6;">string</span> CopyReport = <span style="color:#D69D85;">&quot;robocopy {0} {1} {2}&quot;</span>;

    <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">const</span> <span style="color:#569CD6;">string</span> restoreDb = <span style="color:#D69D85;">@&quot;
RESTORE DATABASE {0} FROM DISK = &#39;{1}&#39; WITH REPLACE, RECOVERY;&quot;</span>;
    <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">const</span> <span style="color:#569CD6;">string</span> backupDb = <span style="color:#D69D85;">@&quot;
BACKUP DATABASE {0} TO DISK=&#39;{1}&#39; WITH INIT, COPY_ONLY, FORMAT, COMPRESSION;&quot;</span>;

    <span style="color:#569CD6;">static</span> <span style="color:#569CD6;">void</span> Main(<span style="color:#569CD6;">string</span>[] args)
    {
        <span style="color:#569CD6;">foreach</span> (<span style="color:#569CD6;">var</span> db <span style="color:#569CD6;">in</span> dbs)
        {
            Console.WriteLine($<span style="color:#D69D85;">&quot;Backup {db}&quot;</span>);
            BackupTargetDatabase(remoteServer, db);

            Console.WriteLine($<span style="color:#D69D85;">&quot;Copy created backup to local - {db}&quot;</span>);
            CopyBackupToLocal(db);

            Console.WriteLine($<span style="color:#D69D85;">&quot;Change to single user mode - {db}&quot;</span>);
            ChangeToSingleUser(localServer, db);

            Console.WriteLine($<span style="color:#D69D85;">&quot;Restore db locally - {db}&quot;</span>);
            RestoreTargetDatabase(localServer, db);

            Console.WriteLine($<span style="color:#D69D85;">&quot;Change the owner - {db}&quot;</span>);
            ChangeOwnerOfDb(localServer, db);

            Console.WriteLine($<span style="color:#D69D85;">&quot;Reset to multi user mode - {db}&quot;</span>);
            ChangeToMultiUser(localServer, db);
        }
    }

    <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">static</span> <span style="color:#569CD6;">void</span> ChangeToMultiUser(<span style="color:#569CD6;">string</span> localServer, <span style="color:#569CD6;">string</span> db) =&gt;
        ExecuteSqlCommand(localServer, <span style="color:#569CD6;">string</span>.Format(changeToMultiUser, db));

    <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">static</span> <span style="color:#569CD6;">void</span> ChangeToSingleUser(<span style="color:#569CD6;">string</span> localServer, <span style="color:#569CD6;">string</span> db) =&gt;
        ExecuteSqlCommand(localServer, <span style="color:#569CD6;">string</span>.Format(changeToSingleUser, db));

    <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">static</span> <span style="color:#569CD6;">void</span> ChangeOwnerOfDb(<span style="color:#569CD6;">string</span> localServer, <span style="color:#569CD6;">string</span> db) =&gt;
        ExecuteSqlCommand(localServer, <span style="color:#569CD6;">string</span>.Format(changeOwnerOfDb, db, currentUser));

    <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">static</span> <span style="color:#569CD6;">void</span> CopyBackupToLocal(<span style="color:#569CD6;">string</span> database)
    {
        ExecuteCommand(<span style="color:#569CD6;">string</span>.Format(AddNetPath, remoteServerPathWithBackups, passwordToLogInToServer, userNameToLogInToServer));
        ExecuteCommand(<span style="color:#569CD6;">string</span>.Format(CopyReport, remoteServerPathWithBackups, localPathToCopyBackups, <span style="color:#569CD6;">string</span>.Format(backupFileName, database)));
        ExecuteCommand(<span style="color:#569CD6;">string</span>.Format(DeleteNetPath, remoteServerPathWithBackups));
    }

    <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">static</span> <span style="color:#569CD6;">void</span> ExecuteCommand(<span style="color:#569CD6;">string</span> command)
    {
        <span style="color:#569CD6;">var</span> processInfo = <span style="color:#569CD6;">new</span> ProcessStartInfo(<span style="color:#D69D85;">&quot;cmd.exe&quot;</span>, <span style="color:#D69D85;">&quot;/c &quot;</span> + command);
        processInfo.CreateNoWindow = <span style="color:#569CD6;">true</span>;
        processInfo.UseShellExecute = <span style="color:#569CD6;">false</span>;
        processInfo.RedirectStandardError = <span style="color:#569CD6;">true</span>;
        processInfo.RedirectStandardOutput = <span style="color:#569CD6;">true</span>;

        Console.WriteLine(command);

        <span style="color:#569CD6;">var</span> process = Process.Start(processInfo);

        process.OutputDataReceived += (<span style="color:#569CD6;">object</span> sender, DataReceivedEventArgs e) =&gt;
            Console.WriteLine($<span style="color:#D69D85;">&quot;{e.Data}&quot;</span>);
        process.BeginOutputReadLine();

        process.ErrorDataReceived += (<span style="color:#569CD6;">object</span> sender, DataReceivedEventArgs e) =&gt;
            Console.WriteLine($<span style="color:#D69D85;">&quot;{e.Data}&quot;</span>);
        process.BeginErrorReadLine();

        process.WaitForExit();
        <span style="color:#569CD6;">if</span> (process.ExitCode &gt; <span style="color:#B5CEA8;">0</span>)
            Console.WriteLine($<span style="color:#D69D85;">&quot;Error {nameof(process.ExitCode)}: {process.ExitCode}&quot;</span>);
        process.Close();
    }

    <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">static</span> <span style="color:#569CD6;">void</span> RestoreTargetDatabase(<span style="color:#569CD6;">string</span> connectionString, <span style="color:#569CD6;">string</span> database) =&gt;
        ExecuteSqlCommand(connectionString, <span style="color:#569CD6;">string</span>.Format(restoreDb, database, Path.Combine(localPathToCopyBackups, <span style="color:#569CD6;">string</span>.Format(backupFileName, database))));

    <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">static</span> <span style="color:#569CD6;">void</span> BackupTargetDatabase(<span style="color:#569CD6;">string</span> connectionString, <span style="color:#569CD6;">string</span> database) =&gt;
        ExecuteSqlCommand(connectionString, <span style="color:#569CD6;">string</span>.Format(backupDb, database, Path.Combine(serverPathWithBackups, <span style="color:#569CD6;">string</span>.Format(backupFileName, database))));

    <span style="color:#569CD6;">private</span> <span style="color:#569CD6;">static</span> <span style="color:#569CD6;">void</span> ExecuteSqlCommand(<span style="color:#569CD6;">string</span> connectionString, <span style="color:#569CD6;">string</span> query)
    {
        <span style="color:#569CD6;">using</span> (<span style="color:#569CD6;">var</span> connection = <span style="color:#569CD6;">new</span> SqlConnection(connectionString))
        {
            <span style="color:#569CD6;">using</span> (<span style="color:#569CD6;">var</span> command = <span style="color:#569CD6;">new</span> SqlCommand(query, connection))
            {
                connection.Open();
                command.CommandTimeout = <span style="color:#B5CEA8;">300</span>;
                command.ExecuteNonQuery();
            }
        }
    }
}
</pre></div>
<p>Thanks.</p>

"""""
),
            ["""2017-12-22-EF-Core-database-SQL"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Generate EF Core model from database using SQL script
""""",
["""date"""] =
"""""
 2017-12-22
""""",
["""tags"""] =
"""""
 dotnet sql ef
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<p>It is possible to generate EF Core model from existing database without some of tables. There is very simple and small SQL query which generated a content of C# file.</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">USE</span> &lt;&lt;MyDatabase&gt;&gt;

<span style="color:#569CD6;">DECLARE</span> @classNames <span style="color:#569CD6;">VARCHAR</span>(<span style="color:#FF00FF;">MAX</span>);
<span style="color:#569CD6;">SET</span> @classNames = <span style="color:#D69D85;">&#39;TableName1,TableName2,TableName3&#39;</span>;

<span style="color:#569CD6;">DECLARE</span> @schemaName <span style="color:#569CD6;">NVARCHAR</span>(<span style="color:#FF00FF;">MAX</span>), @className <span style="color:#569CD6;">NVARCHAR</span>(<span style="color:#FF00FF;">MAX</span>), @tableName <span style="color:#569CD6;">NVARCHAR</span>(<span style="color:#FF00FF;">MAX</span>);;
<span style="color:#569CD6;">SET</span> @schemaName = <span style="color:#D69D85;">&#39;dbo&#39;</span>
<span style="color:#569CD6;">DECLARE</span> @Result <span style="color:#569CD6;">VARCHAR</span>(<span style="color:#FF00FF;">MAX</span>);

<span style="color:#569CD6;">PRINT</span> <span style="color:#D69D85;">&#39;// generated by script&#39;</span>
<span style="color:#569CD6;">PRINT</span> <span style="color:#D69D85;">&#39;using Microsoft.EntityFrameworkCore;&#39;</span>
<span style="color:#569CD6;">PRINT</span> <span style="color:#D69D85;">&#39;using System;&#39;</span>
<span style="color:#569CD6;">PRINT</span> <span style="color:#D69D85;">&#39;using System.Collections.Generic;&#39;</span>
<span style="color:#569CD6;">PRINT</span> <span style="color:#D69D85;">&#39;using System.ComponentModel.DataAnnotations;&#39;</span>
<span style="color:#569CD6;">PRINT</span> <span style="color:#D69D85;">&#39;using System.ComponentModel.DataAnnotations.Schema;&#39;</span>
<span style="color:#569CD6;">PRINT</span> <span style="color:#D69D85;">&#39;using System.Configuration;&#39;</span>

<span style="color:#569CD6;">PRINT</span> <span style="color:#D69D85;">&#39;namespace Model.&#39;</span>+ <span style="color:#FF00FF;">DB_NAME</span>()
<span style="color:#569CD6;">PRINT</span> <span style="color:#D69D85;">&#39;{&#39;</span>
<span style="color:#569CD6;">PRINT</span> <span style="color:#D69D85;">&#39;    public class &#39;</span>+ <span style="color:#FF00FF;">DB_NAME</span>() +<span style="color:#D69D85;">&#39;Context : DbContext {&#39;</span>

<span style="color:#57A64A;">-- adding list of all tables where identity columns</span>

<span style="color:#569CD6;">SET</span> @Result = <span style="color:#D69D85;">&#39;&#39;</span>
<span style="color:#569CD6;">SELECT</span> @Result = <span style="color:#569CD6;">CASE</span> <span style="color:#569CD6;">WHEN</span> @Result = <span style="color:#D69D85;">&#39;&#39;</span> <span style="color:#569CD6;">THEN</span> <span style="color:#D69D85;">&#39;&quot;&#39;</span>+tbl.name+<span style="color:#D69D85;">&#39;&quot;&#39;</span> <span style="color:#569CD6;">ELSE</span> @Result + <span style="color:#D69D85;">&#39;, &quot;&#39;</span> + tbl.name + <span style="color:#D69D85;">&#39;&quot;&#39;</span> <span style="color:#569CD6;">END</span>
<span style="color:#569CD6;">FROM</span> sys.columns cols
<span style="color:#569CD6;">JOIN</span> sys.tables tbl <span style="color:#569CD6;">ON</span> cols.object_id = tbl.object_id
<span style="color:#569CD6;">WHERE</span> tbl.name <span style="color:#569CD6;">in</span> (<span style="color:#569CD6;">select</span> <span style="color:#569CD6;">DISTINCT</span> [Value] <span style="color:#569CD6;">from</span> STRING_SPLIT(@classNames, <span style="color:#D69D85;">&#39;,&#39;</span>)) <span style="color:#569CD6;">AND</span> cols.is_identity = 1

<span style="color:#569CD6;">PRINT</span> <span style="color:#D69D85;">&#39;        public List&lt;string&gt; TablesWithIdentity = new List&lt;string&gt;() {&#39;</span> + @Result + <span style="color:#D69D85;">&#39;};&#39;</span>

<span style="color:#569CD6;">PRINT</span> <span style="color:#D69D85;">&#39;        public &#39;</span>+ <span style="color:#FF00FF;">DB_NAME</span>() +<span style="color:#D69D85;">&#39;Context() { }&#39;</span>
<span style="color:#569CD6;">PRINT</span> <span style="color:#D69D85;">&#39;        public &#39;</span>+ <span style="color:#FF00FF;">DB_NAME</span>() +<span style="color:#D69D85;">&#39;Context(DbContextOptions&lt;&#39;</span>+ <span style="color:#FF00FF;">DB_NAME</span>() +<span style="color:#D69D85;">&#39;Context&gt; options): base(options) { }&#39;</span>
<span style="color:#569CD6;">PRINT</span> <span style="color:#D69D85;">&#39;        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)&#39;</span>
<span style="color:#569CD6;">PRINT</span> <span style="color:#D69D85;">&#39;        {&#39;</span>
<span style="color:#569CD6;">PRINT</span> <span style="color:#D69D85;">&#39;            if (!optionsBuilder.IsConfigured)&#39;</span>
<span style="color:#569CD6;">PRINT</span> <span style="color:#D69D85;">&#39;                optionsBuilder.UseSqlServer(ConfigurationManager.ConnectionStrings[&quot;&#39;</span>+ <span style="color:#FF00FF;">DB_NAME</span>() +<span style="color:#D69D85;">&#39;&quot;].ConnectionString);&#39;</span>
<span style="color:#569CD6;">PRINT</span> <span style="color:#D69D85;">&#39;        }&#39;</span>

<span style="color:#57A64A;">-- adding DbSets for each table</span>
<span style="color:#569CD6;">DECLARE</span> CLASS_NAME <span style="color:#569CD6;">CURSOR</span> <span style="color:#569CD6;">LOCAL</span> <span style="color:#569CD6;">FOR</span>
<span style="color:#569CD6;">SELECT</span> <span style="color:#569CD6;">DISTINCT</span> [VALUE]
<span style="color:#569CD6;">FROM</span> STRING_SPLIT(@classNames, <span style="color:#D69D85;">&#39;,&#39;</span>)
<span style="color:#569CD6;">OPEN</span> CLASS_NAME
<span style="color:#569CD6;">FETCH</span> <span style="color:#569CD6;">NEXT</span> <span style="color:#569CD6;">FROM</span> CLASS_NAME <span style="color:#569CD6;">INTO</span> @className
<span style="color:#569CD6;">WHILE</span> <span style="color:#FF00FF;">@@FETCH_STATUS</span> = 0
<span style="color:#569CD6;">BEGIN</span>
    <span style="color:#569CD6;">PRINT</span> <span style="color:#D69D85;">&#39;        public DbSet&lt;&#39;</span>+@className+<span style="color:#D69D85;">&#39;&gt; &#39;</span>+@className+<span style="color:#D69D85;">&#39;s { get; set; }&#39;</span>

    <span style="color:#569CD6;">FETCH</span> <span style="color:#569CD6;">NEXT</span> <span style="color:#569CD6;">FROM</span> CLASS_NAME <span style="color:#569CD6;">INTO</span> @className
<span style="color:#569CD6;">END</span>
<span style="color:#569CD6;">CLOSE</span> CLASS_NAME
<span style="color:#569CD6;">DEALLOCATE</span> CLASS_NAME

<span style="color:#57A64A;">-- adding primary key for each table</span>

<span style="color:#569CD6;">PRINT</span> <span style="color:#D69D85;">&#39;        protected override void OnModelCreating(ModelBuilder modelBuilder) {&#39;</span>
<span style="color:#569CD6;">DECLARE</span> CLASS_NAME <span style="color:#569CD6;">CURSOR</span> <span style="color:#569CD6;">LOCAL</span> <span style="color:#569CD6;">FOR</span>
<span style="color:#569CD6;">SELECT</span> <span style="color:#569CD6;">DISTINCT</span> [VALUE]
<span style="color:#569CD6;">FROM</span> STRING_SPLIT(@classNames, <span style="color:#D69D85;">&#39;,&#39;</span>)
<span style="color:#569CD6;">OPEN</span> CLASS_NAME
<span style="color:#569CD6;">FETCH</span> <span style="color:#569CD6;">NEXT</span> <span style="color:#569CD6;">FROM</span> CLASS_NAME <span style="color:#569CD6;">INTO</span> @className
<span style="color:#569CD6;">WHILE</span> <span style="color:#FF00FF;">@@FETCH_STATUS</span> = 0
<span style="color:#569CD6;">BEGIN</span>
    <span style="color:#569CD6;">SET</span> @tableName = <span style="color:#FF00FF;">UPPER</span>(@className)
    <span style="color:#569CD6;">SET</span> @Result = <span style="color:#569CD6;">NULL</span>
    <span style="color:#569CD6;">SELECT</span> @Result = <span style="color:#569CD6;">CASE</span> <span style="color:#569CD6;">WHEN</span> @Result <span style="color:#569CD6;">IS</span> <span style="color:#569CD6;">NULL</span> <span style="color:#569CD6;">THEN</span> <span style="color:#D69D85;">&#39;x.&#39;</span> + cols.name <span style="color:#569CD6;">ELSE</span> @Result + <span style="color:#D69D85;">&#39;, x.&#39;</span> + cols.name <span style="color:#569CD6;">END</span>
    <span style="color:#569CD6;">FROM</span> sys.columns cols
    <span style="color:#569CD6;">LEFT</span> <span style="color:#569CD6;">JOIN</span> (
        <span style="color:#569CD6;">SELECT</span> i.is_primary_key, ic.object_id, ic.column_id
        <span style="color:#569CD6;">FROM</span> sys.index_columns ic
        <span style="color:#569CD6;">LEFT</span> <span style="color:#569CD6;">JOIN</span> sys.indexes i <span style="color:#569CD6;">on</span> ic.object_id = i.object_id <span style="color:#569CD6;">and</span> ic.index_id = i.index_id
        <span style="color:#569CD6;">WHERE</span> i.is_primary_key = 1) <span style="color:#569CD6;">AS</span> PRIMARYKEY <span style="color:#569CD6;">ON</span> PRIMARYKEY.column_id = cols.column_id <span style="color:#569CD6;">AND</span> PRIMARYKEY.object_id = cols.object_id
    <span style="color:#569CD6;">JOIN</span> sys.tables tbl <span style="color:#569CD6;">ON</span> cols.object_id = tbl.object_id
    <span style="color:#569CD6;">WHERE</span> tbl.name = @tableName <span style="color:#569CD6;">AND</span> PRIMARYKEY.is_primary_key = 1

    <span style="color:#569CD6;">PRINT</span> <span style="color:#D69D85;">&#39;            modelBuilder.Entity&lt;&#39;</span>+@className+<span style="color:#D69D85;">&#39;&gt;().HasKey(x =&gt; new {&#39;</span>+@Result+<span style="color:#D69D85;">&#39;});&#39;</span>
    <span style="color:#569CD6;">IF</span> @Result = <span style="color:#D69D85;">&#39;x.ID&#39;</span> <span style="color:#569CD6;">OR</span> @Result = <span style="color:#D69D85;">&#39;x.Id&#39;</span> <span style="color:#569CD6;">OR</span> @Result = <span style="color:#D69D85;">&#39;x.id&#39;</span>
        <span style="color:#569CD6;">PRINT</span> <span style="color:#D69D85;">&#39;            modelBuilder.Entity&lt;&#39;</span>+@className+<span style="color:#D69D85;">&#39;&gt;().Property(x =&gt; &#39;</span>+@Result+<span style="color:#D69D85;">&#39;).ValueGeneratedNever();&#39;</span>

    <span style="color:#569CD6;">FETCH</span> <span style="color:#569CD6;">NEXT</span> <span style="color:#569CD6;">FROM</span> CLASS_NAME <span style="color:#569CD6;">INTO</span> @className
<span style="color:#569CD6;">END</span>
<span style="color:#569CD6;">CLOSE</span> CLASS_NAME
<span style="color:#569CD6;">DEALLOCATE</span> CLASS_NAME
<span style="color:#569CD6;">PRINT</span> <span style="color:#D69D85;">&#39;        }&#39;</span>
<span style="color:#569CD6;">PRINT</span> <span style="color:#D69D85;">&#39;    }&#39;</span>
<span style="color:#569CD6;">PRINT</span> <span style="color:#D69D85;">&#39;&#39;</span>

<span style="color:#57A64A;">-- start adding POCO objects for each table</span>
<span style="color:#569CD6;">DECLARE</span> CLASS_NAME <span style="color:#569CD6;">CURSOR</span> <span style="color:#569CD6;">LOCAL</span> <span style="color:#569CD6;">FOR</span>
<span style="color:#569CD6;">SELECT</span> <span style="color:#569CD6;">DISTINCT</span> [VALUE]
<span style="color:#569CD6;">FROM</span> STRING_SPLIT(@classNames, <span style="color:#D69D85;">&#39;,&#39;</span>)
<span style="color:#569CD6;">OPEN</span> CLASS_NAME
<span style="color:#569CD6;">FETCH</span> <span style="color:#569CD6;">NEXT</span> <span style="color:#569CD6;">FROM</span> CLASS_NAME <span style="color:#569CD6;">INTO</span> @className
<span style="color:#569CD6;">WHILE</span> <span style="color:#FF00FF;">@@FETCH_STATUS</span> = 0
<span style="color:#569CD6;">BEGIN</span>
    <span style="color:#569CD6;">SET</span> @tableName = <span style="color:#FF00FF;">UPPER</span>(@className)

    <span style="color:#569CD6;">DECLARE</span> tableColumns <span style="color:#569CD6;">CURSOR</span> <span style="color:#569CD6;">LOCAL</span> <span style="color:#569CD6;">FOR</span>
    <span style="color:#569CD6;">SELECT</span> <span style="color:#569CD6;">DISTINCT</span> cols.name, cols.system_type_id, cols.is_nullable
    <span style="color:#569CD6;">FROM</span> sys.columns cols
    <span style="color:#569CD6;">JOIN</span> sys.tables tbl <span style="color:#569CD6;">ON</span> cols.object_id = tbl.object_id
    <span style="color:#569CD6;">WHERE</span> tbl.name = @tableName

    <span style="color:#569CD6;">PRINT</span> <span style="color:#D69D85;">&#39;    [Table(&quot;&#39;</span>+@tableName+<span style="color:#D69D85;">&#39;&quot;)]&#39;</span>
    <span style="color:#569CD6;">PRINT</span> <span style="color:#D69D85;">&#39;    public partial class &#39;</span> + @className
    <span style="color:#569CD6;">PRINT</span> <span style="color:#D69D85;">&#39;    {&#39;</span>

    <span style="color:#569CD6;">OPEN</span> tableColumns
    <span style="color:#569CD6;">DECLARE</span> @name <span style="color:#569CD6;">NVARCHAR</span>(<span style="color:#FF00FF;">MAX</span>), @typeId <span style="color:#569CD6;">INT</span>, @isNullable <span style="color:#569CD6;">BIT</span>, @typeName <span style="color:#569CD6;">NVARCHAR</span>(<span style="color:#FF00FF;">MAX</span>)
    <span style="color:#569CD6;">FETCH</span> <span style="color:#569CD6;">NEXT</span> <span style="color:#569CD6;">FROM</span> tableColumns <span style="color:#569CD6;">INTO</span> @name, @typeId, @isNullable
    <span style="color:#569CD6;">WHILE</span> <span style="color:#FF00FF;">@@FETCH_STATUS</span> = 0
    <span style="color:#569CD6;">BEGIN</span>
        <span style="color:#569CD6;">SET</span> @typeName =
        <span style="color:#569CD6;">CASE</span> @typeId
            <span style="color:#569CD6;">WHEN</span> 36 <span style="color:#569CD6;">THEN</span> <span style="color:#D69D85;">&#39;Guid&#39;</span>
            <span style="color:#569CD6;">WHEN</span> 52 <span style="color:#569CD6;">THEN</span> <span style="color:#D69D85;">&#39;int&#39;</span>
            <span style="color:#569CD6;">WHEN</span> 56 <span style="color:#569CD6;">THEN</span> <span style="color:#D69D85;">&#39;int&#39;</span>
            <span style="color:#569CD6;">WHEN</span> 61 <span style="color:#569CD6;">THEN</span> <span style="color:#D69D85;">&#39;DateTime&#39;</span>
            <span style="color:#569CD6;">WHEN</span> 104 <span style="color:#569CD6;">THEN</span> <span style="color:#D69D85;">&#39;bool&#39;</span>
            <span style="color:#569CD6;">WHEN</span> 108 <span style="color:#569CD6;">THEN</span> <span style="color:#D69D85;">&#39;decimal&#39;</span>
            <span style="color:#569CD6;">WHEN</span> 127 <span style="color:#569CD6;">THEN</span> <span style="color:#D69D85;">&#39;long&#39;</span>
            <span style="color:#569CD6;">WHEN</span> 167 <span style="color:#569CD6;">THEN</span> <span style="color:#D69D85;">&#39;string&#39;</span>
            <span style="color:#569CD6;">WHEN</span> 175 <span style="color:#569CD6;">THEN</span> <span style="color:#D69D85;">&#39;string&#39;</span>
            <span style="color:#569CD6;">WHEN</span> 231 <span style="color:#569CD6;">THEN</span> <span style="color:#D69D85;">&#39;string&#39;</span>
            <span style="color:#569CD6;">WHEN</span> 239 <span style="color:#569CD6;">THEN</span> <span style="color:#D69D85;">&#39;string&#39;</span>
            <span style="color:#569CD6;">WHEN</span> 241 <span style="color:#569CD6;">THEN</span> <span style="color:#D69D85;">&#39;XElement&#39;</span>
            <span style="color:#569CD6;">ELSE</span> <span style="color:#D69D85;">&#39;TODO(&#39;</span> + <span style="color:#FF00FF;">CAST</span>(@typeId <span style="color:#569CD6;">AS</span> <span style="color:#569CD6;">NVARCHAR</span>) + <span style="color:#D69D85;">&#39;)&#39;</span>
        <span style="color:#569CD6;">END</span>;
        <span style="color:#569CD6;">IF</span> @isNullable = 1 <span style="color:#569CD6;">AND</span> @typeId != 231 <span style="color:#569CD6;">AND</span> @typeId != 239 <span style="color:#569CD6;">AND</span> @typeId != 241 <span style="color:#569CD6;">AND</span> @typeId != 167 <span style="color:#569CD6;">AND</span> @typeId != 175
            <span style="color:#569CD6;">SET</span> @typeName = @typeName + <span style="color:#D69D85;">&#39;?&#39;</span>
        <span style="color:#569CD6;">PRINT</span> <span style="color:#D69D85;">&#39;        public &#39;</span> + @typeName + <span style="color:#D69D85;">&#39; &#39;</span> + @name + <span style="color:#D69D85;">&#39; { get; set; }&#39;</span>
        <span style="color:#569CD6;">FETCH</span> <span style="color:#569CD6;">NEXT</span> <span style="color:#569CD6;">FROM</span> tableColumns <span style="color:#569CD6;">INTO</span> @name, @typeId, @isNullable
    <span style="color:#569CD6;">END</span>

    <span style="color:#569CD6;">PRINT</span> <span style="color:#D69D85;">&#39;    }&#39;</span>
    <span style="color:#569CD6;">PRINT</span> <span style="color:#D69D85;">&#39;&#39;</span>

    <span style="color:#569CD6;">CLOSE</span> tableColumns
    <span style="color:#569CD6;">DEALLOCATE</span> tableColumns
    <span style="color:#569CD6;">FETCH</span> <span style="color:#569CD6;">NEXT</span> <span style="color:#569CD6;">FROM</span> CLASS_NAME <span style="color:#569CD6;">INTO</span> @className
<span style="color:#569CD6;">END</span>
<span style="color:#569CD6;">CLOSE</span> CLASS_NAME
<span style="color:#569CD6;">DEALLOCATE</span> CLASS_NAME

<span style="color:#569CD6;">PRINT</span> <span style="color:#D69D85;">&#39;}&#39;</span>
</pre></div>
<p>Unfortunately it is not generating any foreign keys for tables. So you have to add them using partial class if needed.
So current sample will generate a model with 3 entities.</p>
<p>Thanks.</p>

"""""
),
            ["""2018-01-20-Install-docker-on-raspberry-PI"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Install docker on raspberry PI
""""",
["""date"""] =
"""""
 2018-01-20
""""",
["""tags"""] =
"""""
 docker
""""",
["""categories"""] =
"""""
 administration
""""",
 },
"""""
<p>Need to run the next command:</p>
<pre><code class="language-bat">curl -sSL https://get.docker.com | sh
</code></pre>
<p>After installation need to execute <code>sudo usermod -aG docker $USER</code> and relogin.</p>

"""""
),
            ["""2018-01-24-exRS-tool-for-SSRS-reports"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 exRS tool to deploy SSRS reports and subscriptions
""""",
["""date"""] =
"""""
 2018-01-24
""""",
["""tags"""] =
"""""
 dotnet ssrs mssql
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<p>There is a nice tool to deploy reports and/or subscription to SSRS - <a href="https://docs.microsoft.com/en-us/sql/reporting-services/tools/rs-exe-utility-ssrs">RS tool</a>. And I described a way to use this tool [here]({% post_url 2017-09-19-Auto-deployment-for-SSRS-reports %}).</p>
<p>But it is not so easy to support VB scripts, so there is a new tool <a href="https://github.com/eapyl/exRS">exRS</a>. This tool helps to deploy reports and create subscriptions for reports.</p>
<p>Currently there is a small console application with name exRSConsole.</p>
<blockquote>
<p>To deploy sample Report1 report and it's subscription from Report1.xml:
exRSConsole.exe -n Report1 -p SampleReport -r -s</p>
</blockquote>
<p>Also this tool allows to delete all folders at SSRS server:</p>
<blockquote>
<p>exRSConsole.exe -d</p>
</blockquote>
<p>And backup all existing reports to local folder:</p>
<blockquote>
<p>exRSConsole.exe -b</p>
</blockquote>
<p>To configure exRS you need to change configuration file:</p>
<pre><code class="language-bat">&lt;applicationSettings&gt;
    &lt;exRS.Properties.Settings&gt;
        &lt;!-- URI of SSRS server --&gt;
        &lt;setting name=&quot;exRS_SSRSService_ReportingService2010&quot; serializeAs=&quot;String&quot;&gt;
            &lt;value&gt;http://desktop-name:80/ReportServer/ReportService2010.asmx&lt;/value&gt;
        &lt;/setting&gt;
    &lt;/exRS.Properties.Settings&gt;
&lt;/applicationSettings&gt;
&lt;userSettings&gt;
    &lt;exRS.Properties.Settings&gt;
        &lt;!-- a user to connect to SSRS server --&gt;
        &lt;setting name=&quot;SSRSUser&quot; serializeAs=&quot;String&quot;&gt;
            &lt;value&gt;desktop-name\user&lt;/value&gt;
        &lt;/setting&gt;
        &lt;!-- a password to connect to SSRS server --&gt;
        &lt;setting name=&quot;SSRSPassword&quot; serializeAs=&quot;String&quot;&gt;
            &lt;value&gt;&lt;/value&gt;
        &lt;/setting&gt;
        &lt;!-- a path to folder where put reports and subscriptions during backup process --&gt;
        &lt;setting name=&quot;backupPath&quot; serializeAs=&quot;String&quot;&gt;
            &lt;value&gt;C:\Temp&lt;/value&gt;
        &lt;/setting&gt;
        &lt;!-- a name of folder with subscription configuration for reports (near exRSConsole.exe) --&gt;
        &lt;setting name=&quot;subscriptionSettingsFolder&quot; serializeAs=&quot;String&quot;&gt;
            &lt;value&gt;Subscriptions&lt;/value&gt;
        &lt;/setting&gt;
        &lt;!-- a user name to connect to DB for data sources --&gt;
        &lt;setting name=&quot;dbUserForDataSource&quot; serializeAs=&quot;String&quot;&gt;
            &lt;value&gt;test&lt;/value&gt;
        &lt;/setting&gt;
        &lt;!-- a password name to connect to DB for data sources --&gt;
        &lt;setting name=&quot;dbPasswordForDataSource&quot; serializeAs=&quot;String&quot;&gt;
            &lt;value&gt;test&lt;/value&gt;
        &lt;/setting&gt;
        &lt;!-- a path at SSRS server where put reports created by subscription --&gt;
        &lt;setting name=&quot;subscriptionFileSharePath&quot; serializeAs=&quot;String&quot;&gt;
            &lt;value&gt;\\DESKTOP-NAME\Temp&lt;/value&gt;
        &lt;/setting&gt;
        &lt;!-- a name of folder with reports (*.rdl, *rds and *.rsd files) (near exRSConsole.exe) --&gt;
        &lt;setting name=&quot;sourceFolderPath&quot; serializeAs=&quot;String&quot;&gt;
            &lt;value&gt;.\Reports&lt;/value&gt;
        &lt;/setting&gt;
        &lt;!-- a name of folder at SSRS server with data sources --&gt;
        &lt;setting name=&quot;datasourcesServerFolderName&quot; serializeAs=&quot;String&quot;&gt;
            &lt;value&gt;Data Sources&lt;/value&gt;
        &lt;/setting&gt;
        &lt;!-- a name of folder at SSRS server with datasets--&gt;
        &lt;setting name=&quot;datasetsServerFolderName&quot; serializeAs=&quot;String&quot;&gt;
            &lt;value&gt;Datasets&lt;/value&gt;
        &lt;/setting&gt;
    &lt;/exRS.Properties.Settings&gt;
&lt;/userSettings&gt;
</code></pre>
<p>After deployment you should see 3 folders in SSRS: &quot;Data Sources&quot;, &quot;Datasets&quot; and &quot;SampleReport&quot;.
Please find the source code <a href="https://github.com/eapyl/exRS">here</a>.</p>
<p>Thanks.</p>

"""""
),
            ["""2018-04-02-Radio-on-Windows-IOT-via-Telegram"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Radio on Windows IOT via Telegram Bot
""""",
["""date"""] =
"""""
 2018-04-02
""""",
["""tags"""] =
"""""
 dotnet
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<h1 id="radio-on-windows-iot-via-telegram-bot">Radio on Windows IOT via Telegram Bot</h1>
<p>This article describes and share a source code of application to play radio using Windows IOT. It is possible to control application using Telegram Bot.</p>
<p>Resources:</p>
<ol>
<li>Rasperry PI 3 with installed Windows IOT;</li>
<li>Portable <a href="https://www.amazon.com/JBL-JBLCHARGE3BLKAM-Waterproof-Portable-Bluetooth/dp/B01F24RHF4?psc=1&amp;SubscriptionId=AKIAILSHYYTFIVPWUY6Q&amp;tag=duckduckgo-d-20&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=B01F24RHF4">JBL Charge 3</a>;</li>
</ol>
<p>Developed radio application is <a href="https://docs.microsoft.com/en-us/windows/iot-core/develop-your-app/backgroundapplications">background application</a>. It consists from 2 parts:</p>
<ol>
<li><a href="https://github.com/TelegramBots/telegram.bot">Telegram Bot</a> to control radio. Supported commands:</li>
</ol>
<ul>
<li><code>/start</code> is to start play;</li>
<li><code>/stop</code> is to stop application;</li>
<li><code>/pause</code> is to pause playing;</li>
<li><code>/stations</code> is to show list of radio stations;</li>
<li><code>/up</code> is to increase volume;</li>
<li><code>/down</code> is to decrease volume;</li>
</ul>
<ol start="2">
<li>Radio player is to play radio. It based on <a href="https://github.com/gloveboxes/Windows-IoT-Core-Ignite">Windows-IoT-Core-Ignite</a>.</li>
</ol>
<p>Example of the bot in Telegram:
<img src="./images/radio_bot.png" alt="image" /></p>
<p>The source code is on <a href="https://github.com/eapyl/WinIOTRadio">GitHub</a>.</p>
<p>Thanks.</p>

"""""
),
            ["""2018-04-23-SD-card-Raspbian"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Prepare SD card for Raspbian
""""",
["""date"""] =
"""""
 2018-04-23
""""",
["""tags"""] =
"""""
 raspberrypi
""""",
["""categories"""] =
"""""
 iot
""""",
 },
"""""
<p>Steps:</p>
<ol>
<li>Download lates version of OS from <a href="https://www.raspberrypi.org/downloads/raspbian/">here</a>;</li>
<li>Follow instructions from <a href="https://www.raspberrypi.org/documentation/installation/installing-images/README.md">here</a>.</li>
<li>To enable ssh need to create empty <code>/boot/ssh</code> file;</li>
<li>To turn on WiFi need to create <code>/boot/wpa_supplicant.conf</code>:</li>
</ol>
<pre><code class="language-bat">ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
update_config=1
country=AU

network={
    ssid=&quot;ESSID&quot;
    psk=&quot;Your_wifi_password&quot;
}
</code></pre>
<ol start="5">
<li>Put SD card to Raspberry Pi.</li>
</ol>
<p>Thanks.</p>

"""""
),
            ["""2018-09-09-Help-to-your-eyes"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Help to your eyes
""""",
["""date"""] =
"""""
 2018-09-09
""""",
["""categories"""] =
"""""
 health
""""",
 },
"""""
<p><strong>When you are travelling (in car, train and etc)</strong> - let the world to swim in front of you, do not &quot;jump eyes&quot; from one object to another and &quot;cling to look.&quot;</p>
<p><strong>When watching TV</strong> glance over the surface of the screen periodically, as if you are looking out the window and look at the screen glass.</p>
<p><strong>Closing</strong> eyes for 3-5 seconds and easy fast twinkle are improving blood circulation.</p>
<p>It is <strong>useful to look at the flame of a burning candle</strong> - up to 15 minutes.</p>
<p>It would be good to <strong>get enough sleep</strong>!</p>
<p>You should take small breaks as often as possible when working at computer or with papers. During the pause you can do a little gymnastics for the eyes:</p>
<p><img src="./images/Eyes.png" alt="image" /></p>
<p><em>Each exercise is performed 5-10 times in each direction, 1-2 times a day</em></p>
<p>Thanks.</p>

"""""
),
            ["""2018-09-10-Data-models-and-query-languages"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Data models and query languages
""""",
["""date"""] =
"""""
 2018-09-10
""""",
["""tags"""] =
"""""
 ["high-load"]
""""",
["""categories"""] =
"""""
 ["learning"]
""""",
 },
"""""
<p>Initially, data models can be represented as one big tree, but it will not be suitable for <code>many-to-many</code> relationships.
RDS can be used to cover such scenarios.</p>
<p>Moreover, there are NoSQL data models:</p>
<ol>
<li>Document-based where data is represented by a set of documents and there aren't a lot of connections between them.</li>
<li>Graph-based where a lot of connections between data nodes.</li>
</ol>
<p>NoSQL data models don't have a mandatory schema for saving data. But it means that such schema will be represented in the code of as application that is reading this data.</p>
<p>Each data model has it's own query language or framework, e.g. SQL, MapReduce, Cypher, SPARQL, Datalog, aggregation in MongoDB.</p>

"""""
),
            ["""2018-09-15-Wait-for-it"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 How to use wait-for-it with docker compose
""""",
["""date"""] =
"""""
 2018-09-15
""""",
["""tags"""] =
"""""
 docker
""""",
["""categories"""] =
"""""
 deployment
""""",
 },
"""""
<p>There is a possibility to control startup order in Compose using great script - <a href="https://github.com/vishnubob/wait-for-it">wait-for-it</a>.
It allows you to wait some docker containers which have long-running initialization process like databases.</p>
<p>And there is step-by-step explanation how to use it:</p>
<ol>
<li>Copy <a href="https://github.com/vishnubob/wait-for-it/blob/master/wait-for-it.sh">wait-for-it.sh</a> to your project</li>
</ol>
<p><img src="./images/service-project.png" alt="image" /></p>
<ol start="2">
<li>Copy it to your docker image</li>
</ol>
<pre><code class="language-toml">FROM ...
...
COPY wait-for-it.sh .
...
CMD ...
</code></pre>
<ol start="3">
<li>Modify docker-compose.yml to call wait-for-it script:</li>
</ol>
<pre><code class="language-toml">service:
    image: service:latest
    expose:
        - &quot;80&quot;
    depends_on:
        - database
    command: [&quot;./wait-for-it.sh&quot;, &quot;database:3306&quot;, &quot;--timeout=360&quot;, &quot;--&quot;, &quot;command&quot;]
</code></pre>
<p>where
- <code>command</code> is a command which will be called by wait-for-it script after timeout or successful ping result to database:3306</p>
<p>Thanks.</p>

"""""
),
            ["""2018-09-20-Radio"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Dotnet global tool, radio player
""""",
["""date"""] =
"""""
 2018-09-20
""""",
["""tags"""] =
"""""
 dotnet
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<p>Do you like listen radio? Have you installed dotnet core locally? So there is a nice dotnet tool &quot;plr&quot; to listen radio!</p>
<p>To install:</p>
<pre><code class="language-bat">dotnet tool install --global plr
</code></pre>
<p>Listen</p>
<ul>
<li>using powershell:</li>
</ul>
<pre><code class="language-bat">start radio
</code></pre>
<ul>
<li>using cmd</li>
</ul>
<pre><code class="language-bat">radio
</code></pre>
<p>Common way to start listening the first radio from the list:</p>
<pre><code class="language-bat">-l
-p 1
</code></pre>
<p>To see supported commands:</p>
<pre><code class="language-bat">-h
--help
</code></pre>
<p>Example:</p>
<p><img src="./images/cross-radio-exampe.png" alt="image" /></p>
<p><a href="https://github.com/eapyl/crossRadio">The source code</a> is on GitHub.</p>
<p><a href="https://github.com/eapyl/radio-stations/blob/master/db.json">All descriptions of stations</a> are hosted at GitHub.</p>
<p>List task is <a href="https://github.com/eapyl/crossRadio/blob/master/todo">todo</a>.</p>
<p>Thanks.</p>

"""""
),
            ["""2018-09-20-Replication"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Replication
""""",
["""date"""] =
"""""
 2018-09-20
""""",
["""tags"""] =
"""""
 ["high-load"]
""""",
["""categories"""] =
"""""
 ["learning"]
""""",
 },
"""""
<p>Replication is used for the following purposes:</p>
<ul>
<li><p>High availability, so the system will keep working even some of the servers will break down.</p>
</li>
<li><p>Offline work, so the application is working without an internet connection.</p>
</li>
<li><p>Latency, so the data of the application is located near consumers.</p>
</li>
<li><p>Scaling, e.g. allowing to process the huge number of reading operations via sharing the load via replicas.</p>
</li>
</ul>
<p>It is required to take care of concurrent access and failovers while using replication. Moreover, need to plan the process of recovering the system after failovers (e.g. breaking network connections, crashed system nodes, damaged data).</p>
<p>There are three types of replication:</p>
<ul>
<li><p>Replication with one master node. Clients send all write operations to one master node, which shares changes with other slaves nodes. Read operations can be done via slave nodes, but the data on them can be outdated.</p>
</li>
<li><p>Replication with more than one master node. Clients send write operations to one of the master nodes. Master nodes can send data to other master nodes and slaves nodes.</p>
</li>
<li><p>Replication without master node. Clients send write operations to one of the nodes and read data from more than one node to discover nodes with outdated data and update it.</p>
</li>
</ul>
<p>Replication with one master is more widespread due to its simplicity and lack of the need for conflict resolution. Other methods are more resistant to node failures, sudden issues in latency, but they are more complex and provide weak guarantees of consistency.</p>
<p>Replication can be synchronous and asynchronous, and it affects the behavior of the system in case of failure. Even the synchronous replication can be executed more quickly in general, but it will bring additional issues in case of nodes crashes. E.g., there is a probability of losing recently captured data if the master node will fail.</p>
<p>There are a couple of consistency models useful for solving issues with replication delaying:</p>
<ul>
<li><p>Read-after-write consistency. Users should always see the data that they sent to the database.</p>
</li>
<li><p>Monotonous reading. After the user has seen the data at any point in time, he should not later see the same data as at an earlier point in time.</p>
</li>
<li><p>Consistent prefix read. Users should see the data in a state that does not violate causation, for example, see the question and the answer in the correct order.</p>
</li>
</ul>
<p>Some algorithms allow to check whether one operation happened before another, or they happened competitively (which can be used in databases).</p>
<p>Also, there are methods of resolving conflicts by merging competitive updates.</p>

"""""
),
            ["""2019-04-15-Permanently-save-environment-variables"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Permanently save environment variables
""""",
["""date"""] =
"""""
 2019-04-15
""""",
["""tags"""] =
"""""
 linux
""""",
["""categories"""] =
"""""
 administration
""""",
 },
"""""
<p>Environment variables are only stored temporally if you are setting them using terminal:</p>
<pre><code class="language-bash">export TEST=/home/test/
</code></pre>
<p>To save this variable for all users, need to add this command to <code>/etc/profile</code>. If you want to have this environment variable only for current user, it is needed to add this command to <code>~/.profile</code>.</p>
<p>Thanks.</p>

"""""
),
            ["""2019-08-01-New-Project"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 New project
""""",
["""date"""] =
"""""
 2019-08-01
""""",
["""categories"""] =
"""""
 documentation
""""",
 },
"""""
<p>Joining a new project is always stressful and not easy. As a new joiner, it is needed to learn a lot of information about the project: how it works, it's main functionality, how to build it, monitor, how to make changes and run tests, how to run the product locally and so on. Unfortunately, there isn't always good documentation which covers all these details, so you have to be prepared to learn and get all the details by yourself.</p>
<p>This article is to help a newcomer to understand the project and learn it. It describes the main steps and points, which can be used to getting knowledge about a project. Additionally, it can help to improve existing documentation of the project to fill gaps in the knowledge base.</p>
<h1 id="introduction">Introduction</h1>
<h2 id="new-team-and-who-is-responsible-for-what">New team and who is responsible for what</h2>
<p>The project is not able to evolve without people who are working on it. So it is quite important to know the whole team and who is responsible for what. Using this information it will be much easy to identify the right person who should be asked about questions or some particular point.</p>
<p>All teams are different, but there are usually the next roles:</p>
<ul>
<li>Research &amp; Development team - a team which works on developing, writing code, adding new features to the product;</li>
<li>Technical lead or architect - a person who is responsible for most important technical decisions in the project;z</li>
<li>Project manager - a person who is responsible for the project, its timeline and teams which works on the product;</li>
<li>QA team - quality assurance team or testers, who works on testing the product;</li>
<li>Product owner or business representative - a person who knows business requirements of the product, how the product makes money and how to improve the product to make it more profitable;</li>
<li>Release manager - a person who is responsible for release process of the product, usually only this person can change the production environment;</li>
<li>DevOps member - a person who is responsible to automate the process of building, releasing of the product or any other repetitive task (e.g. CI/CD), additionally this person is responsible for non-prod environments (installing the product on it)</li>
<li>SaaSOps member - a person who is supporting a product in the production, this person is responsible for SLA of a product, makes RCA (root cause analyses) of any issue in the production, sets up monitoring for a product and check logs from it.</li>
</ul>
<p>Some of these roles can be covered by one person or a dedicated team.</p>
<h1 id="product-overview">Product overview</h1>
<p>It is important to see the goal of the product, why it exists and what types of problems it solves. Besides, it is great to understand what market/niche the product suite covers. It will allow understanding the project, some decisions what made earlier and future tasks better. Moreover, significant competitors should be pointed to see the difference between our product and theirs.</p>
<p>The type of the product should be described (web service, PLM solution, ERP solution and so on) which will uncover the nature of the product. It worths to read the history of the product if it exists.</p>
<p>Last 2-3 releases should be checked and the list of released features, fixes should be scanned for better understanding last changes in the product and what potentially will bring a new type of bugs.</p>
<p>List of topics:</p>
<ul>
<li>Type of the product</li>
<li>Goal of the product</li>
<li>Market of the product</li>
<li>History of the product</li>
<li>Main competitors</li>
<li>Recent releases</li>
</ul>
<h2 id="key-product-objectives-and-capabilities">Key product objectives and capabilities</h2>
<p>This chapter should try to answer the questions why the product exists and how it helps customers to solve their problems. Usually, it allows to understand the main interface of the product, which clients work with. Additionally, it shows which functions the product suite performs. It worths to check the demo of the product which is usually showed to potential customers.</p>
<p>Moreover, it will be great to have a list of a specific customer or consumer, business needs which are being satisfied. A list of differences from other similar solutions and what the product is doing which distinguish it from them should be prepared.</p>
<p>Also, the list of direct competitors or other players in the same market, a niche of the market should be discovered and their products should be investigated more closely.</p>
<h2 id="key-customers">Key customers</h2>
<p>Knowing the main customers and how they are using the product allows to understand what are the main workflows and features of the product.</p>
<p>So the next question should be answered:</p>
<ul>
<li>Which is the top 5-10 customer?</li>
<li>Why are they using the product and not using competitor's product A, B, C?</li>
<li>How are they using it? What is their main workflow?</li>
<li>What are the most important features that customers use?</li>
<li>How is all information about customer's usage collected?</li>
</ul>
<h2 id="architecture">Architecture</h2>
<p>This part is quite complex and comprehensive. But it will be great to have any type of diagrams or descriptions of how the whole application is working, how it is connected with other external systems or internally. Additionally, the list of application/system components can be covered in this section and how they depend on each other. All technical details about the application/system should be described here.</p>
<p>There are a couple of ways to understand application architecture. Using any of it or combination will be valuable.</p>
<p>Consider checking <a href="https://c4model.com/">C4 Model</a> to see examples of diagrams.</p>
<p>There is a also a great article <a href="https://herbertograca.com/2019/08/12/documenting-software-architecture/">Documenting software architecture</a> about this topic.</p>
<h3 id="applications-overview-level-1-system-context">Applications overview (Level 1: System Context)</h3>
<p>It is important to understand how a customer or user sees the application or product. So the description of all different solutions and/or applications which are available in the product can be covered in this chapter. All descriptions should be done from a customer's perspective without any technical details.</p>
<h3 id="product-implementation-level-2-containers">Product implementation (Level 2: ContainerS)</h3>
<p>It is important to have an information in general about how the product/application depends on the infrastructure. This section should include all special requirements to infrastructure so the application will work on it well.</p>
<p>Describe how the product is instantiated across the servers, networks and other IT resources that allow the product to function.</p>
<p>Describe the cloud services that are used for the product and how they are used.</p>
<h3 id="product-components-level-3-component">Product components (Level 3: Component)</h3>
<p>When you are joining a project, you are starting to take tasks that are related to a specific component(s) of the system. So this paragraph covers a description of components, one by one, as it is a completely independent product. It is almost impossible to finish this part as it will grow as you are learning a new project and application/system.</p>
<p>This chapter should include the summary of the languages and technologies used for each of the components in the application/product suite. Also there can be a description of frameworks and libraries which are used in the each component.</p>
<p>List all open-source, non open-source or 3rd-party services, components which the product embeds, uses or that are instantiated. Also capture any insights about why these particular frameworks, components and services were used.</p>
<p>Describe how all the components, 3rd-party and cloud services that were previously mentioned are deployed on the production infrastructure, how they connect and how they interact to deliver the product’s capabilities.</p>
<p>So each of the components that make up the product should be described here.</p>
<h3 id="data-model-and-storage">Data model and storage</h3>
<p>This chapter should include a description of any data which is used inside the application/system. What types of data is used and how it is used by a different part of the application. Also, this paragraph should cover what kinds of data exist, and where they are stored.</p>
<h3 id="security">Security</h3>
<p>The processes of authentication and authorization should be described and the whole data flow related to this process. Consider collect and understand where different types of credentials are saved and how they are delivered to the client/customer and spread along different part of the product. What is a retention policy of them and how to rotate such type of information?</p>
<h3 id="playground-infrastructure">Playground Infrastructure</h3>
<p>It is almost always mandatory for a developer to have a playground environment to play/test/run changes that he is doing in the product. This chapter should cover the minimal valuable infrastructure that can be used for such purposes.
Ideally, it should be one script that allows to install all required components to run the product (and, in addition, it will be great to have a workflow which builds the source code, package it and run it in the playground environment).</p>
<h2 id="use-cases">Use Cases</h2>
<p>This chapter should cover all the customer and operations scenarios that define the product and its usage, especially those that have or could have an impact on operations. It is basically a list of all the test scenarios to validate that the product is functioning as it should and all the places where synthetic monitoring is required. It is not needed to describe what is going on at code level, the goal is to understand the process what is behind of this use case and provide a start point for root case analyses. The set of scenarios should cover all customer end-points.</p>
<p>Each use case description should cover the following topics:</p>
<h3 id="business-requirement">Business Requirement</h3>
<p>This paragraph contains description of the use case purpose. It covers and describes the behinds why it is important to have the particular functionality or feature from business perspective. Consider describing the value added to end user or customer.</p>
<h3 id="customer-view">Customer View</h3>
<p>This part of the document describes the workflow of the use case from user perspective, it should cover the following topics:</p>
<ul>
<li>how to initiate the use case using the product</li>
<li>how to observe and check results of the use case via application interface.</li>
</ul>
<p>Ideally it should contain a list of sequential commands that can be executed by end user and mapped to a function test.</p>
<h3 id="data-flow">Data Flow</h3>
<p>This paragraph contains information about data flows besides the use case, which components/services are used. Any type of diagrams, like a call sequence diagram, can be added here and will be useful.</p>
<h3 id="common-incidents">Common Incidents</h3>
<p>This paragraph contains the list of the most frequent types of incidents related to this customer scenario. It can just contain a set of notes or records that might be helpful during troubleshooting of the issue related to the used case. Any of the following entities can be added here:</p>
<ul>
<li>concerns</li>
<li>recommendations</li>
<li>playbooks</li>
<li>runbooks</li>
</ul>
<h2 id="limitations-problems">Limitations &amp; Problems</h2>
<p>The best way to know the product it is to know its problems. So knowing high-level weaknesses of the product's architecture and implementation helps a lot with it. All components that incur operation cost should be covered by this chapter. Additionally, all recurring problems should be mentioned.</p>
<h1 id="improvement-plans">Improvement plans</h1>
<h2 id="current-ideal-end-state">Current ideal end-state</h2>
<p>The ideal end-state of the current view of the product should be described here. It will be required to talk with different members of the team or even different departments if there is no any documented information about this topic. Consider collection as much information as possible. There are many sides of the product and its ideal end-state:</p>
<ul>
<li>number of members in different teams</li>
<li>number of customers</li>
<li>functionality in the ideal end-state product</li>
<li>non-functional points (e.g CI/CD, logs, alarms, HA, performance)</li>
</ul>
<p>The following topics should be covered in more details if possible:</p>
<h3 id="complexity-reduction">Complexity reduction</h3>
<p>The list of all the things that should be done to reduce operational complexity, e.g.</p>
<ul>
<li>improved automation</li>
<li>automated deployment</li>
<li>component consolidation</li>
<li>component elimination</li>
</ul>
<h3 id="cost-reduction">Cost reduction</h3>
<p>The list of all the things that should be done to the product to reduce operational costs, e.g.</p>
<ul>
<li>improved automation</li>
<li>component consolidation</li>
<li>component elimination</li>
<li>replacing services</li>
</ul>
<h3 id="performance-improvement">Performance improvement</h3>
<p>The list of all the things that should be done to the product to improve scalability, resilience, uptime.</p>
<h1 id="operational-overview">Operational overview</h1>
<p>General overview of activities that are related to non-functional requirements.</p>
<ol>
<li>Deployment strategy - an overview of how the product is installed or deployed into production and how it is provisioned and configured;</li>
<li>Testing strategy - an overview of how to check CI/CD, smoke and functional testing results, how to validate that a deployment was successful;</li>
<li>Monitoring strategy - an overview of how to monitor the existing infrastructure, e.g. check logs, APM;</li>
<li>SLA, uptime SLO and any maintenance window considerations;</li>
<li>Disaster recovery and business continuity - an overview of how approach to DR, backup, restore and data retention;</li>
<li>High availability and scalability - an overview of redundancy, load balancing, database replication, etc;</li>
<li>Automated and manual OAM activities (Operations, Administration and Management) - the list of all repetitive jobs that are performed automatically or need to be performed manually, e.g disk or database clean up etc;</li>
<li>Troubleshooting tools and approaches</li>
<li>Incidents analysis - an overview of the last issues and incidents with the product and RCS of them (<a href="https://en.wikipedia.org/wiki/Five_whys">5 whys</a>)</li>
</ol>
<h1 id="references">References</h1>
<ul>
<li><a href="https://herbertograca.com/2019/08/12/documenting-software-architecture/">Documenting Software Architecture</a></li>
<li><a href="https://12factor.net/">The Twelve-Factor App</a></li>
<li><a href="https://en.wikipedia.org/wiki/Five_whys">Five whys</a></li>
</ul>

"""""
),
            ["""2021-07-16-Link-opener-Smart-TV(Tizen)"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Smart TV (Tizen) Link opener
""""",
["""date"""] =
"""""
 2021-07-16
""""",
["""categories"""] =
"""""
 documentation
""""",
 },
"""""
<h1 id="introduction">Introduction</h1>
<p>Simple Tizen Smart TV Xamarin Form .NET application to receive http links via HTTP PUT, open them into a browser.</p>
<h2 id="requirements">Requirements</h2>
<h1 id="install-tizen.net">Install Tizen .Net</h1>
<p>Download and install <a href="https://download.tizen.org/sdk/Installer/Latest/">Tizen SDK</a></p>
<h1 id="visual-studio-code">Visual Studio Code</h1>
<p>Check and install <a href="https://docs.tizen.org/application/vscode-ext/dotnet/">extension</a></p>
<h1 id="developer-mode-on-smart-tv">Developer mode on Smart TV</h1>
<p>Open Apps and enter '12345'. Enable developer mode and enter the ip address of your developer machine (that will be used to deliver installation package to TV).</p>
<h2 id="application">Application</h2>
<h1 id="template">Template</h1>
<p><code>dotnet tizen new Tizen.NET.Template55.Cross.NETStandard -v tizen-5.5</code> to create Xamarin.Forms application. Remove all projects which are not connected to TV.</p>
<h1 id="add-smart-tv-device">Add smart TV device</h1>
<p>Run the following command in <code>C:\tizen-studio\tools</code>:</p>
<pre><code>.\sdb.exe connect 192.168.1.4
</code></pre>
<p>where <code>192.168.1.4</code> is IP of smart TV device</p>
<h1 id="test">Test</h1>
<p>Check that <code>C:\tizen-studio\tools\ide\bin</code> is in Path of environment settings.</p>
<p>Build the project by <code>tizen build-cs</code> and run <code>tizen install -n &lt;path-to-tpk&gt;</code> where <code>&lt;path-to-tpk&gt;</code> is showed during the building.</p>
<p>The installation of an application should be started.</p>
<h1 id="link-opener">Link opener</h1>
<p>Add permission to <code>tizen-manifest.xml</code> to allow launching external application.</p>
<pre><code>  &lt;privileges&gt;
    &lt;privilege&gt;http://tizen.org/privilege/appmanager.launch&lt;/privilege&gt;
  &lt;/privileges&gt;
</code></pre>
<p>The code to open a link into a browser</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
Tizen.Applications.AppControl.SendLaunchRequest(<span style="color:#569CD6;">new</span> Tizen.Applications.AppControl
{
    Operation = Tizen.Applications.AppControlOperations.View,
    Uri = link,
    LaunchMode = Tizen.Applications.AppControlLaunchMode.Single
});
</pre></div><h1 id="summary">Summary</h1>
<p><a href="https://github.com/ypyl/smart-tv-link-opener">Repository link</a></p>

"""""
),
            ["""2021-07-20-Managing-statements"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Managing statements
""""",
["""date"""] =
"""""
 2021-07-20
""""",
["""categories"""] =
"""""
 managing short statement
""""",
 },
"""""
<ul>
<li>Listen, understand, and then ask, advise and correct if required.</li>
<li>Adapt your behavior and skills based on project, team, and environment.</li>
<li>Preserve the passion for what you are doing.</li>
<li>Make meetings effective not spectacular.</li>
<li>Organize yourself enough and reasonably.</li>
<li>Believe in expectations only if you can inspect them.</li>
<li>Architecture is more important than technology.</li>
<li>Purity has the same importance as practicality.</li>
<li>Delegate, document, measure.</li>
<li>Do a retrospective to find weaknesses.</li>
<li>Your goal is making money for a company, but a customer is the first.</li>
<li>Prioritize tasks based on the main goal: deliver your promise.</li>
<li>Focus on what you are doing and deflect distractions.</li>
<li>Transfer information into a knowledge base.</li>
<li>Work alone when required, work within a team when it is necessary.</li>
<li>Use the right tools.</li>
<li>Daily check-in: what was done yesterday, what will be done tomorrow, what are the current issues.</li>
<li>Do not forget to make a follow-up action list at the end of a meeting.</li>
<li>Have agenda for a meeting.</li>
<li>A good architecture allows to change and replace parts of a product easily.</li>
<li>High cohesion and low coupling.</li>
<li>You can not fix other people, but you can try to understand.</li>
<li>Understand, communicate, delegate, monitor, participate.</li>
<li>Know your limits.</li>
<li>Experiment with new technologies and approaches.</li>
<li>Respect the time.</li>
<li>Expect unexpected.</li>
<li>Remember: you are alone in the end.</li>
</ul>

"""""
),
            ["""2021-08-17-Dynamic-Programming-Notes"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Dynamic programming
""""",
["""date"""] =
"""""
 2021-08-17
""""",
["""categories"""] =
"""""
 dynamic programming
""""",
 },
"""""
<h1 id="dynamic-programming">Dynamic programming</h1>
<p>There are two main strategies to apply:</p>
<ul>
<li>memorization</li>
<li>tabulation</li>
</ul>
<h2 id="memorization">Memorization</h2>
<p>All type of dynamic programs should be able to solve using recursion. Memorization technic just allows to make the simple straight solution more efficient by saving and reusing already calculated values on previous step of recursion. It means memorization dictionary should be added to the solution.</p>
<h2 id="tabulation">Tabulation</h2>
<p>The main idea is to have a table with solutions for each step of the problem starting from the obvious ones. So it is required to fill the table with initial results (e.g. fibonacci values for 1 and 2), and later reuse these results by calculating more complex high-level sub-tasks.</p>
<p><a href="https://www.freecodecamp.org/news/learn-dynamic-programing-to-solve-coding-challenges/">More information</a></p>

"""""
),
            ["""2021-10-08-Backtracking-Problem"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Backtracking problem
""""",
["""date"""] =
"""""
 2021-10-08
""""",
["""categories"""] =
"""""
 backtracking programming
""""",
 },
"""""
<h1 id="backtracking">Backtracking</h1>
<p>It is an algorithmic technique that is often used to solve complicated coding problems. It considers searching in every possible combination for solving a computational problem.</p>
<p>There is a template that can used to understand and solve problems using backtracking.</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">def</span> is_valid_state(state):
    <span style="color:#57A64A;"># check if it is a valid solution</span>
    <span style="color:#569CD6;">return</span> <span style="color:#569CD6;">True</span>

<span style="color:#569CD6;">def</span> get_candidates(state):
    <span style="color:#569CD6;">return</span> []

<span style="color:#569CD6;">def</span> search(state, solutions):
    <span style="color:#569CD6;">if</span> is_valid_state(state):
        solutions<span style="color:#B5CEA8;">.</span>append(state<span style="color:#B5CEA8;">.</span>copy())
        <span style="color:#57A64A;"># return</span>

    <span style="color:#569CD6;">for</span> candidate <span style="color:#569CD6;">in</span> get_candidates(state):
        state<span style="color:#B5CEA8;">.</span>add(candidate)
        search(state, solutions)
        state<span style="color:#B5CEA8;">.</span>remove(candidate)

<span style="color:#569CD6;">def</span> solve():
    solutions = []
    state = <span>set</span>()
    search(state, solutions)
    <span style="color:#569CD6;">return</span> solutions
</pre></div>
<ul>
<li><code>is_valid_state</code> checks if the current state is valid and should be remembered as valid case.</li>
<li><code>get_candidates</code> provides a list of all possible candidates satisfying the problem constraints based on our current state.</li>
<li><code>search</code> contains recursion and aggregate valid states.</li>
<li><code>solve</code> is the entry point.</li>
</ul>
<h1 id="reference">Reference</h1>
<p><a href="https://www.freecodecamp.org/news/solve-coding-interview-backtracking-problem/">Learn How to Solve Coding Interview Backtracking Problems</a></p>

"""""
),
            ["""2021-10-26-VSC-Extension-File-Line-Link"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 VSC File Line link
""""",
["""date"""] =
"""""
 2021-10-26
""""",
["""categories"""] =
"""""
 visual studio code extension file line link programming
""""",
 },
"""""
<h1 id="visual-studio-extension-file-line-link">Visual Studio Extension - File Line link</h1>
<h2 id="start">Start</h2>
<p>To create initial structure of the project need to visit and follow instructions from <a href="https://code.visualstudio.com/api/get-started/your-first-extension">Your First Extension</a>.</p>
<h2 id="package.json">Package.json</h2>
<p>The package json nodes should be updated:</p>
<ul>
<li>publisher</li>
<li>activationEvents</li>
<li>contributes</li>
</ul>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
{
	<span style="color:#FF8700;">&quot;name&quot;</span>: <span style="color:#008B8B;">&quot;full-path&quot;</span>,
	<span style="color:#FF8700;">&quot;displayName&quot;</span>: <span style="color:#008B8B;">&quot;full-path&quot;</span>,
	<span style="color:#FF8700;">&quot;description&quot;</span>: <span style="color:#008B8B;">&quot;&quot;</span>,
	<span style="color:#FF8700;">&quot;publisher&quot;</span>: <span style="color:#008B8B;">&quot;ypyl&quot;</span>,
	<span style="color:#FF8700;">&quot;version&quot;</span>: <span style="color:#008B8B;">&quot;0.0.1&quot;</span>,
	<span style="color:#FF8700;">&quot;engines&quot;</span>: {
		<span style="color:#FF8700;">&quot;vscode&quot;</span>: <span style="color:#008B8B;">&quot;^1.56.0&quot;</span>
	},
	<span style="color:#FF8700;">&quot;categories&quot;</span>: [
		<span style="color:#008B8B;">&quot;Other&quot;</span>
	],
	<span style="color:#FF8700;">&quot;activationEvents&quot;</span>: [
		<span style="color:#008B8B;">&quot;onCommand:full-path.copy&quot;</span>
	],
	<span style="color:#FF8700;">&quot;main&quot;</span>: <span style="color:#008B8B;">&quot;./out/extension.js&quot;</span>,
	<span style="color:#FF8700;">&quot;contributes&quot;</span>: {
		<span style="color:#FF8700;">&quot;keybindings&quot;</span>: [
			{
			  <span style="color:#FF8700;">&quot;command&quot;</span>: <span style="color:#008B8B;">&quot;full-path.copy&quot;</span>,
			  <span style="color:#FF8700;">&quot;key&quot;</span>: <span style="color:#008B8B;">&quot;Alt+L&quot;</span>
			}
		],
		<span style="color:#FF8700;">&quot;commands&quot;</span>: [
			{
				<span style="color:#FF8700;">&quot;command&quot;</span>: <span style="color:#008B8B;">&quot;full-path.copy&quot;</span>,
				<span style="color:#FF8700;">&quot;title&quot;</span>: <span style="color:#008B8B;">&quot;Relative full path&quot;</span>
			}
		]
	},
	<span style="color:#FF8700;">&quot;scripts&quot;</span>: {
		<span style="color:#FF8700;">&quot;vscode:prepublish&quot;</span>: <span style="color:#008B8B;">&quot;npm run compile&quot;</span>,
		<span style="color:#FF8700;">&quot;compile&quot;</span>: <span style="color:#008B8B;">&quot;tsc -p ./&quot;</span>,
		<span style="color:#FF8700;">&quot;watch&quot;</span>: <span style="color:#008B8B;">&quot;tsc -watch -p ./&quot;</span>,
		<span style="color:#FF8700;">&quot;pretest&quot;</span>: <span style="color:#008B8B;">&quot;npm run compile &amp;&amp; npm run lint&quot;</span>,
		<span style="color:#FF8700;">&quot;lint&quot;</span>: <span style="color:#008B8B;">&quot;eslint src --ext ts&quot;</span>,
		<span style="color:#FF8700;">&quot;test&quot;</span>: <span style="color:#008B8B;">&quot;node ./out/test/runTest.js&quot;</span>
	},
	<span style="color:#FF8700;">&quot;devDependencies&quot;</span>: {
		<span style="color:#FF8700;">&quot;@types/vscode&quot;</span>: <span style="color:#008B8B;">&quot;^1.56.0&quot;</span>,
		<span style="color:#FF8700;">&quot;@types/glob&quot;</span>: <span style="color:#008B8B;">&quot;^7.1.4&quot;</span>,
		<span style="color:#FF8700;">&quot;@types/mocha&quot;</span>: <span style="color:#008B8B;">&quot;^9.0.0&quot;</span>,
		<span style="color:#FF8700;">&quot;@types/node&quot;</span>: <span style="color:#008B8B;">&quot;14.x&quot;</span>,
		<span style="color:#FF8700;">&quot;@typescript-eslint/eslint-plugin&quot;</span>: <span style="color:#008B8B;">&quot;^4.31.1&quot;</span>,
		<span style="color:#FF8700;">&quot;@typescript-eslint/parser&quot;</span>: <span style="color:#008B8B;">&quot;^4.31.1&quot;</span>,
		<span style="color:#FF8700;">&quot;eslint&quot;</span>: <span style="color:#008B8B;">&quot;^7.32.0&quot;</span>,
		<span style="color:#FF8700;">&quot;glob&quot;</span>: <span style="color:#008B8B;">&quot;^7.1.7&quot;</span>,
		<span style="color:#FF8700;">&quot;mocha&quot;</span>: <span style="color:#008B8B;">&quot;^9.1.1&quot;</span>,
		<span style="color:#FF8700;">&quot;typescript&quot;</span>: <span style="color:#008B8B;">&quot;^4.4.3&quot;</span>,
		<span style="color:#FF8700;">&quot;@vscode/test-electron&quot;</span>: <span style="color:#008B8B;">&quot;^1.6.2&quot;</span>
	}
}
</pre></div><h2 id="extension-code">Extension code</h2>
<p>The following code gets the active text editor, grabs its relative path and selected line, and combine these inputs to relative file line link, like <code>folder/subfolder/file-name.ext:line-number</code>. After this, it puts the result to the clipboard.</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">import</span> * as vscode from <span style="color:#D69D85;">&#39;vscode&#39;</span>;

<span style="color:#569CD6;">export</span> <span style="color:#569CD6;">function</span> activate(context: vscode.ExtensionContext) {
    <span style="color:#569CD6;">const</span> command = <span style="color:#D69D85;">&#39;full-path.copy&#39;</span>;

    <span style="color:#569CD6;">const</span> copyPathHandler = () =&gt; {
        <span style="color:#569CD6;">try</span> {
            <span style="color:#569CD6;">const</span> editor = vscode.window.activeTextEditor;
            <span style="color:#569CD6;">if</span> (!editor) {
                <span style="color:#569CD6;">return</span>;
            }
            <span style="color:#57A64A;">// Get absolute path</span>
            <span style="color:#569CD6;">const</span> absolutePath = editor.document.uri;
            <span style="color:#569CD6;">if</span> (!absolutePath) {
                <span style="color:#569CD6;">return</span>;
            }

            <span style="color:#569CD6;">const</span> relativePath = vscode.workspace.asRelativePath(absolutePath).replace(/\\/g, <span style="color:#D69D85;">&quot;/&quot;</span>);

            <span style="color:#57A64A;">// Get current line number</span>
            <span style="color:#569CD6;">const</span> selectedLine = editor.selection.active.line + 1;

            <span style="color:#57A64A;">// Join relative path and line numbers</span>
            <span style="color:#569CD6;">const</span> pathLine = relativePath + <span style="color:#D69D85;">&#39;:&#39;</span> + selectedLine;

            vscode.env.clipboard.writeText(pathLine);
        } <span style="color:#569CD6;">catch</span> (e) {
            vscode.window.showErrorMessage((e as Error).message);
        }
    };

    context.subscriptions.push(vscode.commands.registerCommand(command, copyPathHandler));
}

<span style="color:#57A64A;">// this method is called when your extension is deactivated</span>
<span style="color:#569CD6;">export</span> <span style="color:#569CD6;">function</span> deactivate() {}
</pre></div><h2 id="publish">Publish</h2>
<p>To publish extension need to follow instructions from <a href="https://code.visualstudio.com/api/working-with-extensions/publishing-extension">Publishing Extensions</a></p>
<h2 id="summary">Summary</h2>
<p>These simple and straightforward steps allow to create a small extension to copy the file line link to the clipboard.</p>

"""""
),
            ["""2021-11-16-Software-Architect-Notes"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Software Architect Notes
""""",
["""date"""] =
"""""
 2021-10-16
""""",
["""tags"""] =
"""""
 software architect
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<h2 id="what-is-software-architecture">What is software architecture</h2>
<p><a href="https://en.wikipedia.org/wiki/Software_architecture">Software architecture</a> is the foundation for the software system.</p>
<p>It consists of different aspects:</p>
<ul>
<li>structures and elements of a system</li>
<li>relationships between system's elements or components</li>
<li>abstractions of a system</li>
</ul>
<p>Benefits to having clean and explicit architecture:</p>
<ul>
<li>enabling and inhibiting quality attributes</li>
<li>predicting system quality</li>
<li>easing communication between all members/consumers of a system (stakeholders, owners, developers, and so on)</li>
<li>allowing to more easily make changes</li>
<li>providing a reusable model for other products</li>
<li>imposing implementation constraints</li>
<li>allowing to do cost and effort estimation</li>
<li>simplifying training for new developers</li>
</ul>
<p>Software architect main responsibilities are:</p>
<ul>
<li>technical decisions</li>
<li>architecture of a system</li>
<li>documentation</li>
<li>following and improving software architecture approaches and principles within the organization</li>
</ul>
<h2 id="software-architects-in-an-organization">Software architects in an organization</h2>
<p>Software architect means different in different companies. Some companies already have software development methodologies and it is required to follow them. So each software architect should be familiar with them. If it is allowed to select the software development methodology, software architect should be able to explain his choice.</p>
<p>Software architect has the following responsibilities within an organization:</p>
<ul>
<li>tasks estimation</li>
<li>projects planning</li>
<li>controlling and monitoring</li>
<li>communication with stakeholders and management</li>
<li>risk management</li>
<li>coordination of builds, development, and production environments</li>
<li>supporting and introducing product lines (reusable architecture components)</li>
<li>business domain understanding</li>
<li>identifying and clarifying requirements to a software system</li>
</ul>
<h2 id="domain">Domain</h2>
<p>Understanding the domain is a key part of being software architect. It is required to have general business knowledge and a good understanding of the organization's business. So it will be possible to design software architecture that solves business problems effectively.</p>
<p><a href="https://en.wikipedia.org/wiki/Domain-driven_design">DDD</a> is a proven approach to modeling the domain:</p>
<ul>
<li>creating ubiquitous language to simplify and improve communication between everyone</li>
<li>identify entities, value objects, aggregates, and root entities</li>
<li>separating domain into subdomains and creating bounded contexts</li>
</ul>
<p>Moreover, proper requirements engineering is an important part of creating a software architecture. Usually, it is not easy to get and elicit all requirements from stakeholders, but knowing requirements is crucial to designing a good solution.</p>
<h2 id="quality-attributes"><a href="https://en.wikipedia.org/wiki/List_of_system_quality_attributes">Quality attributes</a></h2>
<p>The software must match the designed quality attributes, so software architect should properly identify and specify them so they can be tested and measured.</p>
<p>There are two main types of quality attributes: functional and non-functional.</p>
<p>Some important <a href="https://en.wikipedia.org/wiki/Non-functional_requirement">non-functional attributes</a>:</p>
<ul>
<li>maintainability</li>
<li>usability</li>
<li>availability</li>
<li>portability</li>
<li>interoperability</li>
<li>testability</li>
<li>security</li>
<li>performance</li>
</ul>
<h2 id="design">Design</h2>
<p>Software architecture design is an important part of the creation of software architectures. A good design can be validated, formally documented, and used by a development team.</p>
<p>There are two (three) main approaches:</p>
<ul>
<li>top-down</li>
<li>bottom-up</li>
<li>mix of the first two approaches</li>
</ul>
<p>Architectural drivers guide the software architecture design and are inputs for the process of designing:</p>
<ul>
<li>design objectives (why the software is being designed?)</li>
<li>primary functional requirements</li>
<li>quality attributes scenarios (measurable properties of a software system)</li>
<li>constraints (properties that must be satisfied)</li>
<li>architectural concerns (interests of the software architect)</li>
</ul>
<p>The following instruments can be used to design software architecture:</p>
<ul>
<li>patterns</li>
<li>reference architectures (a template for an architecture)</li>
<li>tactics (proven techniques to achieve required quality attribute)</li>
<li>externally developed software</li>
</ul>
<p>Documentation is another important phase of designing software architecture.</p>
<p>Architecture design is an iterative process:</p>
<ul>
<li>architectural analysis</li>
<li>architectural synthesis</li>
<li>architectural evaluation (and go back to the first step if required)</li>
</ul>
<p>There are a set of architecture design processes that can be used:</p>
<ul>
<li>attribute-driven design (ADD)</li>
<li>microsoft's technique for architecture and design</li>
<li>architecture-centric design method (ACDM)</li>
<li>architecture development method (ADM)</li>
</ul>
<p>Tracking the progress of the designing process is important and can be combined with the creation of the documentation.</p>
<h2 id="principles-and-practices">Principles and practices</h2>
<p>There are some principles and practices that will help to design orthogonal system which is extendable without breaking the existing functionality:</p>
<ul>
<li>loose coupling</li>
<li>high cohesion</li>
</ul>
<p>To reduce complexity of the system the following principles can be used and followed:</p>
<ul>
<li>KISS</li>
<li>DRY</li>
<li>information hiding</li>
<li>YAGNI</li>
<li>SoC (Separation of Concerns)</li>
<li>SOLID (SRP, OCP, LSP, ISP, DIP)</li>
</ul>
<p>To improve quality of the system the following practices can be used:</p>
<ul>
<li>unit testing</li>
<li>pair programming</li>
<li>reviewing artifacts</li>
</ul>
<p>Also, software architecture patterns can be used to solve the common recurring problems.</p>
<h2 id="software-architecture-patterns">Software architecture patterns</h2>
<p><a href="https://en.wikipedia.org/wiki/Architectural_pattern">Software architecture patterns</a> provide solutions for common and recurring problems in software designing process. They give the high level structure of the system that can be understandable by other developers as such patterns are commonly used.</p>
<p>There are a lot of patterns, but the most commonly used:</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Multitier_architecture">layered architecture</a></li>
<li><a href="https://en.wikipedia.org/wiki/Event-driven_architecture">event-driven architecture</a></li>
<li><a href="https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller">model-view-controller pattern (MVC)</a></li>
<li><a href="https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93presenter">model-view-presenter pattern (MVP)</a></li>
<li><a href="https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93viewmodel">model-view-viewmodel pattern (MVVM)</a></li>
<li><a href="https://docs.microsoft.com/en-us/azure/architecture/patterns/cqrs">command query responsibility segregation pattern</a> (CQRS)</li>
<li><a href="https://docs.microsoft.com/en-us/dotnet/architecture/microservices/architect-microservice-container-applications/service-oriented-architecture">service-oriented architecture (SOA)</a></li>
</ul>
<p>There are a set of quite 'new' architectures and principles which are worked well for applications deployed to the cloud:</p>
<ul>
<li><a href="https://docs.microsoft.com/en-us/dotnet/architecture/containerized-lifecycle/design-develop-containerized-apps/monolithic-applications">monolithic architecture</a></li>
<li><a href="https://en.wikipedia.org/wiki/Microservices">microservice</a> architecture</li>
<li><a href="https://docs.microsoft.com/en-us/dotnet/architecture/serverless/serverless-architecture">serverless architecture</a> (FaaS, BaaS)</li>
<li><a href="https://azure.microsoft.com/en-us/overview/cloudnative/">cloud-native applications</a> (<a href="https://12factor.net/">twelve-factor app methodology</a>)</li>
</ul>
<h2 id="cross-cutting-concerns">Cross-cutting concerns</h2>
<p><a href="https://en.wikipedia.org/wiki/Cross-cutting_concern">Cross-cutting concerns</a> represent functionality which are used by multiple part/layers of the application (e.g. security, logging, caching, error handling, configuration, monitoring). So logic of such concerns are called by different components.</p>
<p>The following methods are used to implement and use the logic of cross-cutting concerns:</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Dependency_injection">dependency injection</a></li>
<li><a href="https://en.wikipedia.org/wiki/Decorator_pattern">decorator pattern</a></li>
<li><a href="https://en.wikipedia.org/wiki/Aspect-oriented_programming">aspect-oriented programming</a></li>
<li><a href="https://docs.microsoft.com/en-us/azure/architecture/patterns/sidecar">sidecar pattern</a> for microservices</li>
<li>ready-to-use solutions like <a href="https://dapr.io/">Darp</a> for mircoservices</li>
</ul>
<h2 id="performance">Performance</h2>
<p>Before working on <a href="https://en.wikipedia.org/wiki/Performance_engineering">performance</a> improvement and optimizations, need to make sure that the code is correct. But the software system should be enough fast as it affects user experience.</p>
<p>Performance is one of the quality attributes and it should be documented. It also should be testable and measurable. Usually improving performance is done using an iterative way: monitoring, profiling, analyzing, implementing.</p>
<p>There are a set of terms related to performance:</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Latency_%28engineering%29">latency</a></li>
<li><a href="https://en.wikipedia.org/wiki/Throughput">throughput</a></li>
<li><a href="https://en.wikipedia.org/wiki/Bandwidth_(computing)">bandwidth</a></li>
<li>processing time</li>
<li><a href="https://en.wikipedia.org/wiki/Response_time_(technology)">response time</a></li>
<li><a href="https://en.wikipedia.org/wiki/Workload">workload</a></li>
<li>utilization</li>
</ul>
<p>There are a couple of standard mechanics and ways to improve performance:</p>
<ul>
<li><a href="https://docs.microsoft.com/en-us/azure/architecture/best-practices/caching">server-side caching</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Caching">HTTP caching</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Compression">compression</a></li>
<li><a href="https://docs.microsoft.com/en-us/aspnet/mvc/overview/performance/bundling-and-minification">minifying and bundling</a></li>
<li><a href="https://developers.google.com/web/fundamentals/performance/http2/">HTTP/2</a></li>
<li><a href="https://en.wikipedia.org/wiki/Content_delivery_network">CDN</a></li>
<li><a href="https://en.wikipedia.org/wiki/Database_tuning">tweaking database performance</a></li>
</ul>
<h2 id="security">Security</h2>
<p><a href="https://en.wikipedia.org/wiki/Computer_security">Security</a> is important part of any software application. There is <a href="https://en.wikipedia.org/wiki/Information_security">CIA triad</a> which summarize the attributes that the system can have:</p>
<ul>
<li>confidentiality</li>
<li>integrity</li>
<li>availability</li>
</ul>
<p>Software architect should try to keep a balance between these attributes.</p>
<p>There is <a href="https://en.wikipedia.org/wiki/Threat_model">threat modeling</a> which is structured approach to analyzing security for an application (STRIDE threat model, <a href="https://en.wikipedia.org/wiki/DREAD_(risk_assessment_model)">DREAD risk assessment model</a>). Also there are techniques to create an application that are secure by design:</p>
<ul>
<li>minimize <a href="https://en.wikipedia.org/wiki/Attack_surface">attack surface</a></li>
<li><a href="https://en.wikipedia.org/wiki/Defense_in_depth_(computing)">defence in depth</a></li>
<li><a href="https://en.wikipedia.org/wiki/Principle_of_least_privilege">principle of least privilege</a></li>
<li><a href="https://en.wikipedia.org/wiki/Security_through_obscurity">avoiding security by obscurity</a></li>
<li><a href="https://en.wikipedia.org/wiki/KISS_principle">keep software designs simple</a></li>
<li><a href="https://en.wikipedia.org/wiki/Secure_by_default">security by default</a></li>
<li><a href="https://en.wikipedia.org/wiki/Computer_access_control">default deny</a></li>
<li><a href="https://en.wikipedia.org/wiki/Data_validation">validating input</a></li>
<li>secure the weakest link</li>
<li>security must be usable</li>
<li><a href="https://en.wikipedia.org/wiki/Fail-safe">fail securely</a></li>
</ul>
<p><a href="https://en.wikipedia.org/wiki/Cryptography">Cryptography</a> is the study which allows to keep information in secret. <a href="https://en.wikipedia.org/wiki/Identity_management">IAM (Identity and access management)</a> allows to centralize information related to the application security.</p>
<p><a href="https://owasp.org/Top10/">Most common web application risks</a>:</p>
<ul>
<li><a href="https://owasp.org/Top10/A03_2021-Injection/">injection</a></li>
<li><a href="https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures/">broken authentication</a></li>
<li>sensitive data exposure</li>
<li>XML external entity (XXE) attack</li>
<li><a href="https://owasp.org/Top10/A01_2021-Broken_Access_Control/">broken access control</a></li>
<li><a href="https://owasp.org/Top10/A05_2021-Security_Misconfiguration/">security misconfiguration</a></li>
<li><a href="https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html">cross-site scripting (XSS)</a></li>
<li><a href="https://cheatsheetseries.owasp.org/cheatsheets/Deserialization_Cheat_Sheet.html">insecure deserialization</a></li>
<li><a href="https://owasp.org/Top10/A06_2021-Vulnerable_and_Outdated_Components/">using components with known vulnerable components</a></li>
<li><a href="https://owasp.org/Top10/A09_2021-Security_Logging_and_Monitoring_Failures/">insufficient logging and monitoring</a></li>
<li><a href="https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html">unvalidated redirects and forwards</a></li>
</ul>
<h2 id="documenting-and-reviewing">Documenting and reviewing</h2>
<p>Documenting is an important part of delivering architecture. It allows to educate, train other team members, share architectural knowledge and provide entry points for review.</p>
<p>There are a set of techniques to describe an architecture in an understandable way, e.g using UML and architectural view models (like <a href="https://en.wikipedia.org/wiki/4%2B1_architectural_view_model">4 + 1</a>). Some additional information can be found <a href="https://ypyl.github.io/documentation/2019/08/01/New-Project.html#architecture">here</a>.</p>
<p>Reviewing architecture methods:</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Software_architecture_analysis_method">software architecture analysis method (SAAM)</a></li>
<li><a href="https://en.wikipedia.org/wiki/Architecture_tradeoff_analysis_method">architecture tradeoff analysis method (ATAM)</a></li>
<li>active design review (ADR)</li>
<li><a href="https://en.wikipedia.org/wiki/ARID">active reviews of intermediate designs (ARID)</a></li>
</ul>
<h2 id="devops">DevOps</h2>
<p><a href="https://en.wikipedia.org/wiki/DevOps">DevOps</a> allows to build, integrate, deploy and deliver the application in fast, automatic and incremental way. It allows to follow 'fail fast' principle during releasing a new version of the application and roll back to the previous version quickly in case of the failed released version.</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Continuous_integration">Continuous integration</a>, with automatic builds and tests, allows to validate changes quickly.</li>
<li><a href="https://en.wikipedia.org/wiki/Continuous_delivery">Continuous delivery</a> allows to deliver artifacts that can be deployed to the production at any time automatically.</li>
<li><a href="https://en.wikipedia.org/wiki/Continuous_deployment">Continuous deploy</a> allows to push new versions of the application to the production in automatic way.</li>
</ul>
<p>Needs of DevOps should be considered during the building of software application design. The following <a href="https://en.wikipedia.org/wiki/DevOps#Architecturally_significant_requirements">quality attributes</a> are important for DevOps:</p>
<ul>
<li>testability</li>
<li>deployability</li>
<li>maintainability</li>
</ul>
<h2 id="cloud-models"><a href="https://en.wikipedia.org/wiki/Cloud_computing#Service_models">Cloud models</a></h2>
<ul>
<li>Infrastructure as a Service (IaaS)</li>
<li>Containers as a Service (CaaS)</li>
<li>Platform as a Service (PaaS)</li>
<li>Serverless/Function as a Service</li>
<li>Software as a Service (SaaS)</li>
</ul>
<h2 id="legacy-architecture">Legacy architecture</h2>
<p>There are a lot of challenges in maintaining, improving, and extending <a href="https://en.wikipedia.org/wiki/Legacy_system">legacy applications</a>. Software architects should be able to refactor the legacy application to make it easier to extend, modify or fix.</p>
<p>The following actions and techniques should be considered to do <a href="https://en.wikipedia.org/wiki/Code_refactoring">refactoring</a>:</p>
<ul>
<li>making the code of the legacy application (or a part of it) testable</li>
<li><a href="https://en.wikipedia.org/wiki/Dead_code_elimination">removing redundant code</a> (dead, unreachable, commented-out code)</li>
<li>using the tools to do refactoring</li>
<li>making small incremental changes</li>
<li>extract functionalities into separate components or microservices</li>
<li>prepare <a href="https://docs.microsoft.com/en-us/azure/cloud-adoption-framework/migrate/azure-best-practices/contoso-migration-overview">migration to the cloud</a></li>
<li>modernizing build and deployment process</li>
</ul>
<h2 id="soft-skills">Soft skills</h2>
<p><a href="https://en.wikipedia.org/wiki/Soft_skills">Soft skills</a> are important for the software architect role. It is hard to define and measure such skills, but it is impossible to train them and enhance:</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Communication_skill">communication</a></li>
<li><a href="https://en.wikipedia.org/wiki/Leadership">leadership</a></li>
<li><a href="https://en.wikipedia.org/wiki/Negotiation">negotiation</a></li>
</ul>
<h2 id="software-evolution"><a href="https://en.wikipedia.org/wiki/Software_evolution">Software evolution</a></h2>
<p>Software architecture should be designed to make applications extendable and changeable. So software architects should expect that there will be changes in the application. There is <a href="https://en.wikipedia.org/wiki/Lehman%27s_laws_of_software_evolution">Lehman's laws of software evolution</a>.</p>
<p><a href="https://en.wikipedia.org/wiki/Fitness_function">Fitness function</a> is a type of objective function that is used to determine how close a given solution is to achieving the desired result.</p>
<p>Making incremental changes, using standards, following the last responsible moment strategy, and designing loosely coupled applications allows making changes more easily in the future. It is a good practice to follow <a href="https://en.wikipedia.org/wiki/Robustness_principle">robustness principle</a> during the designing API.</p>
<h2 id="continuous-improvement">Continuous improvement</h2>
<p>Software architects should improve their skills continuously. There are a set of activities that allows to do it:</p>
<ul>
<li>continuous learning</li>
<li>writing blog</li>
<li>teaching others</li>
<li>trying new technologies</li>
<li>writing code</li>
<li>attending meet-ups</li>
<li>taking responsibilities</li>
<li>following the work-life balance</li>
<li>being proud of the work</li>
</ul>
<p>Notes have been created after reading <a href="https://www.amazon.com/Software-Architects-Handbook-implementing-architecture/dp/1788624068">Software Architect's Handbook</a>
[]</p>

"""""
),
            ["""2022-01-01-Binary-Tree"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Binary tree
""""",
["""date"""] =
"""""
 2022-01-01
""""",
["""tags"""] =
"""""
 algorithm binary tree structure
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<h1 id="binary-tree"><a href="https://en.wikipedia.org/wiki/Binary_tree">Binary tree</a></h1>
<ul>
<li>at most 2 children per node</li>
<li>exactly one root</li>
<li>exactly one path between root and any node</li>
</ul>
<p>Leaf node is a node without any child node.</p>
<h2 id="node">Node</h2>
<p>There is node implementation:</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">class</span> Node:
  <span style="color:#569CD6;">def</span> __init__(<span style="color:#569CD6;">self</span>, val):
    <span style="color:#569CD6;">self</span><span style="color:#B5CEA8;">.</span>value = val
    <span style="color:#569CD6;">self</span><span style="color:#B5CEA8;">.</span>left = <span style="color:#569CD6;">None</span>
    <span style="color:#569CD6;">self</span><span style="color:#B5CEA8;">.</span>right = <span style="color:#569CD6;">None</span>
</pre></div><h2 id="depth-first">Depth First</h2>
<h3 id="stack-based-implementation">Stack based implementation</h3>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">def</span> depthFirst(root):
  <span style="color:#569CD6;">if</span> root <span style="color:#569CD6;">is</span> <span style="color:#569CD6;">None</span>:
    <span style="color:#569CD6;">return</span> []

  results = []
  stack = [root]
  <span style="color:#569CD6;">while</span> <span>len</span>(stack) &gt; <span style="color:#B5CEA8;">0</span>:
    current = stack<span style="color:#B5CEA8;">.</span>pop()
    results<span style="color:#B5CEA8;">.</span>append(current<span style="color:#B5CEA8;">.</span>val)

    <span style="color:#57A64A;"># need to start with right, so it will go to the bot of the stack</span>
    <span style="color:#569CD6;">if</span> current<span style="color:#B5CEA8;">.</span>right <span style="color:#569CD6;">is</span> <span style="color:#569CD6;">not</span> <span style="color:#569CD6;">None</span>:
      stack<span style="color:#B5CEA8;">.</span>append(current<span style="color:#B5CEA8;">.</span>right)
    <span style="color:#569CD6;">if</span> current<span style="color:#B5CEA8;">.</span>left <span style="color:#569CD6;">is</span> <span style="color:#569CD6;">not</span> <span style="color:#569CD6;">None</span>:
      stack<span style="color:#B5CEA8;">.</span>append(current<span style="color:#B5CEA8;">.</span>left)

  <span style="color:#569CD6;">return</span> results
</pre></div><h3 id="recursion-based-implementation">Recursion based implementation</h3>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">def</span> depthFirst(root):
  <span style="color:#569CD6;">if</span> root <span style="color:#569CD6;">is</span> <span style="color:#569CD6;">None</span>:
    <span style="color:#569CD6;">return</span> []
  leftValues = depthFirst(root<span style="color:#B5CEA8;">.</span>left)
  rightValues = depthFirst(root<span style="color:#B5CEA8;">.</span>right)
  <span style="color:#569CD6;">return</span> [root<span style="color:#B5CEA8;">.</span>val, *leftValues, *rightValues]
</pre></div><h2 id="breadth-first">Breadth First</h2>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">from</span> queue <span style="color:#569CD6;">import</span> Queue

<span style="color:#569CD6;">def</span> breadthFirst(root):
  <span style="color:#569CD6;">if</span> root <span style="color:#569CD6;">is</span> <span style="color:#569CD6;">None</span>:
    <span style="color:#569CD6;">return</span> []

  results = []
  queue = Queue()
  <span style="color:#569CD6;">while</span> <span style="color:#569CD6;">not</span> queue<span style="color:#B5CEA8;">.</span>empty():
    current = queue<span style="color:#B5CEA8;">.</span>get()
    results<span style="color:#B5CEA8;">.</span>append(current<span style="color:#B5CEA8;">.</span>val)

    <span style="color:#569CD6;">if</span> current<span style="color:#B5CEA8;">.</span>left <span style="color:#569CD6;">is</span> <span style="color:#569CD6;">not</span> <span style="color:#569CD6;">None</span>:
      queue<span style="color:#B5CEA8;">.</span>put(current<span style="color:#B5CEA8;">.</span>left)
    <span style="color:#569CD6;">if</span> current<span style="color:#B5CEA8;">.</span>right <span style="color:#569CD6;">is</span> <span style="color:#569CD6;">not</span> <span style="color:#569CD6;">None</span>:
      queue<span style="color:#B5CEA8;">.</span>put(current<span style="color:#B5CEA8;">.</span>right)
  <span style="color:#569CD6;">return</span> results
</pre></div>
<p><a href="https://www.youtube.com/watch?v=fAAZixBzIAI">More information about binary tree and examples of coding challenges</a>.</p>

"""""
),
            ["""2022-02-28-Notes-after-reading-Passionate-Programmermd"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Notes about passionate programmer
""""",
["""date"""] =
"""""
 2022-02-20
""""",
["""tags"""] =
"""""
 programming notes
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<h1 id="notes-after-reading-passionate-programmer">Notes after reading <a href="https://www.amazon.com/Passionate-Programmer-Remarkable-Development-Pragmatic/dp/1934356344">Passionate Programmer</a></h1>
<p>There are a lot of useful notes and bits of advice that are useful at any point in time in an IT career.</p>
<h1 id="product">Product</h1>
<h2 id="be-ahead">Be ahead</h2>
<p>It is important to have broad-minded about technologies and follow the trends in IT. It will help to find a new job, learn something new, suggest a new product/technology when it will be required. On the other hand, there are too much different types of new software, libraries, and frameworks, so it will be great to have knowledge or to be familiar, with the most popular ones. There is a great list of GitHub repositories that allows to quickly identify the most popular libraries and frameworks, e.g. <a href="https://github.com/kamranahmedse/developer-roadmap">https://github.com/kamranahmedse/developer-roadmap</a>.</p>
<h2 id="only-writing-code-is-not-enough">Only writing code is not enough</h2>
<p>Currently, in pandemic time, you will have to start working remotely at least from time to time. So your communication skills, your additional knowledge outside of the programming area, your certifications, your ability to self-learning, and find the answers by yourself are starting to play a more important role. I think it is important to have some additional hobbies related to programming or areas of business that are not directly connected with your current job.</p>
<h2 id="find-a-guy-who-is-smarter">Find a guy who is smarter</h2>
<p>There are a lot of great professionals which worth following. Reading blogs of such guys will help to grow you as a programmer and professional. E.g. <a href="https://blog.cwa.me.uk/">The morning brew</a> is RSS with a collection of great articles mostly related to .NET/Frontend development.</p>
<h2 id="invest-your-time-in-getting-knowledge">Invest your time in getting knowledge</h2>
<p>If you don't know how to spend your time, invest it in yourself. There are a lot of free courses and certifications which you can quickly check and learn something new. It doesn't really matter if you stop learning it at the beginning or at the middle of the course, or you will fail certification after the course. The most important fact is that you will have an idea about the selected topic and will be familiar with it. <a href="https://www.coursera.org/">Coursera</a>, <a href="https://www.udemy.com/">Udemy</a> and the best one is <a href="https://www.freecodecamp.org/">https://www.freecodecamp.org/</a>.</p>
<h2 id="be-a-specialist-in-your-current-primary-technology">Be a specialist in your current primary technology</h2>
<p>Following new updates/fixes in your primary technology and framework is very important. It will allow you to fix the issues in products which you are working on, improve performance and stability. Adding new features to the product is only part of the programmer responsibility, supporting and improving the existing functionality and general stability of the product is another.</p>
<h2 id="be-a-guy-who-knows-related-technologies">Be a guy who knows related technologies</h2>
<p>It is great to know additional areas and technologies. E.g. if you know .Net, learn any frontend framework, data science topic, DevOps, or any other related areas that will help you to sell yourself as a specialist.</p>
<h2 id="your-current-job-is-not-you">Your current job is not you</h2>
<p>Don't forget that you can always leave your job or business and find something new if you want. It is very hard if you are the owner of the business, I believe, but you should always keep it in mind. In the end, the life and time that we have are limited.</p>
<h2 id="enjoy-what-you-are-doing">Enjoy what you are doing</h2>
<p>If you like what you are doing, you will feel happiness and satisfaction. It is not possible always to do only what you like, but, in general, you should like your job, your responsibilities, and your path in your career to be a good programmer.</p>
<h1 id="invest">Invest</h1>
<h2 id="ask-questions">Ask questions</h2>
<p>Don't hesitate and ask questions. If you did your research and weren't able to find answers, you have to escalate and ask questions to your team. Even if you will find out that the answer is simple, you need to ask questions and be prepared to explain them. Avoid <a href="https://xyproblem.info/">XY problem</a>.</p>
<h2 id="understand-your-product-niche">Understand your product niche</h2>
<p>Understanding the business problems which are solved by the product you are working on allows you to make fewer errors and ask a bunch of questions. It will help you to show your interest in what you are doing, broaden your knowledge and increase your productivity.</p>
<h2 id="find-a-teacher-or-become-a-teacher">Find a teacher or become a teacher</h2>
<p>If you don't know the product well or the business of the product, try to find the person who wishes and will help you to understand it. So you will become the expert on the topic. If you know a lot about the product already, become a teacher! It will help you to structurize your knowledge and fill gaps in it.</p>
<h2 id="practice-in-what-you-are-learning">Practice in what you are learning</h2>
<p>Knowledge without practicing costs cheap. Find the possibility to use your knowledge and practice new frameworks, libraries or approaches.</p>
<h2 id="learn-and-understand-others-code">Learn and understand other's code</h2>
<p>Today software applications are created by many different people, so the ability to understand and read others' code is crucial. Review, ask and suggest improvements in others' code if you have a possibility to do that. It will make you a better programmer and also improve your communication skills.</p>
<h2 id="automation">Automation</h2>
<p>If you are doing the same task twice - automate it if possible! It will save your time next time, allow you to 'record' the procedure to avoid potential mistakes, and allow you to share it with others.</p>
<h1 id="execution">Execution</h1>
<h2 id="do-what-you-can-do">Do what you can do</h2>
<p>Even if the area of work is very big, you need to start working on something. So find a small task that you can complete right now and start with it.</p>
<h2 id="predict-others-requests">Predict others' requests</h2>
<p>Thinking about any future requests or possible changes or features that might be requested is a good way to do your job right. If you know what to expect, you can prepare yourself and your working environment for upcoming changes and make your life easier.</p>
<h2 id="record-your-daily-achievements">Record your daily achievements</h2>
<p>Having a list of what you did and what you achieved is important to be self-motivated and check the progress. It will allow you to stay focused.</p>
<h2 id="remember-who-is-your-boss">Remember who is your boss</h2>
<p>You always have to remember who is your boss and what he expects from you. Your boss can be anything: business, clients, or yourself. All your work should help achieve the main goal of your boss.</p>
<h2 id="be-on-your-spot">Be on your spot</h2>
<p>Look forward to new opportunities, but do your current job well. If you don't want to do your current assignment, it is better to find a new job!</p>
<h2 id="nobody-cares">Nobody cares</h2>
<p>You should accept and always remember that you are not important for business as a person or individual. Even if you are very good at the current assignment, you can be replaced at any time. Do not forget and be careful!</p>
<h2 id="take-a-break">Take a break</h2>
<p>Developing yourself as a programmer and specialist is not a sprint, it is a marathon. Take a break if you need it. Mental health (and health in general) is more important than any type of work.</p>
<h2 id="lose-is-ok">Lose is ok</h2>
<p>Do not be afraid to miss something or be wrong. Nobody is perfect. If you are not doing mistakes, it means you do nothing. And there is no win without loses (otherwise, you are an extremely lucky guy and you should start gambling :))</p>
<h2 id="start-saying-no">Start saying 'NO'</h2>
<p>It is more connected with managing your time and fear to disappoint others. You can't do all work and can't be nice to everyone - accept it! And start saying 'NO'.</p>
<h2 id="no-panic">No panic</h2>
<p>Long story short - panicking is a waste of time. Just remember it and your first thought in a critical situation should be 'No panic'.</p>
<h2 id="say-do-show">Say, do, show</h2>
<p>Announcing your promises, fulfilling them, and reporting results is the best strategy to be promoted. It shows that you can plan ahead, do your job on time and be transparent.</p>
<h1 id="marketing">Marketing</h1>
<h2 id="reputation-matters">Reputation matters</h2>
<p>Reputation is important in your life and it is important in your career. Be careful what you say publicly (and even privately) as today your bad reputation can ruin your life.</p>
<h2 id="you-are-what-you-can-explain">You are what you can explain</h2>
<p>Others can understand you only if you will be able to explain your thoughts and ideas. So practicing in public speaking and doing presentations.</p>
<h2 id="know-with-whom-you-are-working">Know with whom you are working</h2>
<p>Today it is almost impossible to work alone. So knowing your colleagues will help you to do your job better via sharing and getting knowledge about the product domain.</p>
<h2 id="talk-with-others">Talk with others</h2>
<p>If you are interested in any topic, try to find a group of people who is also interested in it. Or try to find specialists in this topic/framework/library and follow them!</p>
<h1 id="outdated">Outdated</h1>
<h2 id="your-knowledge-is-outdated-already">Your knowledge is outdated already</h2>
<p>There is a tone of new technologies coming each quarter. Try to follow trends and be familiar with the most interesting and promising ones.</p>
<h2 id="the-final-goal-is-important-but-the-steps-to-it-are-more-important">The final goal is important, but the steps to it are more important</h2>
<p>The outcome of each work is a result that is valuable. But all steps/subtasks are important to have a well-designed, high-quality result.</p>
<h2 id="follow-the-plan">Follow the plan</h2>
<p>It is very easy to waste time doing non-important work without a good plan. So there should be always a plan for how to achieve the goal.</p>
<h2 id="look-at-the-market">Look at the market</h2>
<p>You need to know what vacancies are open now and what requirements are applied to them. Go to interviews at least once a year to check yourself.</p>
<h2 id="do-yourself-evaluation">Do yourself evaluation</h2>
<p>Evaluate yourself as much as possible to find the weakest parts to be able to improve them. It is much easier to accept such evaluation from yourself than from others.</p>
<h2 id="better-than-yesterday">Better than yesterday</h2>
<p>Each day is 24 hours. Spend this time to be a better version of yourself than you were yesterday.</p>
<h2 id="be-independent-and-enjoy-your-life">Be independent and enjoy your life</h2>
<p>We have only one life, so happiness and independence are very important to be a good programmer, specialist, or human.</p>

"""""
),
            ["""2022-03-01-Tracker-Book"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Tracker book
""""",
["""date"""] =
"""""
 2022-03-01
""""",
["""tags"""] =
"""""
 csharp dotnet avalonia
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<h1 id="tracker-book">Tracker Book</h1>
<p>Reading a lot of e-books forces you to track them somehow.</p>
<p>It was decided to create a small application <a href="https://trackerbook.github.io/">Tracker Book</a> to save and track checked/reviewed/read books.</p>
<p>Moreover it is written in <a href="http://avaloniaui.net/">Avalonia UI</a> to check its functionality!</p>

"""""
),
            ["""2022-09-21-Math-in-our-life"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Math in our life
""""",
["""date"""] =
"""""
 2022-09-21
""""",
["""tags"""] =
"""""
 math
""""",
["""categories"""] =
"""""
 math
""""",
 },
"""""
<p><img src="./images/math_snail.png" alt="img" /></p>
<p>The ratio of the number of snails recaptured to the total number caught on the second day should be the same as the ratio of the number of snails caught on the first day to the total number of snails in the garden, tagged and untagged.</p>
<ol>
<li>What is done, it is done. A lot of processes are following <a href="https://en.wikipedia.org/wiki/Exponential_growth">exponential growth</a> rule. Don't forget it.</li>
<li>It is always better to check twice to increase probability of the right answer.</li>
<li>People tend to take mathematical formulas on faith, agree with them by default and do not require further explanation. The aura of mystery that surrounds many mathematical calculations makes them sometimes mysteriously incomprehensible and (often undeservedly) incredibly convincing. So they are rarely challenged. The mathematical formula creates an illusion of certainty, disarming possible skeptics. Ask questions and clarifications (or ask other experts) to clarify provided mathematical formulas and proofs.</li>
<li>Statistics can be chosen to represent a particular way of looking at things while maintaining a seeing of objectivity. Figures that contradict the conclusion are simply ignored, and reality is distorted through the selective use of data. Small, unrepresentative, or biased samples, combined with leading questions and selective presentation of data, or using statistics out of context, is a recipe for unreliable statistical research. Check the provided statistics carefully.</li>
<li>To select the best option, decline first 37% of options, and then select the first one that is better than declined options.</li>
</ol>

"""""
),
            ["""2023-01-14-VSC-tasks-dotnet-test"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Visual Studio Code tasks. Run dotnet test with xUnit, coverlet and reportgenerator
""""",
["""date"""] =
"""""
 2023-01-14
""""",
["""tags"""] =
"""""
 dotnet, test, xUnit, vcs, coverlet, reportgenerator
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<p>There is a way to run one task that will run:</p>
<ol>
<li>all tests</li>
<li>run code coverege tool</li>
<li>generate html report for code coverage</li>
</ol>
<p>There is a <code>tasks.json</code> configuration that using PowerShell to run some utility tasks (like deleting old tests):</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
{
    <span style="color:#FF8700;">&quot;version&quot;</span>: <span style="color:#008B8B;">&quot;2.0.0&quot;</span>,
    <span style="color:#FF8700;">&quot;tasks&quot;</span>: [
        {
            <span style="color:#FF8700;">&quot;label&quot;</span>: <span style="color:#008B8B;">&quot;run-tests&quot;</span>,
            <span style="color:#FF8700;">&quot;command&quot;</span>: <span style="color:#008B8B;">&quot;dotnet&quot;</span>,
            <span style="color:#FF8700;">&quot;hide&quot;</span>: <span style="color:#af87ff;">true</span>,
            <span style="color:#FF8700;">&quot;type&quot;</span>: <span style="color:#008B8B;">&quot;process&quot;</span>,
            <span style="color:#FF8700;">&quot;args&quot;</span>: [
                <span style="color:#008B8B;">&quot;test&quot;</span>,
                <span style="color:#008B8B;">&quot;--collect:\&quot;XPlat Code Coverage\&quot;&quot;</span>
            ],
            <span style="color:#FF8700;">&quot;options&quot;</span>: {
                <span style="color:#FF8700;">&quot;cwd&quot;</span>: <span style="color:#008B8B;">&quot;${workspaceFolder}/MyProject.Tests/&quot;</span>
            },
            <span style="color:#FF8700;">&quot;problemMatcher&quot;</span>: <span style="color:#008B8B;">&quot;$msCompile&quot;</span>,
            <span style="color:#FF8700;">&quot;dependsOn&quot;</span>: [ <span style="color:#008B8B;">&quot;delete-tests&quot;</span> ]
        },
        {
            <span style="color:#FF8700;">&quot;label&quot;</span>: <span style="color:#008B8B;">&quot;generate-report&quot;</span>,
            <span style="color:#FF8700;">&quot;command&quot;</span>: <span style="color:#008B8B;">&quot;reportgenerator&quot;</span>,
            <span style="color:#FF8700;">&quot;hide&quot;</span>: <span style="color:#af87ff;">true</span>,
            <span style="color:#FF8700;">&quot;type&quot;</span>: <span style="color:#008B8B;">&quot;process&quot;</span>,
            <span style="color:#FF8700;">&quot;args&quot;</span>: [
                <span style="color:#008B8B;">&quot;-reports:\&quot;${workspaceFolder}\\MyProject.Tests\\TestResults\\coverage.cobertura.xml\&quot;&quot;</span>,
                <span style="color:#008B8B;">&quot;-targetdir:\&quot;coveragereport\&quot;&quot;</span>,
                <span style="color:#008B8B;">&quot;-reporttypes:Html&quot;</span>
            ],
            <span style="color:#FF8700;">&quot;options&quot;</span>: {
                <span style="color:#FF8700;">&quot;cwd&quot;</span>: <span style="color:#008B8B;">&quot;${workspaceFolder}/MyProject.Tests/&quot;</span>
            },
            <span style="color:#FF8700;">&quot;problemMatcher&quot;</span>: [],
            <span style="color:#FF8700;">&quot;dependsOn&quot;</span> : [ <span style="color:#008B8B;">&quot;extract-tests&quot;</span> ]
        },
        {
            <span style="color:#FF8700;">&quot;label&quot;</span>: <span style="color:#008B8B;">&quot;test&quot;</span>,
            <span style="color:#FF8700;">&quot;type&quot;</span>: <span style="color:#008B8B;">&quot;shell&quot;</span>,
            <span style="color:#FF8700;">&quot;command&quot;</span>: <span style="color:#008B8B;">&quot;start msedge ${workspaceFolder}/MyProject.Tests\\coveragereport\\index.html&quot;</span>,
            <span style="color:#FF8700;">&quot;problemMatcher&quot;</span>: [],
            <span style="color:#FF8700;">&quot;dependsOn&quot;</span>: [ <span style="color:#008B8B;">&quot;generate-report&quot;</span> ]
        },
        {
            <span style="color:#FF8700;">&quot;label&quot;</span>: <span style="color:#008B8B;">&quot;delete-tests&quot;</span>,
            <span style="color:#FF8700;">&quot;type&quot;</span>: <span style="color:#008B8B;">&quot;shell&quot;</span>,
            <span style="color:#FF8700;">&quot;hide&quot;</span>: <span style="color:#af87ff;">true</span>,
            <span style="color:#FF8700;">&quot;command&quot;</span>: <span style="color:#008B8B;">&quot;If (Test-Path ${workspaceFolder}\\MyProject.Tests\\TestResults) { Remove-Item -Path ${workspaceFolder}\\MyProject.Tests\\TestResults -Force -Recurse }&quot;</span>,
            <span style="color:#FF8700;">&quot;problemMatcher&quot;</span>: []
        },
        {
            <span style="color:#FF8700;">&quot;label&quot;</span>: <span style="color:#008B8B;">&quot;extract-tests&quot;</span>,
            <span style="color:#FF8700;">&quot;type&quot;</span>: <span style="color:#008B8B;">&quot;shell&quot;</span>,
            <span style="color:#FF8700;">&quot;hide&quot;</span>: <span style="color:#af87ff;">true</span>,
            <span style="color:#FF8700;">&quot;command&quot;</span>: <span style="color:#008B8B;">&quot;Get-ChildItem -Path ${workspaceFolder}\\MyProject.Tests\\TestResults -Recurse -File | Move-Item -Destination ${workspaceFolder}\\MyProject.Tests\\TestResults&quot;</span>,
            <span style="color:#FF8700;">&quot;problemMatcher&quot;</span>: [],
            <span style="color:#FF8700;">&quot;dependsOn&quot;</span>: [ <span style="color:#008B8B;">&quot;run-tests&quot;</span> ]
        }
    ]
}
</pre></div>
"""""
),
            ["""2023-01-24-Blazor-component-git-branch-UI"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Blazor component. Git branch UI show git branches on UI
""""",
["""date"""] =
"""""
 2023-01-24
""""",
["""tags"""] =
"""""
 dotnet, blazor, component, ui, git, branch
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<p>It is surprisingly very easy to create, test and publish Blazor component library.</p>
<p>I decided to create a small Blazor component to represent git branch tree like <code>gitk</code> is doing, e.g.</p>
<p><img src="./images/gitk-branch-example.png" alt="img" /></p>
<p>And there is a project - <a href="https://github.com/ypyl/GitBranchUI">https://github.com/ypyl/GitBranchUI</a>.</p>
<p>Example of the component (published Example project) can be found <a href="https://ypyl.github.io/GitBranchUI/">here</a>.</p>
<p>Blazor is very easy to set up, use and test! It is fantastic!</p>

"""""
),
            ["""2023-02-24-Hiring-Globally"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Hiring globally companies
""""",
["""date"""] =
"""""
 2023-02-24
""""",
["""tags"""] =
"""""
 hiring, remote, job, programming
""""",
["""categories"""] =
"""""
 work
""""",
 },
"""""
<ul>
<li><a href="https://upstackhq.com/">https://upstackhq.com/</a></li>
<li><a href="https://clevertech.biz/">https://clevertech.biz/</a></li>
<li><a href="https://atlant.io/Jobs">https://atlant.io/Jobs</a></li>
<li><a href="https://www.toptal.com">https://www.toptal.com</a></li>
<li><a href="https://www.upwork.com">https://www.upwork.com</a></li>
<li><a href="https://join.x-team.com/jobs">https://join.x-team.com/jobs</a></li>
<li><a href="https://www.gun.io/">https://www.gun.io/</a></li>
<li><a href="https://www.vertex-solutions.com/">https://www.vertex-solutions.com/</a></li>
<li><a href="https://angel.co/jobs">https://angel.co/jobs</a></li>
<li><a href="https://indeed.com/?r=us">https://indeed.com/?r=us</a></li>
<li><a href="https://www.jobserve.com/gb/en/search-jobs-in-london,-london,-united-kingdom/">https://www.jobserve.com/gb/en/search-jobs-in-london,-london,-united-kingdom/</a></li>
<li><a href="https://pilot.co">https://pilot.co</a></li>
<li><a href="https://talen2hire.com">https://talen2hire.com</a></li>
<li><a href="https://www.adzuna.com">https://www.adzuna.com</a></li>
<li><a href="https://hitmarker.net">https://hitmarker.net</a></li>
<li><a href="https://startup.jobs/?query=C%2B%2B&amp;toggle%5Bremote%5D=true&amp;page=2">https://startup.jobs/?query=C%2B%2B&amp;toggle%5Bremote%5D=true&amp;page=2</a></li>
<li><a href="https://ziprecruiter.com">https://ziprecruiter.com</a></li>
<li>Https://glassdoor.com</li>
<li><a href="https://clockify.me/freelance-jobs">https://clockify.me/freelance-jobs</a></li>
<li>Flatworld.co</li>
<li><a href="https://x-team.com/">https://x-team.com/</a></li>
<li><a href="https://www.gun.io/">https://www.gun.io/</a></li>
<li><a href="https://www.toptal.com/">https://www.toptal.com/</a></li>
<li><a href="https://upstack.co/">https://upstack.co/</a></li>
<li><a href="https://turing.com/">https://turing.com/</a></li>
<li><a href="https://www.upwork.com/">https://www.upwork.com/</a></li>
<li><a href="https://pilot.co/">https://pilot.co/</a></li>
<li><a href="https://landing.jobs/jobs">https://landing.jobs/jobs</a></li>
<li><a href="https://crypto.jobs/">https://crypto.jobs/</a></li>
<li><a href="https://gamedev.jobs/jobs/">https://gamedev.jobs/jobs/</a></li>
<li><a href="https://gitcoin.co/jobs">https://gitcoin.co/jobs</a></li>
<li><a href="http://freela.io/">http://freela.io/</a></li>
<li><a href="https://remote.com/search">https://remote.com/search</a></li>
<li><a href="https://www.skillhire.com/talent">https://www.skillhire.com/talent</a></li>
<li><a href="https://www.codementor.io/">https://www.codementor.io/</a></li>
<li><a href="https://remoteok.io/">https://remoteok.io/</a></li>
<li><a href="https://www.workingnomads.co/jobs">https://www.workingnomads.co/jobs</a></li>
<li><a href="https://weworkremotely.com/">https://weworkremotely.com/</a></li>
<li><a href="https://www.crossover.com">https://www.crossover.com</a></li>
<li><a href="https://www.clevertech.biz/">https://www.clevertech.biz/</a></li>
<li><a href="https://moduscreate.com/">https://moduscreate.com/</a></li>
<li><a href="https://www.nearform.com/careers/">https://www.nearform.com/careers/</a></li>
<li><a href="https://stackoverflow.com/jobs?r=true">https://stackoverflow.com/jobs?r=true</a></li>
<li><a href="https://toggl.com/">https://toggl.com/</a></li>
<li><a href="https://number8.com/">https://number8.com/</a></li>
<li><a href="https://www.remotelyawesomejobs.com/">https://www.remotelyawesomejobs.com/</a></li>
<li><a href="https://www.workshape.io/">https://www.workshape.io/</a></li>
<li><a href="https://www.monster.com/">https://www.monster.com/</a></li>
<li><a href="https://www.crewscale.com/">https://www.crewscale.com/</a></li>
<li><a href="https://www.numbrs.com/en_uk/careers/remote/">https://www.numbrs.com/en_uk/careers/remote/</a></li>
<li><a href="https://nofluffjobs.com/">https://nofluffjobs.com/</a></li>
<li><a href="https://www.flexjobs.com/">https://www.flexjobs.com/</a></li>
<li><a href="https://angel.co/">https://angel.co/</a></li>
<li><a href="https://www.lullabot.com/jobs">https://www.lullabot.com/jobs</a></li>
<li><a href="https://zapier.com/jobs/">https://zapier.com/jobs/</a></li>
<li><a href="https://www.malt.com/">https://www.malt.com/</a></li>
<li><a href="https://fire-engine-red.com/careers/">https://fire-engine-red.com/careers/</a></li>
<li><a href="https://www.firstbasehq.com/careers">https://www.firstbasehq.com/careers</a></li>
<li><a href="https://www.digitalocean.com/careers/">https://www.digitalocean.com/careers/</a></li>
<li><a href="https://www.invisionapp.com/about/#jobs">https://www.invisionapp.com/about/#jobs</a></li>
<li><a href="https://automattic.com/work-with-us/">https://automattic.com/work-with-us/</a></li>
<li><a href="https://scopicsoftware.com/careers/">https://scopicsoftware.com/careers/</a></li>
<li><a href="https://www.tecla.io/">https://www.tecla.io/</a></li>
<li><a href="https://www.hubspot.com/careers/remote">https://www.hubspot.com/careers/remote</a></li>
<li><a href="https://graphyapp.com/careers">https://graphyapp.com/careers</a></li>
<li><a href="https://hubstaff.com/jobs">https://hubstaff.com/jobs</a></li>
<li><a href="https://6nomads.com/">https://6nomads.com/</a></li>
<li><a href="https://github.com/lukasz-madon/awesome-remote-job">https://github.com/lukasz-madon/awesome-remote-job</a></li>
<li><a href="https://github.com/yanirs/established-remote">https://github.com/yanirs/established-remote</a></li>
<li><a href="https://github.com/diegopolido/remote-jobs-compilation-of-compilation">https://github.com/diegopolido/remote-jobs-compilation-of-compilation</a></li>
<li><a href="https://arc.dev/">https://arc.dev/</a></li>
<li><a href="https://weworkremotely.com/top-remote-companies">https://weworkremotely.com/top-remote-companies</a></li>
<li><a href="https://www.remotesome.com/">https://www.remotesome.com/</a></li>
<li><a href="https://www.numbrs.com/en-uk/">https://www.numbrs.com/en-uk/</a></li>
<li><a href="https://www.numbrs.com/en-uk/careers/">https://www.numbrs.com/en-uk/careers/</a></li>
<li><a href="https://www.nextonlabs.com/">https://www.nextonlabs.com/</a></li>
<li><a href="https://careersremote.com">https://careersremote.com</a></li>
<li><a href="https://www.bairesdev.com/">https://www.bairesdev.com/</a></li>
<li><a href="https://teamway.io/">https://teamway.io/</a></li>
<li><a href="https://ibench.net/">https://ibench.net/</a></li>
<li>virtualvocations.com</li>
<li>freshersworld.com</li>
<li>justremote.co</li>
<li>simplyhired.com</li>
<li>remote.co</li>
<li>dice.com</li>
<li><a href="https://app.facet.net/">https://app.facet.net/</a></li>
</ul>
<hr />
<p><a href="https://www.toptal.com/">Toptal</a> is an elite network of the world's top talent in business, design, and technology that enables companies to scale their teams, on demand. With $100+ million in annual revenue and triple-digit growth, Toptal is the largest fully-distributed workforce in the world. The Toptal network includes thousands of designers, developers, project managers, product managers, and finance experts in more than 100 countries. To be accepted into the network, all applicants must pass a screening process that includes professional communication skills, along with a variety of technical exams specific to the applicant's area of expertise.</p>
<p><strong>Founded:</strong> 2010</p>
<p><strong>Website:</strong> <a href="https://www.toptal.com/">Toptal</a></p>
<p><strong>Number of Professionals:</strong> 1000+</p>
<hr />
<p><a href="http://www.elastic.co">Elastic Search</a> is a search company. As the creators of the Elastic Stack (Elasticsearch, Kibana, Beats, and Logstash), Elastic builds self-managed and SaaS offerings that make data usable in real time and at scale for search, logging, security, and analytics use cases. Elastic's global community has more than 100,000 members across 45 countries. Since its initial release, Elastic's products have achieved more than 400 million cumulative downloads. Today thousands of organizations, including Cisco, eBay, Dell, Goldman Sachs, Groupon, HP, Microsoft, Netflix, The New York Times, Uber, Verizon, Yelp, and Wikipedia, use the Elastic Stack and Elastic Cloud to power mission-critical systems that drive new revenue opportunities and massive cost savings. Elastic has headquarters in Amsterdam, The Netherlands, and Mountain View, California; and has over 1,000 employees in more than 35 countries around the world.</p>
<p><strong>Founded:</strong> 2012</p>
<p><strong>Website:</strong> <a href="http://www.elastic.co">Elastic</a></p>
<p><strong>Number of Employees:</strong> 1000+</p>
<p><strong>Industry:</strong> Computer Software</p>
<hr />
<p><a href="http://www.crossover.com">Crossover</a> (also known as Crossover for Work) is redefining the workplace. We connect the world's best talent with companies around the globe, supported by our WorkSmart productivity and workforce technology. Headquartered in Austin, Texas, Crossover has thousands of partners in more than 100 countries. Talent isn't determined by geography. Crossover recruits and screens only those with exemplary skills and drive to work with the world's best businesses. Our teams bring the talent to manage all types of initiatives, from software development to quality assurance to growing solution roadmaps.</p>
<p><strong>Founded:</strong> 2014</p>
<p><strong>Website:</strong> <a href="http://www.crossover.com">Crossover</a></p>
<p><strong>Number of Partners:</strong> 1000+</p>
<p><strong>Industry:</strong> Information Technology and Services</p>
<hr />
<p><a href="http://www.invisionapp.com">inVision</a> is the Digital Product Design platform used to make the world's best customer experiences. We provide design tools and educational resources for teams to navigate every stage of the product design process, from ideation to development. Today, more than 5 million people use inVision to create a repeatable and streamlined design workflow; rapidly design and prototype products before writing code, and collaborate across their entire organization. That includes more than 97 percent of the Fortune 100, and organizations like Airbnb, Amazon, HBO, Netflix, Nike, Slack, Starbucks, and Uber, who are now able to design better products, faster.</p>
<p><strong>Founded:</strong> 2011</p>
<p><strong>Website:</strong> <a href="http://www.invisionapp.com">inVision</a></p>
<p><strong>Number of Employees:</strong> 501-1000</p>
<p><strong>Industry:</strong> Internet</p>
<hr />
<p><a href="http://automattic.com">Automattic</a> wants to make the web a better place. Our family includes Jetpack, WooCommerce, Longreads, WordPress.com, and more. With WordPress.com, you can create beautiful websites and blogs for free and enhance those sites with our premium services. A fully distributed company, Automattic — celebrating ten years in 2015 — has over 500 staff in more than 50 countries.</p>
<p><strong>Founded:</strong> 2005</p>
<p><strong>Website:</strong> <a href="http://automattic.com">Automattic</a></p>
<p><strong>Number of Employees:</strong> 501-1000</p>
<p><strong>Industry:</strong> Internet</p>
<hr />
<p><a href="https://zapier.com">Zapier</a> (YC S12) gives people internet superpowers by letting them easily connect and automate the apps they use. Partners, including Salesforce, Intuit, Google, and Dropbox, utilize Zapier to offer their customers integrations with 1,000+ apps. The Zapier Developer Platform enables developers to add APIs for private or public use. Our growing, remote team has members around the world. We are on a mission to make work easier. We face formidable technical hurdles, unique marketing challenges, and exciting brand and design opportunities that come with serving a vast multi-sided audience. We are hiring. We're a 100% distributed team helping people across the world automate the boring and tedious parts of their job. We do that by helping everyone connect the web applications they already use and love. We believe that there are jobs a computer is best at doing and that there are jobs a human is best at doing. We want to empower businesses to create processes and systems that let computers do what they are best at doing and let humans do what they are best at doing.</p>
<p><strong>Founded:</strong> 2011</p>
<p><strong>Website:</strong> <a href="https://zapier.com">Zapier</a></p>
<p><strong>Number of Employees:</strong> 201-500</p>
<p><strong>Industry:</strong> Information Technology and Services</p>
<hr />
<p><a href="http://stackoverflow.com">Stack Overflow</a> is the largest, most trusted online community for developers to learn, share their knowledge, and build their careers. More than 50 million professional and aspiring programmers visit Stack Overflow each month to help solve coding problems, develop new skills, and find job opportunities. Founded in 2008, Stack Overflow partners with businesses to help them understand, hire, engage, and enable the world's developers. To learn more about Stack Overflow's business solutions - technical recruiting, advertising, market research, and enterprise knowledge sharing visit stackoverflowbusiness.com.</p>
<p><strong>Founded:</strong> 2008</p>
<p><strong>Website:</strong> <a href="http://stackoverflow.com">Stack Overflow</a></p>
<p><strong>Number of Employees:</strong> 201-500</p>
<p><strong>Industry:</strong> Internet</p>
<hr />
<p><a href="http://tntp.org/">TNTP</a> believes our nation’s public schools can offer all children an excellent education. A national nonprofit founded by teachers, we help school systems end educational inequality and achieve their goals for students.</p>
<p><strong>Our Work:</strong> We work at every level of the public education system to attract and train talented teachers and school leaders, ensure rigorous and engaging classrooms, and create environments that prioritize great teaching and accelerate student learning.</p>
<p><strong>Our Impact:</strong> Since 1997, we’ve partnered with more than 200 public school districts, charter school networks, and state departments of education. We have recruited or trained more than 50,000 teachers, redefined critical education issues through acclaimed studies like The Widget Effect (2009) and The Mirage (2015), and launched one of the nation’s premiere awards for excellent teaching, the Fishman Prize for Superlative Classroom Practice.</p>
<p><strong>Founded:</strong> 1997</p>
<p><strong>Website:</strong> <a href="http://tntp.org/">TNTP</a></p>
<p><strong>Number of Employees:</strong> 201-500</p>
<p><strong>Industry:</strong> Education Management</p>
<hr />
<p><a href="https://www.envato.com">Envato</a></p>
<p>Headquartered in Melbourne, Australia, we're a completely online company with an ecosystem of sites and services to help people get creative. In September 2014, one of our sites, ThemeForest, was the 90th most visited website in the world and it remains among the most visited Australian-owned website on the planet! With more than 350 staff and contractors worldwide, we've helped a community of creative sellers earn more than $500 Million. JobAdvisor awarded us the title of Australia's Coolest Company for Women and Diversity (2015 and 2016). We were also named as one of the Best Places to Work in Australia in the 2015, 2016, 2017 &amp; 2018 BRW Awards. On Envato Market, thousands of people earn a living selling things like WordPress themes, photos, music tracks, and illustrations. With Envato Elements, we oversee one of the world’s largest subscription services for digital creatives, providing hundreds of thousands of files for unlimited download for one flat fee. We offer website design and hosting with Envato Sites. On our education platform Tuts+, over 5 million people learn skills including code, illustration, photography, web design, and more, each month. We also run a freelance marketplace called Envato Studio. You might be surprised to know that not only do we run some of the biggest websites in the world; we’re also growing really fast!</p>
<p><strong>Founded:</strong> 2006
<strong>Website:</strong> <a href="https://www.envato.com">Envato</a>
<strong>Number of Employees:</strong> 201-500
<strong>Industry:</strong> Internet</p>
<hr />
<p><a href="http://www.fastly.com">Fastly</a></p>
<p>Fastly helps the world’s most popular digital businesses keep pace with their customer expectations by delivering fast, secure, and scalable online experiences. Businesses trust the Fastly edge cloud platform to accelerate the pace of technical innovation, mitigate evolving threats, and scale on demand. Founded in 2011, Fastly powers online destinations including Airbnb, GitHub, Alaska Airlines, Pinterest, Vimeo, The Guardian, The New York Times, and Ticketmaster. Learn more at Fastly.com and follow us on Twitter @fastly. Our global working community spans from San Francisco to Denver, New York, London, and Tokyo. We have raised $130M to date from investors including August Capital, Iconiq Capital, Battery Ventures, OATV, and Amplify Partners. We provide challenging work, opportunities to learn, high-quality teammates, and, most importantly, we have a lot of fun doing what we love. Our San Francisco headquarters is located in the heart of SOMA, close to MUNI, BART, and Caltrain.</p>
<p><strong>Founded:</strong> 2011
<strong>Website:</strong> <a href="http://www.fastly.com">Fastly</a>
<strong>Number of Employees:</strong> N/A
<strong>Industry:</strong> Internet</p>
<hr />
<p><a href="http://www.linaro.org/">Linaro</a></p>
<p>Linaro™ is the place where engineers from the world's leading technology companies define the future of Linux on ARM. The company is a collaborative engineering organization with over 240 engineers working on consolidating and optimizing open source software for the ARM architecture, including the GCC toolchain, the Linux kernel, ARM power management, graphics, and multimedia interfaces.</p>
<p><strong>Founded:</strong> 2010
<strong>Website:</strong> <a href="http://www.linaro.org/">Linaro</a>
<strong>Number of Employees:</strong> 201-500
<strong>Industry:</strong> Computer Software</p>
<hr />
<p><a href="http://kalypso.com">Kalypso LP</a></p>
<p>We help clients discover, create, and make better products with digital. Innovation has always been hard work. And since the introduction of digital technologies such as IoT, machine learning, and artificial intelligence, innovation has been disrupted - both in the way innovation happens and the innovations that are brought to market. However, with disruption comes opportunity. At the core, the challenge is still the same: to develop products that improve people's lives and deliver business results - but now with a growing set of capabilities to discover, create, and make better products with digital. We provide a comprehensive set of services to help clients apply digital across the innovation value chain.</p>
<p><strong>Founded:</strong> 2004
<strong>Website:</strong> <a href="http://kalypso.com">Kalypso LP</a>
<strong>Number of Employees:</strong> 201-500
<strong>Industry:</strong> Management Consulting</p>
<hr />
<p><a href="https://www.helpscout.com">Help Scout</a></p>
<p>Help Scout is designed with your customers in mind. Provide email and live chat with a personal touch, and deliver help content right where your customers need it, all in one place, all for one low price. The customer experience is simple and training staff is painless, but Help Scout still has all the powerful features you need to provide great support at scale. With best-in-class reporting, an integrated knowledge base, 50+ integrations, and a robust API, Help Scout lets your team focus on what really matters: your customers. Help Scout is trusted by 8,000+ customers in over 140 countries, including Basecamp, Buffer, GrubHub, AngelList, and Timbuk2.</p>
<p><strong>Founded:</strong> 2011
<strong>Website:</strong> <a href="https://www.helpscout.com">Help Scout</a>
<strong>Number of Employees:</strong> 51-200
<strong>Industry:</strong> Internet</p>
<hr />
<p><a href="http://www.hotjar.com">Hotjar</a></p>
<p>Hotjar is a powerful product that reveals the online behavior and voice of a website’s users. By combining both analysis and feedback tools, Hotjar gives the ‘big picture’ of how to improve a site's user experience and performance/conversion rates. Our team works on the compelling challenges that come with large-scale web traffic and analytics, on a product that has a real impact on the thousands of users we support around the world. We work in an agile environment, 100% remotely, and actively encourage both personal and professional growth; &quot;always be learning&quot; is one of our core values.</p>
<p>Headquartered on the beautiful island of Malta, in the ‘heart’ of the Mediterranean, Hotjar is a successful start-up that operates on a fully remote basis, with a key emphasis on personal development. Spread throughout the Americas, Europe, Africa, and Asia, our team casts a wide net across a multitude of locations, lifestyles, and backgrounds. It’s our differences that make us interesting, and our shared belief in Hotjar’s core values that bind us together.</p>
<p>Hotjar's culture is driven by respect, transparency, collaboration, and direct feedback. We have no room on our team for disrespect, office politics, or discrimination of any kind. We're obsessed with communicating with our users as well as within the team. We hate bureaucracy and slow-moving organizations, but we're suckers for well-defined processes. We love lean, iterative improvements, and success is measured by the value we create for our users.</p>
<p>Find out more about our product on our <a href="http://www.hotjar.com">company site</a> and <a href="http://docs.hotjar.com/v1.0/page/roadmap">product roadmap</a>. Learn more about our company culture and what it's like to work at Hotjar on our <a href="http://careers.hotjar.com">careers site</a> and <a href="http://www.hotjar.com/blog">company blog</a>.</p>
<p><strong>Founded:</strong> 2014
<strong>Website:</strong> <a href="http://www.hotjar.com">Hotjar</a>
<strong>Number of Employees:</strong> 51-200
<strong>Industry:</strong> Information Technology and Services</p>
<hr />
<p><a href="http://www.igalia.com">Igalia</a></p>
<p>Igalia is a highly specialized European company providing consultancy services and developing innovative open source solutions for a large set of software and hardware platforms. At Igalia, we work in the most exciting areas in open source software, including Browsers, Graphics, and Multimedia. We apply our knowledge to a wide variety of platforms and technologies in the Consumer Electronics market and provide companies with innovative solutions for a wide variety of devices, including smart TVs, set-top boxes, tablets, mobile phones, in-vehicle infotainment, and home automation systems.</p>
<p><strong>Founded:</strong> 2001
<strong>Website:</strong> <a href="http://www.igalia.com">Igalia</a>
<strong>Number of Employees:</strong> 51-200
<strong>Industry:</strong> Computer Software</p>
<hr />
<p><a href="http://www.aha.io/">Aha!</a></p>
<p>Aha! is the world's #1 product roadmap and marketing planning software. We help more than 5,000 innovative companies build and launch products customers love. More than 250,000 users worldwide trust Aha! to set brilliant strategy, capture customer ideas, create visual roadmaps, and manage breakthrough marketing programs.</p>
<p>The company was founded in 2013 by Silicon Valley veterans and product and marketing experts Brian de Haaff and Dr. Chris Waters. Aha! is the 13th fastest-growing private software company in the U.S. on the Inc. 5000 list. The company is self-funded and profitable with an entirely remote team.</p>
<p>Our goal at Aha! is to help people roadmap and launch products customers love and work with conviction. We want you to discover (or re-discover) your mojo — that sense of potency, confidence, and swagger that you have when you say to yourself, &quot;I've got this.&quot; So join us on this epic adventure.</p>
<p>In April 2017, we published a provocative book that shares our philosophy and the story of our exceptional growth — Lovability. The book explains that customer love is within reach for anyone who designs, builds, and delivers a product. Anyone. These concepts are not complicated, with one caveat. You have to be willing to dismiss preconceived notions about what can be loved. And that is what makes Aha! and the book unique. It takes a feeling that we all know — love — and applies it to the complex task of building products and companies. And it plainly shows you how to do it, while explaining why everything you think you know about hype-inspired innovation is likely wrong.</p>
<p>After all, life is short. Why spend it doing anything less than meaningful work with people you care about? Let us help you find even greater inspiration and a few new approaches to be your best.</p>
<p><strong>Founded:</strong> 2013
<strong>Website:</strong> <a href="http://www.aha.io/">Aha!</a>
<strong>Number of Employees:</strong> 51-200
<strong>Industry:</strong> Computer Software</p>
<hr />
<p><a href="http://doist.com">Doist</a></p>
<p>At Doist, we specialize in productivity software. We create tools that simplify and organize the workday. It's a modest goal, but an important one. When software tames the chaos and streamlines the little things, it frees you to focus on the big things. Things that amaze. Things that inspire. Things that change the world.</p>
<p>We're a productive, virtual team that makes productivity tools. We are designers, engineers, and communicators united by a common goal, not a common location. We understand the tools our customers need to succeed in today's workplace, because we need them, too. We build them, share them, and use them to power new ideas, new improvements, and new ways of working. It's how we've accomplished amazing things, and it's how we help our customers do the same.</p>
<p>Doist's mission is to help people do more each day so they can make the most of their potential.</p>
<p><strong>Founded:</strong> 2007
<strong>Website:</strong> <a href="http://doist.com">Doist</a>
<strong>Number of Employees:</strong> 51-200
<strong>Industry:</strong> Computer Software</p>
<hr />
<p><a href="http://tri.be">Modern Tribe</a></p>
<p>Modern Tribe is a rapidly growing digital agency with a modern twist. We believe in making quality products for other people and ourselves, balanced by living quality lives. Looking for a full-time or contract position? Check out our open gigs: <a href="http://m.tri.be/19p6">http://m.tri.be/19p6</a></p>
<p>We develop custom solutions for some of the world’s top companies, higher education institutions, government agencies, and startups. We pride ourselves on our ability to bridge people and technology, bringing the passion and dedication of an entrepreneur to every project.</p>
<p>Our team is 100% distributed &amp; spread around North America (with a touch in Latin America &amp; Europe). We believe in a class of artisans and craftsmen in control of their work who solve people's problems rather than just build more crap.</p>
<p>In addition to specializing in large-scale WordPress deployments, we’re also committed to open source and excellent product design. We’re the team behind plugins like The Events Calendar, Event Tickets, Image Widget, and GigPress.</p>
<p><strong>Founded:</strong> 2006
<strong>Website:</strong> <a href="http://tri.be">Modern Tribe</a>
<strong>Number of Employees:</strong> 51-200
<strong>Industry:</strong> Internet</p>
<hr />
<p><a href="http://www.moveon.org">MoveOn</a></p>
<p>MoveOn is the largest independent, progressive, digitally-connected organizing group in the United States. Launched in 1998, MoveOn pioneered online organizing and advocacy techniques that have become standard in politics, nonprofits, and industry in the U.S. and worldwide. We combine rapid-response political campaigning with deep strategic analysis, rigorous data science and testing, and a culture of grassroots member listening and participation that allows us to consistently and quickly identify opportunities for progressive change–and mobilize millions of members to seize them.</p>
<p>MoveOn members step up as leaders by using the MoveOn Petitions DIY organizing platform to create their own petitions and campaigns to drive social change. We are constantly innovating how we organize at scale and work together to win the biggest campaigns of our time—ending the Iraq War, electing Barack Obama president, enacting health care reform, and taking down the Confederate flag from the state house grounds in South Carolina.</p>
<p>MoveOn is made up of two organizations:</p>
<ol>
<li>MoveOn.org Civic Action, a 501(c)(4) nonprofit organization focusing on education and advocacy, providing civic engagement tools to the public, and building the progressive movement by encouraging and supporting the development of more grassroots leaders.</li>
<li>MoveOn.org Political Action, a federal PAC focused on running powerful progressive advocacy campaigns and demonstrating MoveOn members’ power at the ballot box by electing candidates who reflect MoveOn members’ values.</li>
</ol>
<p><strong>Founded:</strong> 1998
<strong>Website:</strong> <a href="http://www.moveon.org">MoveOn</a>
<strong>Number of Employees:</strong> 51-200
<strong>Industry:</strong> Political Organization</p>
<hr />
<p><a href="http://www.parse.ly">Parse.ly</a></p>
<p>Parse.ly empowers companies to understand, own, and improve digital audience engagement through data. We help companies that create content ensure the work they do makes the impact it deserves, whether that’s furthering journalism’s reach into underserved communities or creating loyal audiences for brands trying to reach consumers.</p>
<p>Parse.ly clients, who include some of the largest media companies in the world, harness their audience's potential through our content-centric real-time and historical content analytics dashboard, API, and data pipeline. Industry leaders—like Hearst, Time Inc., News Corp, and Conde Nast—partner with Parse.ly to bring clarity to content, audience, and analytics.</p>
<p><strong>Founded:</strong> 2009
<strong>Website:</strong> <a href="http://www.parse.ly">Parse.ly</a>
<strong>Number of Employees:</strong> 51-200
<strong>Industry:</strong> Internet</p>
<hr />
<p><a href="https://remoteyear.com/">Remote Year</a></p>
<p>Keep your job. See the world. Leave the planning to us. Remote Year brings together groups of inspiring professionals to travel, live, and work remotely in different cities around the world for a year or four months.</p>
<p><strong>Founded:</strong> 2015
<strong>Website:</strong> <a href="https://remoteyear.com/">Remote Year</a>
<strong>Number of Employees:</strong> 51-200
<strong>Industry:</strong> Leisure, Travel &amp; Tourism</p>
<hr />
<p><a href="http://www.rocana.com">Rocana</a></p>
<p>Rocana gives technology leaders total operational visibility, eliminating the boundaries of legacy IT monitoring and empowering technologists to lead digital transformation. Rocana Ops captures and analyzes all data from all sources, keeping it online and available for instant and future access. By combining event data warehouse capabilities with advanced machine learning, Rocana Ops gives technologists the ability to see emerging issues anywhere in the environment, minimize security risks, and surface opportunities for innovation.</p>
<p><strong>Founded:</strong> 2014
<strong>Website:</strong> <a href="http://www.rocana.com">Rocana</a>
<strong>Number of Employees:</strong> 51-200
<strong>Industry:</strong> Computer Software</p>
<hr />
<p><a href="http://www.VLPLawGroup.com">VLP Law Group</a></p>
<p>VLP is a business and transactional law firm that delivers top quality, efficient and cost-effective legal services. Our practice reaches across many industry sectors, including high tech, life sciences, angel and venture capital financings, clean tech, insurance, retail, consumer product, commercial lending and real estate. We represent clients that vary in size from early-stage startups to Fortune 500 companies. Our client base includes public and private corporations, venture capital investors, private equity funds, educational institutions, nonprofits and individuals. We provide general corporate, licensing, contract, intellectual property protection and counseling, securities regulation, financing, real estate, employment, merger and acquisition, insurance, tax, and other legal services. Our flexible structure allows us to offer a range of alternate fee and collaborative relationships to meet our clients'​ needs.</p>
<p><strong>Founded:</strong> 2008
<strong>Website:</strong> <a href="http://www.VLPLawGroup.com">VLP Law Group</a>
<strong>Number of Employees:</strong> 51-200
<strong>Industry:</strong> Law Practice</p>
<hr />
<p><a href="http://www.youneedabudget.com">YNAB (YouNeedABudget)</a></p>
<p>YNAB (why-nab, it stands for &quot;You Need A Budget&quot;​-- no offense intended) teaches a unique method of money management to help them break the paycheck to paycheck cycle, get out of debt, and save more money. We provide award-winning software to implement our method. YNAB operates with a growing team remotely located all over the world. We are passionate about helping people change their lives through delivering high-quality education and software. As a team, we operate under the following Cultural Manifesto: &quot;We think it’s important to be helpful and teach one another. You know, lend a helping hand, and look to ease a friend’s burden. When you’re friendly, I guess it means that you take an interest in others, and tend to listen more than you talk. If you (gasp!) change your mind, we think that’s cool, because…well, there’s nothing wrong with changing your mind. When speaking of others be kind. Is what you’re about to say true, kind, and necessary? We love confidently humble people who are proud of their craft, and stay humble so they don’t stop learning. You know what makes life great? You assume good intentions, and give others the benefit of the doubt. Even then, you may still disagree—a healthy problem to have between two people that listen, and then listen more. With all of that said, the disciplined and relentless pursuit of important (sometimes scary) things is awesome. And my heavens, if you have a sense of humo(u)r, we want you around (because you’re hilarious).&quot;​ We give birthday and Christmas gifts, have fantastic annual meet ups, give generous vacation that isn't tracked (if it's not at least four weeks, we'll scold you), provide unmatched scheduling flexibility (you don't &quot;clock in&quot;​--that's absurd), and basically have created a place where you: 1) Make a difference in people's lives 2) Express yourself through your best work and 3) Don't forget to have a life outside of work. Feel free to reach out if this speaks to you!</p>
<p><strong>Founded:</strong> 2004
<strong>Website:</strong> <a href="http://www.youneedabudget.com">YNAB (YouNeedABudget)</a>
<strong>Number of Employees:</strong> 51-200
<strong>Industry:</strong> Financial Services</p>
<hr />
<p><a href="https://10up.com">10up</a></p>
<p>We make finely crafted websites and tools for content creators, doing our part to create a better web for clients like Microsoft, Time, ESPN, and Adobe.</p>
<p><strong>Founded:</strong> 2011
<strong>Website:</strong> <a href="https://10up.com">10up</a>
<strong>Number of Employees:</strong> 51-200
<strong>Industry:</strong> Internet</p>
<hr />
<p><a href="http://www.articulate.com">Articulate</a></p>
<p>Trusted by 78,000+ organizations worldwide, Articulate makes it easy to create compelling courses for every device. Articulate 360 is a subscription that has everything course creators need for e-learning development. Articulate users can also find inspiration, guidance, product support, and best practices in the Articulate community: E-Learning Heroes. It’s the #1 community for course creators with over 700,000 members worldwide, and it’s completely free to join.</p>
<p><strong>Founded:</strong> 2002
<strong>Website:</strong> <a href="http://www.articulate.com">Articulate</a>
<strong>Number of Employees:</strong> 51-200
<strong>Industry:</strong> Computer Software</p>
<hr />
<p><a href="https://auth0.com">Auth0</a></p>
<p>Auth0, a global leader in Identity-as-a-Service (IDaaS), provides thousands of enterprise customers with a Universal Identity Platform for their web, mobile, IoT, and internal applications. Its extensible platform seamlessly authenticates and secures more than 1.5B logins per month, making it loved by developers and trusted by global enterprises. The company's U.S. headquarters in Bellevue, WA, and additional offices in Buenos Aires, London, Tokyo, and Sydney, support its customers that are located in 70+ countries.</p>
<p><strong>Founded:</strong> 2013
<strong>Website:</strong> <a href="https://auth0.com">Auth0</a>
<strong>Number of Employees:</strong> 51-200
<strong>Industry:</strong> Information Technology and Services</p>
<hr />
<p><a href="http://www.basho.com">Basho Technologies</a></p>
<p>Basho Technologies is the creator and developer of Riak, an open-source distributed database that provides extreme high-availability, fault-tolerance, and operational simplicity. Riak has rapidly gained adoption throughout the Fortune 100 and has become foundational to many of the world’s fastest-growing Web-based, mobile and social networking applications.</p>
<p><strong>Founded:</strong> 2008
<strong>Website:</strong> <a href="http://www.basho.com">Basho Technologies</a>
<strong>Number of Employees:</strong> 51-200
<strong>Industry:</strong> Computer Software</p>
<hr />
<p><a href="https://buffer.com">Buffer</a></p>
<p>Buffer is an intuitive, streamlined social media management platform trusted by brands, businesses, agencies, and individuals to help drive meaningful engagement and results on social media. We have a suite of products for publishing, engagement, analytics, and team collaboration. Our products are carefully considered and highly refined in order to help social media marketers and teams work more efficiently and effectively. Buffer is a team of real people, aligned in common values. Being a Buffer customer should feel like you have a whole team of people cheering for you. We want to see you succeed on social!</p>
<p><strong>Founded:</strong> 2010
<strong>Website:</strong> <a href="https://buffer.com">Buffer</a>
<strong>Number of Employees:</strong> 51-200
<strong>Industry:</strong> Internet</p>
<hr />
<p><a href="http://www.chess.com">chess.com</a></p>
<p>Chess.com is the #1 online chess site with more than 2.5 million members! Play for free, join tournaments, and improve your game with lessons and videos from top Grandmasters and coaches. Improve your tactics, openings, strategy, and endgame with training tools and discussion forums. Come join the global online chess community!</p>
<p><strong>Founded:</strong> 2006
<strong>Website:</strong> <a href="http://www.chess.com">chess.com</a>
<strong>Number of Employees:</strong> 51-200
<strong>Industry:</strong> Internet</p>
<hr />
<p><a href="https://www.clevertech.biz/">Clevertech</a></p>
<p>Clevertech has been helping the world's most innovative organizations build incredible, game-changing technology.</p>
<p><strong>Founded:</strong> 2000
<strong>Website:</strong> <a href="https://www.clevertech.biz/">Clevertech</a>
<strong>Number of Employees:</strong> 51-200
<strong>Industry:</strong> Information Technology and Services</p>
<hr />
<p><a href="http://www.fire-engine-red.com/">Fire Engine Red</a></p>
<p>Fire Engine RED is an innovative marketing, technology, and data solutions company that’s served the education market since 2001. We have five divisions that reflect our areas of expertise: Student Search, CRM, Software Products, Big Data, and Creative and Digital Services. We’ve built quite a reputation – we have more than 550 clients, including 365 admissions offices in the U.S. and abroad. To describe us, they use words like “rock stars,” “superheroes,” and &quot;lifesavers.&quot;​ In 2011, Inc. Magazine named Fire Engine RED one of the country’s “Top Small Company Workplaces” for our talented team, innovative company culture, and core values. We’re 100% virtual, so we’re able to hire the very best people, wherever they live.</p>
<p><strong>Founded:</strong> 2001
<strong>Website:</strong> <a href="http://www.fire-engine-red.com/">Fire Engine Red</a>
<strong>Number of Employees:</strong> 51-200
<strong>Industry:</strong> Higher Education</p>
<hr />
<p><a href="https://lullabot.com">Lullabot</a></p>
<p>Lullabot is a strategy, design, and Drupal development company that has created some of the most high-profile and award-winning websites for large-scale publishers. As one of the first Drupal agencies, Lullabot is highly recognized for their body of work, authentic approach, and leadership in Drupal innovation, having contributed to more than 150 modules. Lullabot clients include NBC Universal, George Lucas Educational Fund (Edutopia), NYU School of Medicine, IBM, Hotwire, The Recording Academy, Verizon, and Google. We're Lullabot; it's great to meet you.</p>
<p><strong>Founded:</strong> 2006
<strong>Website:</strong> <a href="https://lullabot.com">Lullabot</a>
<strong>Number of Employees:</strong> 51-200
<strong>Industry:</strong> Internet</p>
<hr />
<p><a href="http://www.nearform.com">nearForm</a></p>
<p>NearForm is the next evolution of a software company. Our team of exceptional people build better software faster, for our clients and our communities. We have been developing complex solutions for global organisations since 2011. From high intensity digital transformations, to delivering fullstack cloud-native web applications, our pragmatic agile approach is not just proven but is constantly evolving. By delivering world-class design coupled with world-class development, we have fundamentally changed customers'​ expectations of what's possible.</p>
<p><strong>Founded:</strong> 2011
<strong>Website:</strong> <a href="http://www.nearform.com">nearForm</a>
<strong>Number of Employees:</strong> 51-200
<strong>Industry:</strong> Information Technology and Services</p>
<hr />
<p><a href="http://www.onthegosystems.com">OnTheGoSystems</a></p>
<p>OnTheGoSystems develop WordPress plugins, WPML and Toolset. Toolset makes it easier and quicker for users to build a professional website without complex coding. WPML is the world’s most popular multilingual plugin, helping more than 700k websites translate their content. It is integrated with the most popular translation services, themes, and plugins, including WooCommerce. We also offer professional translation services. The people that make of OnTheGoSystems are comprised of more than 90 mostly full-time staff members from 6 continents, 39 countries, and 67 cities. OUR COMPANY OF PRODUCTS WPML is the 1 WordPress Multilingual Plugin. WPML is used to help you translate any website, big or small, e-commerce included. WPML is used in over 700,000 websites, is compatible with all the major plugins, themes, and page builders, (including WooCommerce). WPML allows you to translate everything: pages, posts, custom types, forms, taxonomy, menus, and themes text. Toolset allows you to build WordPress sites in hours, not weeks. Toolset lets you build your own listing sites, directories, membership sites, and shops. It is made of 8 component plugins that help developers create and display custom WordPress content without having to use PHP. Posts and pages aren’t enough for every site. If you need more, Toolset and it’s 8 plugins are the answer. ICanLocalize is a translation agency specialized in software and website localization. We translate WordPress websites with WPML, iOS and Android mobile apps, software, and any kind of text file. We have over 2,000 certified, native translators working in more than 45 languages. Our technology simplifies the translation process and ensures a smooth workflow. We offer fast, professional and affordable translations that businesses of all sizes trust.</p>
<p><strong>Founded:</strong> 2007
<strong>Website:</strong> <a href="http://www.onthegosystems.com">OnTheGoSystems</a>
<strong>Number of Employees:</strong> 51-200
<strong>Industry:</strong> Information Technology and Services</p>
<hr />
<p><a href="http://www.peopleg2.com">PeopleG2</a></p>
<p>PeopleG2 is a 10+ year old Human Capital Risk Management firm founded on the core belief that all suppliers of services should “truly make a difference” – even if they’re operating in an industry that most people view as highly commoditized. This is WHY we exist. Our value-add approach to standard and custom pre-employment screening programs is based on keeping the element of &quot;personal staff attention and critical thinking&quot;​ noticeably in the mix when servicing all customer organizations. Given recent multi-million dollar FTC fines against some of our competitors for ... &quot;not using reasonable procedures to ensure the accuracy of information sold to customers&quot;​ ... our adherence to a delivery model involving personal staff attention and critical thinking is HOW we make a difference as a supplier of HR-related decision-support services. The accuracy and completeness of an individual's information contained on commercial and public/government agency databases should never be taken for granted, and employers making hiring or promotion decisions should feel assured that these decisions are not unduly omitting -- or erroneously considering -- key information. This is WHAT we do -- deliver the highest quality Human Capital Due Diligence services to support the highest quality employment and workforce decisions. The recent attention our company has received in Forbes and HR Executive Online highlights that we're not only approaching this market differently, but also delivering higher-end, more strategic services that no other industry provider offers.</p>
<p><strong>Founded:</strong> 2001
<strong>Website:</strong> <a href="http://www.peopleg2.com">PeopleG2</a>
<strong>Number of Employees:</strong> 51-200
<strong>Industry:</strong> Security and Investigations</p>
<hr />
<p><a href="https://www.percona.com/">Percona</a></p>
<p>Percona is the only company that delivers enterprise-class support, consulting, managed services, and software for MySQL®, MariaDB®, MongoDB®, and other open source databases across on-premise and cloud-based platforms. Percona optimizes databases to maximize application performance. Our global experts are available 24x7x365 and have worked with over 3,000 clients worldwide – including the largest technology companies. Percona is the champion of unbiased open source database solutions and provides the best solution for our customers regardless of their database architecture or platform. Our software is 100% free and open source and is a drop-in replacement for MySQL and MongoDB databases. Percona was founded in August 2006 by Peter Zaitsev and Vadim Tkachenko and now employs a global network of experts with a staff of over 140 people. Our large and diverse customer list boasts one of the highest renewal rates in the business. Our expertise is visible in our widely read <a href="https://www.percona.com/blog/">Percona Database Performance blog</a> and our book High Performance MySQL.</p>
<p><strong>Founded:</strong> 2006
<strong>Website:</strong> <a href="https://www.percona.com/">Percona</a>
<strong>Number of Employees:</strong> 51-200
<strong>Industry:</strong> Information Technology and Services</p>
<hr />
<p><a href="https://scrapinghub.com">Scrapinghub</a></p>
<p>Scrapinghub provides the leading technology and consulting services to deliver successful web crawling and data processing solutions. Our technology includes:</p>
<ul>
<li>Open source libraries, such as Scrapy, developed mostly by our team</li>
<li>A PaaS for running and managing web crawls</li>
<li>A service that can automatically extract data based on examples</li>
</ul>
<p><strong>Founded:</strong> 2010
<strong>Website:</strong> <a href="https://scrapinghub.com">Scrapinghub</a>
<strong>Number of Employees:</strong> 51-200
<strong>Industry:</strong> Information Technology and Services</p>
<hr />
<p><a href="http://www.teamsnap.com">TeamSnap</a></p>
<p>Founded in 2009 and headquartered in Boulder, Colo., TeamSnap has taken the organization of youth, recreational and competitive sports into the 21st century. Fifteen million coaches, administrators, players and parents use TeamSnap’s web and smartphone apps to sign up, schedule, communicate and coordinate everything for the team, the club and the season. TeamSnap team, club and league management software makes organizing sports as simple as click, tap and go.</p>
<p><strong>Founded:</strong> 2009
<strong>Website:</strong> <a href="http://www.teamsnap.com">TeamSnap</a>
<strong>Number of Employees:</strong> 51-200
<strong>Industry:</strong> Consumer Services</p>
<hr />
<p><a href="http://www.cheatsheet.com">The Cheat Sheet</a></p>
<p>The Cheat Sheet is dedicated to providing audiences the information they want in an approachable, entertaining way. Our readers have a variety of interests, and as a lifestyle site we strive to reflect this by covering a wide-range of subjects. We want you to save time and live more, so we closely follow, research, and write about topics to bring you the most up-to-date guides, reviews, lists, and advice.</p>
<p><strong>Founded:</strong> 2009
<strong>Website:</strong> <a href="http://www.cheatsheet.com">The Cheat Sheet</a>
<strong>Number of Employees:</strong> 51-200
<strong>Industry:</strong> Online Media</p>
<hr />
<p><a href="https://x-team.com/">X-team</a></p>
<p>X-Team is an international company founded in Melbourne, Australia, that helps companies scale their development teams by providing them with motivated teams of developers from around the world. We are 100% remote and believe in building a world where developers can have access to an environment of growth and incredible opportunities regardless of where they live. We are also a community of people dedicated to unleashing our potential. We’ve fostered a unique, active lifestyle and culture around this idea that continues to attract thousands of developers to apply every day. We proactively support our developers, fund their learning and growth, connect them in roaming hacker houses around the world, and give them a remote environment that motivates and inspires them on a daily basis. While other companies merely place and drop their talent, we provide unified teams of developers centered around the same beliefs, values, and lifestyle. We're uniquely situated to help shape how companies grow their businesses in the digital age and aid them in being able to do so properly with the right people. We work with big, innovative brands like Riot Games, Fox Broadcasting, Kaplan Inc., Coinbase, Google, Twitter, Beachbody and more…</p>
<p><strong>Founded:</strong> 2004
<strong>Website:</strong> <a href="https://x-team.com/">X-team</a>
<strong>Number of Employees:</strong> 51-200
<strong>Industry:</strong> Internet</p>
<hr />
<p><a href="http://www.genuitec.com">Genuitec</a></p>
<p>With year-over-year growth since the company was founded in 1997, Genuitec continues to grow by offering superior products for the modern developer at value-driven prices. Whether you are a full stack developer coding for the enterprise or just looking to take advantage of the latest in modern web development, Genuitec has a solution—including a simple way to get the right tools configured and delivered to your teams. We provide the latest technologies for creating Java EE and Web applications— and make it simple to tailor your environment to fit your needs!</p>
<p><strong>Founded:</strong> 1997
<strong>Website:</strong> <a href="http://www.genuitec.com">Genuitec</a>
<strong>Number of Employees:</strong> 51-200
<strong>Industry:</strong> Internet</p>
<p>Eclipse Leadership
As a founding member of the Eclipse Foundation, we actively participate in strategy, development, and direction for the organization.</p>
<p>Customer Commitment
Today, Genuitec supports one of the fastest growing developer communities for Eclipse tools. Our support forums allow users to engage directly with staff to answer any number of technical needs.</p>
<hr />
<p><a href="https://www.axelerant.com/about">Axelerant</a></p>
<p>We fuel digital experiences with agency affiliates as the integrated global delivery partner. As a global company that puts care into employee happiness, engineering excellence, and customer success, we are in striking contrast to the typical outsourcing option. We are a diverse team working remotely across many time zones, with success stories that back up capabilities, and a reputation for an unconventional work environment that empowers. We are the individuals directly challenging what it means to do global delivery differently for employees and partners. Success management as our service framework operationally is part of who we are at Axelerant. All of our processes and practices are driven by this core, continuously iterated method. What this means is success management teams and success journey mapping for our partners.</p>
<p><strong>Founded:</strong> 2005
<strong>Website:</strong> <a href="https://www.axelerant.com/about">Axelerant</a>
<strong>Number of Employees:</strong> 51-200
<strong>Industry:</strong> Internet</p>
<hr />
<p><a href="http://www.sonatype.com">Sonatype</a></p>
<p>Sonatype ensures that only the best components are used throughout the software development lifecycle so that organizations don't have to make the tradeoff between going fast and being secure. More than 120,000 organizations use Sonatype's Nexus solutions to support agile, Continuous Delivery, and DevOps practices globally.</p>
<p><strong>Founded:</strong> 2008
<strong>Website:</strong> <a href="http://www.sonatype.com">Sonatype</a>
<strong>Number of Employees:</strong> 51-200
<strong>Industry:</strong> Computer Software</p>
<hr />
<p><a href="http://www.accelerationpartners.com">Acceleration Partners</a></p>
<p>We are the leading global affiliate marketing agency in the industry. Recently our company was named Best Performance Marketing Agency and Industry Choice of Agency by the International Performance Marketing Association. We strive to be a high-value, transparent and performance-driven partner to our clients as well as change the work-life paradigm for our team members. In support of a healthy work-life paradigm, Acceleration Partners is a 100% remote work environment. Our team members are accountable, genuine partners, thought leaders and problem-solvers. They challenge the status quo, practice radical candor, are continuous learners and are always looking for ways to grow and improve.</p>
<p>In addition to our numerous industry and service awards, Acceleration Partners (AP) is also honored to have been named to top company culture lists by Glassdoor, Entrepreneur, Fortune, Forbes, Ad Age, Inc. and The Boston Globe. Our founder and CEO, Robert Glazer, was also ranked 2 on Glassdoor’s Highest-Rated CEOs list.</p>
<p>At AP, we work and live by strong core values and operating principles. These are not just cliché concepts that we tout; they are interwoven into every aspect of our organization. They influence who and how we hire, how we promote, how we service our clients and even how we live our personal lives.</p>
<p>Through our Performance Partnerships® program management framework, we help clients create transparent, high-value programs that bring more customers, incremental sales and faster growth. Acceleration Partners’ growing global reach, discerning industry expertise and relationships with performance-focused partners has led to a client roster that includes Target, adidas, Gymboree, Reebok, Warby Parker, ThirdLove, ButcherBox, FindYourTrainer, Smart Destinations, Luca + Danni and many other brands.</p>
<p><strong>Founded:</strong> 2007
<strong>Website:</strong> <a href="http://www.accelerationpartners.com">Acceleration Partners</a>
<strong>Number of Employees:</strong> 51-200
<strong>Industry:</strong> Marketing and Advertising</p>
<hr />
<p><a href="https://webflow.com/">Webflow</a></p>
<p>Webflow empowers designers to create beautiful, responsive websites—without writing a single line of code, or relying on a developer. Its drag-and-drop interface looks, feels, and works like familiar desktop design tools, and writes clean, semantic code any developer would be proud of. Get started today—for free—but brace yourself: your workflow's about to be transformed. Webflow is backed by Y Combinator, Khosla Ventures, Tim Draper, and other awesome investors.</p>
<p><strong>Founded:</strong> 2012
<strong>Website:</strong> <a href="https://webflow.com/">Webflow</a>
<strong>Number of Employees:</strong> 51-200
<strong>Industry:</strong> Computer Software</p>
<hr />
<p><a href="https://www.chaserhq.com">Chaser</a></p>
<p>At Chaser, we are determined to build incredible cloud-based credit control software. Our software is the perfect complement to your finance team. It provides the tools to effectively automate chasing customers to pay their invoices. It gives you the insights to better decide which customers to grant credit to and how best to chase up your customers to pay their invoices. Chaser, born out of Finance Director experience, was named Xero App Partner of the Year for 2016. Future 50 named Chaser as one of Britain's Most Disruptive Businesses as well as awarding the Friend to Business Award in 2015. &quot;​...Its simple and easy to use interface was the winner for us. Our credit team now have very little to do so can focus on the more important things and the results in reducing aged debtors has been beyond even our expectation.&quot;​ - Francois Roux, Mondago</p>
<p><strong>Founded:</strong> 2013
<strong>Website:</strong> <a href="https://www.chaserhq.com">Chaser</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Accounting</p>
<hr />
<p><a href="http://www.trydesignlab.com">DesignLab</a></p>
<p>We empower creators to do the work they love, through mentor-led, online design education with a focus on quality and outcomes. Harish Venkatesan, one of our co-founders, came up with the idea for the company in 2012 while reading Creative Workshop, a book of design exercises. It became clear that a continuous cycle of feedback and iteration is essential for anyone aspiring to improve their design skills.</p>
<p>Over the past five years, we’ve brought that idea to life by crafting our vision of an ideal online learning platform. Every Designlab student is paired with an expert designer as their mentor, completes several hands-on projects, and receives ongoing design feedback and peer support from our student community.</p>
<p>Our mission is to empower creators. With today’s design tools, creators can build products and services with the potential to enrich the lives of billions of people worldwide. New products are launched every day, so good design is crucial to staying relevant in a competitive market. Today, more than ever before, you can cheaply experiment and reinvent your skills until you find what you truly love. After all, you spend 60% of your waking hours at work, so it’s only right that you enjoy it.</p>
<p>In this environment, we believe these traits are more important than ever:</p>
<ul>
<li>Creativity</li>
<li>Lifelong learning</li>
<li>Passion for your work</li>
</ul>
<p>These have no place:</p>
<ul>
<li>Crippling student debt</li>
<li>Unfulfilling jobs</li>
<li>Unsatisfying careers that we choose by default</li>
</ul>
<p>We’re combining the power of the internet with the magic of 1-on-1 mentoring to create an invaluable educational experience that is affordable and accessible worldwide. Our goal is to guide you to find the creative work you love and to help you become a master of your craft. Join us!</p>
<p><strong>Founded:</strong> 2013
<strong>Website:</strong> <a href="http://www.trydesignlab.com">DesignLab</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> E-learning</p>
<hr />
<p><a href="http://www.fiveq.com">Five Q</a></p>
<p>Five Q is a software and services company, founded on the principle of multiplying impact. At the heart of what we do is an unwavering commitment to grow the missions of nonprofit organizations in the US and worldwide. Since 2004, Five Q has been serving nonprofit organizations by helping marketers and fundraisers reach their digital audiences through user experience, creative design, SEO, SEM, email marketing, website development, and website personalization. Five Q is headquartered in Atlantic, Iowa. Since adding the Journity Platform, Five Q is a Seed Series funded company with team members in Atlantic and across the US.</p>
<p><strong>Founded:</strong> 2004
<strong>Website:</strong> <a href="http://www.fiveq.com">Five Q</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Internet</p>
<hr />
<p><a href="https://retailzipline.com">Retail Zipline</a></p>
<p>Zipline helps retailers coordinate their brick-and-mortar stores by streamlining communications between HQ and the field and easily centralizing and personalizing messages</p>
<p><strong>Founded:</strong> 2011
<strong>Website:</strong> <a href="https://retailzipline.com">Retail Zipline</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Computer Software</p>
<hr />
<p><a href="https://balsamiq.com/">Balsamiq</a></p>
<p>Balsamiq is a solid, independent little software company. We believe that life’s too short for bad software! We started in 2008 as a one-man-shop, and have been growing organically ever since. Balsamiq Wireframes is our small graphical tool to sketch out user interfaces, for websites and web / desktop / mobile applications. We focus on the ideation phase, providing you with a clean tool that lets you get in the flow and stay focused on structure rather than colors and icons. Balsamiq provides enough interactivity to replace prototypes most of the time, and makes it easy to collaborate and get feedback on your wireframes.</p>
<p><strong>Founded:</strong> 2008
<strong>Website:</strong> <a href="https://balsamiq.com/">Balsamiq</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Computer Software</p>
<hr />
<p><a href="https://basecamp.com">Basecamp</a></p>
<p>Basecamp solves the critical problems that every growing business deals with. It’s the saner, calmer, organized way to manage projects and communicate company-wide. We built Basecamp because we need what you need: a system to help stay on top of it all. A way to keep people on the same page, organize and share information, discuss, make and nail down decisions. A system that helps us prioritize meaningful work, cut out wasted time and restore some work-life balance to employees.</p>
<p><strong>Founded:</strong> 1999
<strong>Website:</strong> <a href="https://basecamp.com">Basecamp</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Internet</p>
<hr />
<p><a href="https://close.io">Close.io</a></p>
<p>At Close.io we're creating a product our customers love! With built-in calling, SMS, and email all in one platform, Close.io is designed to help you close more deals. Try it for free ⚡️ <a href="https://app.close.io/signup/">https://app.close.io/signup/</a></p>
<p><strong>Founded:</strong> 2013
<strong>Website:</strong> <a href="https://close.io">Close.io</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Internet</p>
<hr />
<p><a href="https://codeable.io">Codeable</a></p>
<p>Codeable is the #1 online outsourcing service for WordPress. With 275+ handpicked and pre-screened WordPress experts, we have completed over 53.5K+ projects since the beginning of 2013, with 98.9% of them receiving a 5-star rating. We're quite a bit different from all of the other outsourcing sites online, in that all of our WordPress developers have been carefully screened and vetted to ensure they meet our high standards of providing quality communication (in English), clean code, and responsiveness.</p>
<p><strong>Founded:</strong> 2012
<strong>Website:</strong> <a href="https://codeable.io">Codeable</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Internet</p>
<hr />
<p><a href="https://www.collage.com">Collage.com</a></p>
<p>Collage.com is a 100% employee-owned, profitable, bootstrapped company with about 50 employees that has rapidly grown from $0 to $25 million in annual revenue since 2013. We're different from other companies: our innovative all-remote work culture was featured in a Harvard Business School case study last year. We're looking for ambitious, nice people to join us in our quest to bring great custom photo products to the world. Unlike some of our competitors, we're not beholden to shareholders and we're not a giant corporation, so we're able to put our customers and employees first in everything we do. That's why we offer stock options, health care, and retirement benefits to all employees, encourage a healthy work-life balance, and offer a no-questions-asked satisfaction guarantee on all customer orders. We make sure to only hire people we think will be successful: we want you to set you up to succeed on our team, not fail! Oh yeah: we don't have an office. And we don't have any plans to get one. Why? Well, do you like commuting? We don't. We're nationally recognized for our 100% remote team, with employees working together in states across the country. The entire company meets together in person twice a year in Ann Arbor, Michigan to get to know each other and work on strategy. Last year, our remote work culture was even profiled in a case study by the prestigious Harvard Business School (we are the first all-remote company they profiled). Learn more in an interview our co-founder Joe Golden did with Remote.co about how we work remotely.</p>
<p><strong>Founded:</strong> 2008
<strong>Website:</strong> <a href="https://www.collage.com">Collage.com</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Internet</p>
<hr />
<p><a href="http://meetedgar.com">Edgar</a></p>
<p>Edgar is a social media scheduling tool like no other. Instead of publishing your updates just once and throwing them away like yesterday's rubbish, he carefully catalogues them in a library that you build over time. All of your updates are sorted into categories you create and published on a schedule that you choose, so Edgar publishes what you want, when you want it. No manual scheduling, no busywork, and no hassle. Edgar eliminates the tedious busywork of always writing and re-writing social media updates, so you can break the cycle of writing and posting new updates every day and spend more of your time on social media interacting directly with your audience in real time.</p>
<p><strong>Founded:</strong> 2014
<strong>Website:</strong> <a href="http://meetedgar.com">Edgar</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Internet</p>
<hr />
<p><a href="http://www.flexjobs.com">FlexJobs</a></p>
<p>Founded in 2007, FlexJobs is dedicated to helping job seekers find a better way to work. We are a company full of passionate people who believe in the importance of remote and flexible jobs, and we are committed to providing a better way to find them. We think the old ways of working are rigid and broken. There is a better way to work.</p>
<p><strong>Founded:</strong> 2007
<strong>Website:</strong> <a href="http://www.flexjobs.com">FlexJobs</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Human Resources</p>
<hr />
<p><a href="http://www.groovehq.com">Groove</a></p>
<p>We make hassle-free customer support and engagement software for startups and small businesses. Making your customers happy shouldn’t be a painful, time-consuming process. Groove is built on the belief that customer support software should be simple, powerful, and make it easy for awesome businesses to provide equally awesome support.</p>
<p><strong>Founded:</strong> 2011
<strong>Website:</strong> <a href="http://www.groovehq.com">Groove</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Computer Software</p>
<hr />
<p><a href="https://www.howtogeek.com">How-To Geek</a></p>
<p>We are an online tech magazine, dedicated to providing interesting articles, how-tos, and even fun trivia to our audience of geeky (and not-so-geeky) readers. Founded in 2006, How-To Geek’s goal was to bring a better how-to site to the internet—with content that’s understandable for regular people, but geeky enough that the more technical readers would find it interesting as well.</p>
<p><strong>Founded:</strong> 2006
<strong>Website:</strong> <a href="https://www.howtogeek.com">How-To Geek</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Internet</p>
<hr />
<p><a href="https://hubstaff.com">Hubstaff</a></p>
<p>Hubstaff helps businesses reach new levels of productivity through better team, project, and time management. Hubstaff (hubstaff.com) time tracking software is used by over 10,000 teams across the world that want to achieve more. Track work hours, pay team members, invoice clients, see in-depth reporting, and more through our web dashboard, desktop, and mobile apps. Hubstaff Talent (talent.hubstaff.com), our 100% free search platform, helps freelancers and businesses find the world's best remote work and talent. Hubstaff Tasks (hubstaff.com/tasks), our flexible yet streamlined project management tool, allows teams to work seamlessly together toward shared goals.</p>
<p><strong>Founded:</strong> 2013
<strong>Website:</strong> <a href="https://hubstaff.com">Hubstaff</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Internet</p>
<hr />
<p><a href="http://jacksonriver.com/">Jackson River</a></p>
<p>Jackson River is a technology company who works exclusively with progressive nonprofits to help them thrive in the digital world. Jackson River built Springboard, a Digital-First platform that helps nonprofits catalyze support for their cause. Springboard is powerful, open, creative supporter-engagement software, built on Salesforce.com, the world's leading CRM, with a focus on creative engagement, social, mobile and data-driven insights. Springboard Fundraising maximizes giving and sustainer engagement. Springboard Advocacy focuses on impact, analytics, and innovation, including social and peer-to-peer advocacy. Springboard provides full flexibility with email-marketing technology that offers marketing automation, superior deliverability, and social integration. We are a virtual company with 30 staff in over 12 states, headquartered in Washington, DC.</p>
<p><strong>Founded:</strong> 2008
<strong>Website:</strong> <a href="http://jacksonriver.com/">Jackson River</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Information Technology and Services</p>
<hr />
<p><a href="http://www.knack.com">Knack</a></p>
<p>Our goal is to make it easy to do amazing things with your data. Knack combines a powerful online database with simple tools like forms, searches, and calendars so you can build custom apps with no coding required. We take care of all the hard stuff like hosting, security, and reliability so you can focus on what's important: your data.</p>
<p><strong>Founded:</strong> 2010
<strong>Website:</strong> <a href="http://www.knack.com">Knack</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Internet</p>
<hr />
<p><a href="http://www.marsbased.com">MarsBased</a></p>
<p>MarsBased is a Barcelona-based web &amp; app development consultancy that delivers flawless and tasteful code, crafted with precision by a senior team of developers with expertise on Ruby on Rails, Angular and Javascript frameworks. We do business the same way we approach life; with our heads up, a limitless mindset and strong core values. We take on projects the same way we engage with technology; with a fascination for novelty, endless enthusiasm, and creative sophistication. We’re a consulting agency with a startup DNA, that’s why we like to contribute to the startup and tech communities of our beloved Barcelona. We’re the developers of BCN Startup Map, BCN Startup Digest, and hosts of Startup Grind Barcelona. We’re highly involved in the BCN development &amp; startup community by collaborating with different initiatives such as Fundación INLEA (Link2start), IronHack &amp; others.</p>
<p><strong>Founded:</strong> 2013
<strong>Website:</strong> <a href="http://www.marsbased.com">MarsBased</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Information Technology and Services</p>
<hr />
<p><a href="https://www.olark.com">Olark</a></p>
<p>Olark is easy-to-use live chat software that lets you talk to customers on your website. Olark can help you track leads, drive sales, increase conversions, and provide great customer service. Real-time visitor information like login name, geographic location, purchase history and cart contents help you personalize every interaction and strengthen customer relationships. Sign up and start making your customers happier today! Check out our new demo videos for a behind the scenes look at Olark: <a href="https://hello.olark.com/olark-demo-videos">Olark Demo Videos</a></p>
<p><strong>Founded:</strong> 2008
<strong>Website:</strong> <a href="https://www.olark.com">Olark</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Information Technology and Services</p>
<hr />
<p><a href="http://www.partnercentric.com">PartnerCentric</a></p>
<p>PartnerCentric, Inc. is the largest woman-owned and fully remote performance marketing agency in the industry. We build meaningful relationships beyond borders and aim to be the best partners for our clients and for each other. Our team, comprised of proven industry veterans and strategists, has cultivated over 70,000 relationships to connect our clients with the right partners for long-term success. We utilize proprietary technology and innovative, strategic management to drive the highest ROI for some of the world’s most respected brands. Our premium management ensures that we are 100% funded by happy customers and our clients are supported by the most tenured account managers in the industry, with an average of over 12 years of experience. We are 100% remote and are very intentional about the way we work and the meaningful relationships we build virtually with each other and for our clients every day. We believe in the power and flexibility in our own lives to go beyond the borders of the traditional work space. And we believe that our work and the approach we take brings that same sense of balance to our clients - empowering them with the control, freedom, and outcomes they desire. We do this by going beyond the artificial limitations set in our space to bring to bear the meaningful relationships and results our clients define, regardless of their own limitations. It is in our DNA to defy the status quo, to be creative and smart and diligent, in order to achieve and exceed expectations. This is what we do for ourselves. This is what we do for our clients.</p>
<p><strong>Founded:</strong> 2004
<strong>Website:</strong> <a href="http://www.partnercentric.com">PartnerCentric</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Marketing and Advertising</p>
<hr />
<p><a href="http://particular.net">Particular Software</a></p>
<p>What you do every single day matters. Be Particular.</p>
<p><strong>Founded:</strong> 2010
<strong>Website:</strong> <a href="http://particular.net">Particular Software</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Computer Software</p>
<p>At Particular Software, it's not just about writing software and building great products. It’s about improving the lives of the developers who drive this industry. CEO and founder, Udi Dahan, sets the tone for challenging ourselves to craft the best product, provide the best customer service, and build the most agile and effective organizational structure. We ARE Particular.</p>
<p>Our Technology</p>
<p>Our core products are built with C#, with a smattering of WPF and JavaScript single-page applications mixed in. But, this is only the beginning of the story. As a fully dispersed company, we live and breathe GitHub and Slack. As a developer-focused company, we are ruthless about automation - we use TeamCity and Octopus Deploy - we build and maintain our own friendly bot to take the truly boring tasks off our hands. As a messaging company, we have the opportunity to use MSMQ, SQL Server, Azure, Oracle, NHibernate, RavenDB, and a host of different IoC containers. Azure Service Fabric and Roslyn loom on the horizon. We are all about empowerment. Each one of us can lead the way and help determine the direction. The technology we are using in the future could very well be up to you.</p>
<hr />
<p><a href="https://www.voxnest.com/">Voxnest</a></p>
<p>Solutions for Professional Podcasting</p>
<p><strong>Founded:</strong> 2006
<strong>Website:</strong> <a href="https://www.voxnest.com/">Voxnest</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Entertainment</p>
<p>What is Voxnest? Voxnest is a set of podcasting tools that help media publishers, indie podcasters, and advertisers monetize, manage, and track content. These tools—Dynamo, Spreaker Enterprise and Spreaker—improve workflows and help yield greater earnings.</p>
<p>Tools</p>
<ul>
<li>Dynamo: Monetize podcasts with Dynamo by enabling dynamic spots across episodes that refresh automatically at each play with targeted ads.</li>
<li>Spreaker Enterprise: A complete podcast management system that offers a clear overview and full control over the audio publishing process.</li>
<li>Spreaker: An all-in-one podcasting platform that gives creators everything they need to grow their business, from recording and production tools to distribution and dynamic ad insertion.</li>
</ul>
<p>Team Voxnest’s team includes tech entrepreneurs, industry veterans, and investors with extensive experience in podcasting ecosystems. In 2018, Voxnest acquired Spreaker and BlogTalkradio, creating a solid network of solution-driven podcasting companies.</p>
<hr />
<p><a href="https://studentloanhero.com">Student Loan Hero</a></p>
<p>Student Loan Hero is the smartest way for student loan borrowers to repay student loans, saving time, money, and frustration. Our student loan tools allow a student loan borrower to sync student loan data, learn about 120+ federal and private repayment options, and calculate different repayment scenarios. Student Loan Hero, Inc. is helping 200,000+ borrowers manage and eliminate over $3.5 billion dollars in student loan debt. We're on a mission to help 44 million Americans manage their student loans smarter.</p>
<p><strong>Founded:</strong> 2012
<strong>Website:</strong> <a href="https://studentloanhero.com">Student Loan Hero</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Financial Services</p>
<hr />
<p><a href="https://toggl.com/">Toggl</a></p>
<p>Toggl is a leading online time tracking tool, which is extremely popular among freelancers, consultants, and small companies. It allows users to track the time spent on various projects and analyze productivity. It’s internet-based and can be up and running from scratch in less than a minute. Toggl has real-time sync with web tracker, desktop widgets, and mobile apps.</p>
<p><strong>Founded:</strong> 2007
<strong>Website:</strong> <a href="https://toggl.com/">Toggl</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Computer Software</p>
<hr />
<p><a href="http://www.TrustHCS.com">TrustHCS</a></p>
<p>TrustHCS is a health information management consultancy committed to supporting the revenue integrity efforts of our healthcare clients through the provision of coding, coding compliance, clinical documentation improvement, and education services.</p>
<p><strong>Founded:</strong> 2010
<strong>Website:</strong> <a href="http://www.TrustHCS.com">TrustHCS</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Hospital &amp; Health Care</p>
<hr />
<p><a href="https://anybox.fr">Anybox</a></p>
<p>Anybox is an integrator specializing in applications for companies, associations, administrations, communities, thanks to expertise on OpenERP software. Thanks to this innovative tool, we answer your various application needs, from CRM to general or analytical accounting, inventory management, project management, after-sales service, invoicing, purchasing, HR, document management, management of content, etc. We provide all the services around OpenERP: training, fast integration, development, hosting, maintenance.</p>
<p><strong>Founded:</strong> 2010
<strong>Website:</strong> <a href="https://anybox.fr">Anybox</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Information Technology and Services</p>
<hr />
<p><a href="http://www.screenly.io">Screenly</a></p>
<p>Digital signage made easy. Full HD video and images on your TV screens powered by a single Raspberry Pi mini computer and the revolutionary Screenly software stack.</p>
<p><strong>Founded:</strong> 2015
<strong>Website:</strong> <a href="http://www.screenly.io">Screenly</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Computer Software</p>
<hr />
<p><a href="http://soshace.com">Soshace</a></p>
<p>We provide professional Angular.js, React.js, Node.js, Java, Python developers that will work remotely for your team on a full-time basis. Our managers will help you to find a developer that fits requirements of your project. After you found the right person for the job you will be able to communicate with them directly. We are glad to realize complex web application based on your design and specification. We are experienced long-distance runners as most of the projects we have worked on are long-term and usually last from 3 to 12 months. Our developers are constantly improving their qualification levels. We’ve managed to organize our own learning system within our team. It helps our developers increase their knowledge and always be up to date with innovative technologies and be ready to apply them. One of the most important goals for us is to provide excellent solutions and clean code, and we always do our best to achieve it. Each of our customers always gets 100% guaranteed completed tasks and our long-term technical support. Do not doubt to contact us, we are always here to help you!</p>
<p><strong>Founded:</strong> 2015
<strong>Website:</strong> <a href="http://soshace.com">Soshace</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Human Resources</p>
<hr />
<p><a href="https://innolitics.com/">Innolitics</a></p>
<p>We build software for medical image acquisition, management, processing, and visualization.</p>
<p><strong>Founded:</strong> 2017
<strong>Website:</strong> <a href="https://innolitics.com/">Innolitics</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Computer Software</p>
<hr />
<p><a href="http://www.hiringthing.com">HiringThing</a></p>
<p>HiringThing is easy-to-use online software that helps companies hire. When you use it, posting jobs online, accepting resumes and sorting through applicants becomes incredibly easy to manage. It takes just a few minutes to set up, and what you do with the time you'll save sorting, routing, counting and filing is all up to you.</p>
<p><strong>Founded:</strong> 2012
<strong>Website:</strong> <a href="http://www.hiringthing.com">HiringThing</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Human Resources</p>
<hr />
<p><a href="https://serpapi.com">SerpApi</a></p>
<p>Serp Api is a real time API to access Google search results. It solves the issues of having to rent proxies, solving captchas, and JSON parsing.</p>
<p><strong>Founded:</strong> 2016
<strong>Website:</strong> <a href="https://serpapi.com">SerpApi</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Telecommunications</p>
<hr />
<p><a href="https://proxycrawl.com/">ProxyCrawl</a></p>
<p>At ProxyCrawl we care about data, all our team loves the freedom that the internet gives to access anything at any time and that's what we want to share and provide to the world. Internet should be open and accessible for everyone.</p>
<p><strong>Founded:</strong> 2017
<strong>Website:</strong> <a href="https://proxycrawl.com/">ProxyCrawl</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Information Technology and Services</p>
<hr />
<p><a href="https://www.podia.com">Podia</a></p>
<p>Make a living from your passion by selling memberships, online courses, and digital downloads to your audience.</p>
<p><strong>Founded:</strong> 2014
<strong>Website:</strong> <a href="https://www.podia.com">Podia</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Information Technology and Services</p>
<hr />
<p><a href="https://www.discourse.org">Discourse</a></p>
<p>We build a community platform for civilized discussion on the web — we feel so strongly about it that we even named our company Civilized Discourse Construction Kit, Inc. We started in 2013 with 3 co-founders unusually passionate about online discussion. We’re now a team of 34 and growing fast. We are a completely remote company, working from 15 different countries and 13 different timezones. You’ll never guess how we coordinate our work. Wait, did you just guess Discourse? That’s right, we use Discourse as our primary team coordination tool to build Discourse! Discourse excels at asynchronous, distributed teamwork, so we can keep interruptions like instant messaging, calls, and meetings to a minimum.</p>
<p><strong>Founded:</strong> 2013
<strong>Website:</strong> <a href="https://www.discourse.org">Discourse</a>
<strong>Number of Employees:</strong> 34
<strong>Industry:</strong> Information Technology and Services</p>
<hr />
<p><a href="http://www.iinteractive.com">Infinity Interactive</a></p>
<p>We are Infinity. We are technical but not typical. We might be new to you, but we’re not new to this. Est. 1998. We are expert generalists. We are proud polyglots. We are nimble craftspeople. We’ve worked with everybody, from the giants of their industry to the aspiring startups. We work just as well from a sketch on an airport napkin as we do from your hundred page BRDs. We like pretty but prefer effective. We like features but prefer function. We like clients but prefer partners. We do apps. (Of course we do apps!) And sites. RWD, CMS, REST, all the, well, rest. We write specs, too. We hire smart people, often from the Open Source world, and get out of their way. (And we encourage them to contribute back to Open Source.) We are the partner you want to keep.</p>
<p><strong>Founded:</strong> 1998
<strong>Website:</strong> <a href="http://www.iinteractive.com">Infinity Interactive</a>
<strong>Number of Employees:</strong> 50
<strong>Industry:</strong> Computer Software</p>
<hr />
<p><a href="https://nozbe.com">Nozbe</a></p>
<p>Nozbe helps you get everything done – individually and with others. Our mission is to help users to focus on the most important things – their projects and goals. In teams or individually. Every day, they complete their tasks and communicate with teammates in a non-disruptive manner, using Nozbe on all leading devices and platforms. Nozbe is a team of incredible people, too. Each of us works remotely, with no main office. We believe our work is not a place to go to but the things we do. We're known for a devotion to weekly reviews and the “Thank God It's Friday” attempt to work less, but better. We have a strict set of principles — they lead us in all decisions and actions. These are:</p>
<ol>
<li>We are free</li>
<li>We trust each other</li>
<li>We work asynchronously</li>
<li>We are mobile</li>
<li>We live on the cutting edge</li>
<li>We help others</li>
<li>We question everything</li>
</ol>
<p><strong>Founded:</strong> 2007
<strong>Website:</strong> <a href="https://nozbe.com">Nozbe</a>
<strong>Number of Employees:</strong> 50
<strong>Industry:</strong> Computer Software</p>
<hr />
<p><a href="http://www.formassembly.com/">FormAssembly</a></p>
<p>FormAssembly is an enterprise form solution built to help teams streamline complex processes and drive quality form conversions. We help organizations in healthcare, financial services, higher education, and multiple other industries quickly create web forms, collect data, and streamline their workflows through smart integrations with Salesforce and other third-party systems. As a Salesforce ISV Gold Partner, FormAssembly is available on the Salesforce AppExchange, as well as the Google Apps and FreshBooks marketplaces.</p>
<p>Other key features include:</p>
<ul>
<li>Compliance Cloud plan with HIPAA Compliance and PCI DSS Level 1 Certification</li>
<li>Advanced integration with Salesforce that allows record creation, updating, prefilling, and more</li>
<li>iOS Mobile App for offline data collection (Android app in beta testing)</li>
<li>Wordpress plugin and integrations with services like PayPal, Stripe, and Google Sheets, in addition to still more integrations through our HTTP connector</li>
<li>Simple drag-and-drop functionality that makes it easy to create powerful web forms without advanced technical knowledge</li>
<li>Custom branding abilities, including code injection and visual editing</li>
</ul>
<p>Automate manual data entry processes, save time, and start collecting leads, customer feedback, event registrations, and much, much more with FormAssembly.</p>
<p><strong>Founded:</strong> 2006
<strong>Website:</strong> <a href="http://www.formassembly.com/">FormAssembly</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Internet</p>
<hr />
<p><a href="http://www.gruntwork.io">Gruntwork</a></p>
<p>Your entire infrastructure. Defined as code. In about one day. At Gruntwork, we get you up and running on AWS with Terraform, and you get 100% of the code.</p>
<p><strong>Founded:</strong> 2016
<strong>Website:</strong> <a href="http://www.gruntwork.io">Gruntwork</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Computer Software</p>
<hr />
<p><a href="https://ideatostartup.org/">Idea To Startup</a></p>
<p>We transform your idea to startup by creating amazingly stunning software applications, using the best technologies and at the most reasonable price.</p>
<p><strong>Founded:</strong> 2017
<strong>Website:</strong> <a href="https://ideatostartup.org/">Idea To Startup</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Information Technology and Services</p>
<hr />
<p><a href="http://softwaremill.com">SoftwareMill</a></p>
<p>Custom software by true engineers Tech partner to develop scalable and efficient custom software. We blend technology with business; our developers are at the same time managers, able to look at the project from tech and business perspective. Our priority is to deliver quality software: thoroughly tested, well-designed, and reviewed. SoftwareMill delivers custom software solutions:</p>
<ul>
<li>Big / Fast Data</li>
<li>Machine Learning &amp; AI systems</li>
<li>Blockchain</li>
<li>Back-end systems</li>
<li>Web applications</li>
<li>Enterprise solutions</li>
<li>Data Analytics</li>
</ul>
<p>We want to deliver software that matters to our business clients. We build on the traditional engineering work ethics and values, which translate directly to the quality of our systems, helping the client discover their true needs. We are a team of Java, Scala, Akka experts dedicated to rapidly developing and deploying applications for big and soon-to-be-big companies. We leverage cloud infrastructure to keep our clients happy. We solve IT challenges such as system integration, data processing, monitoring/data analysis, workflow and business rules. We focus on efficiency and scalability of solutions. Our company is a partner of Lightbend, Datastax, Confluent, MongoDB, Oracle. Since 2009, we have provided lean development for a whole host of clients, ranging from small startups to big corporations from the US, Australia, South Africa, Asia and Europe. SoftwareMill has international references in Telco &amp; Messaging, Finance, Banking &amp; Insurance industries. We organize Scalar: the first &amp; biggest Scala conference in Central Europe (<a href="http://scalar-conf.com/">http://scalar-conf.com/</a>). Most of our employees are in some way involved in the community, either as open-source project leaders, conference organisers or bloggers. That is also what attracts great people to our company: knowing that we really care about what we do.</p>
<p><strong>Founded:</strong> 2009
<strong>Website:</strong> <a href="http://softwaremill.com">SoftwareMill</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Computer Software</p>
<hr />
<p><a href="https://windingtree.com">Winding Tree</a></p>
<p>Winding Tree makes travel cheaper for travelers and more profitable for providers. How? By removing middlemen from the equation, that's what blockchains were designed to do.</p>
<p><strong>Founded:</strong> 2017
<strong>Website:</strong> <a href="https://windingtree.com">Winding Tree</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Information Technology and Services</p>
<hr />
<p><a href="https://reinteractive.com/">reinteractive</a></p>
<p>At reinteractive, we design, build &amp; host amazing applications. Complex, large scale, web and mobile. Building brilliant software requires close collaboration. Clients choose reinteractive because we provide complete confidence with our well-resourced team of expert senior developers and operations staff. For Salesforce® customers, we are experienced at leveraging Heroku’s direct access to Salesforce, making it easy to synchronise data from your custom application with your Salesforce org. Managed Hosting: We are an AWS Advanced Consulting Partner and we have developed one of the world's most robust and stable Operations as a Service platforms, OpsCare®, offering 24/7 support of Rails apps by our dedicated ops team on a fixed-price, month-to-month basis. Helping organisations who don't have the resources to maintain and look after their Rails apps, we have developed CodeCare®, our monthly code maintenance service - keeping your applications up to date, bug-free while continually updating features. Our professional services include:</p>
<ul>
<li>Ruby on Rails development using agile processes and HTML5, CSS3, JavaScript, Ember and Angular</li>
<li>User Experience (UX), Rapid Prototype Development and Design</li>
<li>24/7 Operations as a Service with OpsCare®</li>
<li>Ongoing code maintenance with CodeCare®</li>
<li>As a Salesforce Registered Partner, we specialise in building custom-built consumer-facing applications that sync with Salesforce.</li>
<li>storeConnect is our affordable e-commerce solution built on the Heroku platform for Salesforce clients. It allows companies to build, deliver, monitor and scale an affordable e-commerce solution that is managed within Salesforce and instantly synchronises all information to your Salesforce org. It’s the fastest way to get a Salesforce connected e-commerce solution from idea to URL.</li>
</ul>
<p><strong>Founded:</strong> 2010
<strong>Website:</strong> <a href="https://reinteractive.com/">reinteractive</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Computer Software</p>
<hr />
<p><a href="https://www.RocketPunch.com">RocketPunch</a></p>
<p>The largest business network in Korea</p>
<p><strong>Founded:</strong> 2012
<strong>Website:</strong> <a href="https://www.RocketPunch.com">RocketPunch</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Internet</p>
<hr />
<p><a href="http://mobilejazz.com">Mobile Jazz</a></p>
<p>Mobile Jazz is an expert in Mobile Technology. We specialize in building high-quality software ranging from simple mobile apps to complex systems that depend on a reliable and scalable backend and database infrastructure. We have a team of experienced people with a variety of backgrounds, including Mobile Technology, Enterprise Software, IT Security, UI/UX Design, and Psychology. We are result-driven and have strong values for quality and design. We don't just create software, we create experiences. And most importantly, we deliver what we promise.</p>
<p><strong>Founded:</strong> 2009
<strong>Website:</strong> <a href="http://mobilejazz.com">Mobile Jazz</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Information Technology and Services</p>
<hr />
<p><a href="http://bugfender.com">Bugfender</a></p>
<p>Bugfender is a game-changing platform that logs every detail your users experience and feeds the data straight to an easy-to-use web console. Bugfender is a Mobile App Remote Logger, Crash Reporter, and In-App User Feedback Tool - All in One. It keeps logging even if the device is offline, giving you a crystal-clear picture of any issue in seconds.</p>
<p><strong>Founded:</strong> 2015
<strong>Website:</strong> <a href="http://bugfender.com">Bugfender</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Information Technology and Services</p>
<hr />
<p><a href="https://ghost.org">Ghost</a></p>
<p>A not-for-profit organization creating the world's greatest open-source blogging platform: Ghost. Ghost is a platform dedicated to one thing: Publishing. It's beautifully designed, completely customizable, and completely Open Source. Ghost allows you to write and publish your own blog, giving you the tools to make it easy and even (gasp) fun to do. It's simple, elegant, and designed so that you can spend less time messing with making your blog work - and more time blogging.</p>
<p><strong>Founded:</strong> 2013
<strong>Website:</strong> <a href="https://ghost.org">Ghost</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Computer Software</p>
<hr />
<p><a href="https://www.animalz.co">Animalz</a></p>
<p>We create high-end content marketing solutions for tech, SaaS, e-commerce, and crypto companies.</p>
<p><strong>Founded:</strong> 2015
<strong>Website:</strong> <a href="https://www.animalz.co">Animalz</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Internet</p>
<hr />
<p><a href="https://www.cloudpeeps.com">CloudPeeps</a></p>
<p>CloudPeeps is a freelancer platform that enables quality professionals to find work and manage their business.</p>
<p><strong>Founded:</strong> 2014
<strong>Website:</strong> <a href="https://www.cloudpeeps.com">CloudPeeps</a>
<strong>Number of Employees:</strong> 2-10
<strong>Industry:</strong> Internet</p>
<hr />
<p><a href="http://www.jitbit.com">Jitbit Software</a></p>
<p>Jitbit Software is a software company behind Jitbit Helpdesk - a popular help desk software app. Jitbit Help Desk is offered both as an &quot;on-premise&quot; server software and a SaaS cloud-hosted solution. Jitbit is based in the US, UK, and Latvia.</p>
<p><strong>Founded:</strong> 2004
<strong>Website:</strong> <a href="http://www.jitbit.com">Jitbit Software</a>
<strong>Number of Employees:</strong> 2-10
<strong>Industry:</strong> Computer Software</p>
<hr />
<p><a href="https://www.iopipe.com">IOpipe</a></p>
<p>Enabling serverless and event-driven applications with real-time monitoring and analytics as a service.</p>
<p><strong>Founded:</strong> 2015
<strong>Website:</strong> <a href="https://www.iopipe.com">IOpipe</a>
<strong>Number of Employees:</strong> 2-10
<strong>Industry:</strong> Information Technology and Services</p>
<hr />
<p><a href="https://www.honeybadger.io/">Honeybadger</a></p>
<p>Are exceptions all that keep you up at night? Honeybadger gives you full confidence in the health of your production systems.</p>
<p><strong>Founded:</strong> 2012
<strong>Website:</strong> <a href="https://www.honeybadger.io/">Honeybadger</a>
<strong>Number of Employees:</strong> 2-10
<strong>Industry:</strong> Information Technology and Services</p>
<hr />
<p><a href="https://altcoinfantasy.com">Altcoin Fantasy</a></p>
<p>Altcoin Fantasy is a cryptocurrency /altcoin fantasy trading game where users learn to trade cryptocurrencies risk free. Altcoin Fantasy will let you test your skills as a cryptocurrency trader. You start with $100,000 USD virtual cash, and you are free to buy any cryptocurrency and/or ICO coins you wish. Finish first - or second last. Some contests have multiple winning conditions. At the end of the contest, the players with the most net worth will win actual prizes and more! Practice and hone your skills as a cryptocurrency trader without actually losing real money! It's like HQ Trivia for Cryptocurrencies!</p>
<p><strong>Founded:</strong> 2018
<strong>Website:</strong> <a href="https://altcoinfantasy.com">Altcoin Fantasy</a>
<strong>Number of Employees:</strong> 2-10
<strong>Industry:</strong> Gaming</p>
<hr />
<p><a href="https://www.parabol.co">Parabol</a></p>
<p>PARABOL: Remote Retrospective, Collaboration &amp; Culture Software Parabol software is high-performance collaboration and retrospective meeting SaaS for remote teams. We drive team accountability, transparency, and autonomy while surfacing C-level employee engagement and cultural insights. Teams adopt Parabol to run more effective meetings, including daily standups, weekly check-ins, and quarterly or project retrospectives. As more teams within an organization adopt Parabol, our analytics generate valuable executive-level organizational culture and process insights, providing much richer and more accurate data over traditional self-reporting engagement survey products.</p>
<p><strong>Founded:</strong> 2015
<strong>Website:</strong> <a href="https://www.parabol.co">Parabol</a>
<strong>Number of Employees:</strong> 2-10
<strong>Industry:</strong> Computer Software</p>
<hr />
<p><a href="https://earnestcapital.com/">Earnest Capital</a></p>
<p>We make seed stage investments in bootstrappers, indiehackers, makers and real businesses.  We offer an innovative investment structure aligned with founders and businesses that want to accelerate now and ultimately become a profitable sustainable business. We never want you to need to raise another round of funding and you’ll never be forced to exit.</p>
<p><strong>Founded:</strong> 2019
<strong>Website:</strong> <a href="https://earnestcapital.com/">Earnest Capital</a>
<strong>Number of Employees:</strong> 2-10
<strong>Industry:</strong> Investing</p>
<hr />
<p><a href="https://www.microverse.org/">Microverse</a></p>
<p>Microverse is a global school for remote software developers where students learn through remote pair programming and don't pay anything until they get a job. Our mission is to educate and connect one million people with remote opportunities by 2030.</p>
<p><strong>Founded:</strong> 2017
<strong>Website:</strong> <a href="https://www.microverse.org/">Microverse</a>
<strong>Number of Employees:</strong> 2-10
<strong>Industry:</strong> E-learning</p>
<hr />
<p><a href="https://runningremote.com">Running Remote</a></p>
<p>World's Largest Conference on Building &amp; Scaling Remote Teams (29-30 June)</p>
<p><strong>Founded:</strong> 2017
<strong>Website:</strong> <a href="https://runningremote.com">Running Remote</a>
<strong>Number of Employees:</strong> 2-10
<strong>Industry:</strong> Information Technology and Services</p>
<hr />
<p><a href="https://www.avaaz.org/page/en/">Avaaz Foundation</a></p>
<p>Avaaz Foundation is a global online activist network that promotes activism on issues such as climate change, human rights, and corruption.</p>
<p><strong>Founded:</strong> (Year not provided)
<strong>Website:</strong> <a href="https://www.avaaz.org/page/en/">Avaaz Foundation</a>
<strong>Number of Employees:</strong> (Value not provided)
<strong>Industry:</strong> (Value not provided)</p>
<hr />
<p><a href="https://degreed.com">Degreed</a></p>
<p>Degreed helps 3+ million people at over 150 organizations build the skills they need to invent the future.</p>
<p><strong>Founded:</strong> 2012
<strong>Website:</strong> <a href="https://degreed.com">Degreed</a>
<strong>Number of Employees:</strong> 200-300
<strong>Industry:</strong> Computer Software</p>
<hr />
<p><a href="https://tend.io/">Tend</a></p>
<p>Tend is the simplest way to see what marketing tactics drive customers. Tend’s search tool gives you clear answers to important questions. Want to know where your customers are coming from? Curious if your blog is driving leads? Are those ads worth it? Find out without digging through meaningless reports. Never wonder where your leads or customers came from again. See every page they looked at, ad they clicked on and site they came from. Know who’s interested and why. With Tend’s Zapier integration you can automate tasks based on a contact’s action on your website. Create a to do, get an alert or even send prospects a customized email.</p>
<p><strong>Founded:</strong> 2014
<strong>Website:</strong> <a href="https://tend.io/">Tend</a>
<strong>Number of Employees:</strong> 2-10
<strong>Industry:</strong> Marketing and Advertising</p>
<hr />
<p><a href="http://producthunt.com">Product Hunt</a></p>
<p>Product Hunt surfaces the best new products, every day. It's a place for product-loving enthusiasts to share and geek out about the latest mobile apps, websites, hardware projects, and tech creations. Community members can submit, browse, vote, and comment on daily submissions of products and collections of products. They also get the opportunity to interact directly with product creators, investors, journalists, as well as an active community of people who are passionate about products.</p>
<p><strong>Founded:</strong> 2014
<strong>Website:</strong> <a href="http://producthunt.com">Product Hunt</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Internet</p>
<hr />
<p><a href="http://33sticks.com/">33 Sticks</a></p>
<p>At 33 Sticks, we partner with companies to provide strategic analytics services. We advise Fortune 500 companies on how to use insights from their data to improve their business. We also partner with unique early-stage startups to help position their products to investors, and on the same token, we work with investors to evaluate the potential of new startups they are evaluating. Through the art and science of digital intelligence, we help companies make informed decisions and maximize profits. At 33 Sticks, we aren’t traditional web analysts, we are business advisors that just happen to be really good with data.</p>
<p><strong>Founded:</strong> 2013
<strong>Website:</strong> <a href="http://33sticks.com/">33 Sticks</a>
<strong>Number of Employees:</strong> 2-10
<strong>Industry:</strong> Internet</p>
<hr />
<p><a href="https://usefyi.com/">FYI</a></p>
<p>Search and organize all your documents in one place. FYI takes the stress out of documents so that you and your team can get work done and be happier.</p>
<p><strong>Founded:</strong> 2017
<strong>Website:</strong> <a href="https://usefyi.com/">FYI</a>
<strong>Number of Employees:</strong> 2-10
<strong>Industry:</strong> Internet</p>
<hr />
<p><a href="https://www.moonlightwork.com/">Moonlight Work</a></p>
<p>Access top software engineers as part-time consultants. Get things done right with experienced engineers from top companies and open source projects.</p>
<p><strong>Founded:</strong> 2017
<strong>Website:</strong> <a href="https://www.moonlightwork.com/">Moonlight Work</a>
<strong>Number of Employees:</strong> 2-10
<strong>Industry:</strong> Computer Software</p>
<hr />
<p><a href="https://transistor.fm/">Transistor</a></p>
<p>Instead of spending money on podcast ads, businesses like Basecamp, eBay, and Code Pen are using branded podcasts to reach their audience. Our goal? Make Transistor the best way for a business to create a podcast. Currently, we offer podcast hosting. The user uploads their MP3, adds show notes and artwork, and we generate a podcast episode. This is syndicated via RSS, iTunes, and on their podcast website.</p>
<p><strong>Founded:</strong> 2017
<strong>Website:</strong> <a href="https://transistor.fm/">Transistor</a>
<strong>Number of Employees:</strong> 2-10
<strong>Industry:</strong> Broadcast Media</p>
<hr />
<p><a href="https://www.bidsketch.com">Bidsketch</a></p>
<p>Bidsketch is proposal software used by freelancers, consultants, and agencies to create professional-looking client proposals in minutes (instead of hours). Thousands of customers spend 50% less time creating proposals and have earned over $260 million by using Bidsketch.</p>
<p><strong>Founded:</strong> 2010
<strong>Website:</strong> <a href="https://www.bidsketch.com">Bidsketch</a>
<strong>Number of Employees:</strong> 2-10
<strong>Industry:</strong> Internet</p>
<hr />
<p><a href="http://flatmagic.co">Flatmagic</a></p>
<p>The easiest way to rent month-to-month housing.</p>
<p><strong>Founded:</strong> 2015
<strong>Website:</strong> <a href="http://flatmagic.co">Flatmagic</a>
<strong>Number of Employees:</strong> 2-10
<strong>Industry:</strong> Information Technology</p>
<hr />
<p><a href="https://civicsignal.com">civicSIGNAL</a></p>
<p>civicSIGNAL empowers communities to solve civic challenges using design and technology and enable governments to deliver better digital services. We find success by identifying the conditions for change, by believing in our mission and the civic tech philosophy of building with, and not for. We boil our broad digital product design and development philosophy down into insights, patterns, and red flags that initiators should be thinking about as they evaluate and design a product's design and development strategy. What we help for and what we work for is the experience transformations by which we make each other better.</p>
<p><strong>Founded:</strong> 2018
<strong>Website:</strong> <a href="https://civicsignal.com">civicSIGNAL</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Civic &amp; Social Organization</p>
<hr />
<p><a href="http://optionalpha.com">Option Alpha</a></p>
<p>Education, coaching, and technology for options traders. To learn more visit optionalpha.com and follow @OptionAlpha on Twitter.</p>
<p><strong>Founded:</strong> 2014
<strong>Website:</strong> <a href="http://optionalpha.com">Option Alpha</a>
<strong>Number of Employees:</strong> 2-10
<strong>Industry:</strong> Computer Software</p>
<hr />
<p><a href="http://www.getcroissant.com">Croissant</a></p>
<p>Croissant is the app for easy, everyday access to your favorite workspaces. One membership gives you access to over 400 inspiring coworking spaces in NYC, SF, London, and more.</p>
<p><strong>Founded:</strong> 2015
<strong>Website:</strong> <a href="http://www.getcroissant.com">Croissant</a>
<strong>Number of Employees:</strong> 2-10
<strong>Industry:</strong> Internet</p>
<hr />
<p><a href="http://www.RoundBarnLabs.com">Round Barn Labs</a></p>
<p>Round Barn Labs brings an in-house perspective to digital performance marketing consulting with a growth mindset. We are not a typical agency. We have worked in-house or as a consultant for companies like: Amazon, eBay, ModCloth, Porsche, TrueBill, StubHub, thoughtbot, Granular, SearchMetrics and startups backed by: Andreessen Horowitz (a16z), Social Capital Partners, Kleiner Perkins (KPCB), Google Ventures (GV), First Round Capital, and more. Round Barn Labs has helped over 100 clients from seed stage to IPO improve the performance of the paid digital marketing. We manage marketing channels like Facebook, Google Search/Display, Instagram, Affiliate/influencers, LinkedIn, Twitter, and Pinterest. Clients looking for growth, performance marketing, strategy and tactics have come to us to develop rank stack prioritization, A/B testing and ways to hit Customer Acquisition goals. We are one of the few paid marketing teams that can help improve page conversion rates and customer experience with UX, and Conversion Rate Optimization with systematic A/B testing.</p>
<p><strong>Founded:</strong> 2014
<strong>Website:</strong> <a href="http://www.RoundBarnLabs.com">Round Barn Labs</a>
<strong>Number of Employees:</strong> 2-10
<strong>Industry:</strong> Marketing and Advertising</p>
<hr />
<p><a href="http://www.Formstack.com">Formstack</a></p>
<p>Founded in 2006, Formstack is a versatile online form solution that streamlines processes for capturing and managing information. With Formstack, businesses and teams of all types and sizes can easily create online forms to automate repetitive business processes and gain rich insights. People can embed forms directly onto their websites and social media profiles to capture leads, as well as use online forms to collect payments, gather feedback, and streamline internal workflows. This flexibility enables organizations to simplify their data collection while expanding their resources. Formstack delivers its intuitive online form solution to over 500,000 users in 112 countries. From HR to IT, the platform can help every department in an organization streamline business processes and get more work done. With Formstack, anyone can build contact forms, event registrations, surveys, job applications, and more in minutes. No programming knowledge is required. Formstack's online form builder integrates with more than 40 popular web applications for easy CRM management, email marketing, payment processing, spreadsheet management, and much more. Advanced features like Form A/B Testing, Partial Submissions, Social Autofill, and Facebook Tab Embed make it easy for users to pinpoint their best strategies for capturing responses and gathering better information. Whether an HR director is trying to streamline recruiting and hiring processes or a marketer is looking for an easier way to collect leads or organize events, Formstack’s form builder has the power and flexibility to help any team succeed and make better business decisions.</p>
<p><strong>Founded:</strong> 2006
<strong>Website:</strong> <a href="http://www.Formstack.com">Formstack</a>
<strong>Number of Employees:</strong> 51-200
<strong>Industry:</strong> Internet</p>
<hr />
<p><a href="http://www.smartbugmedia.com">SmartBug Media</a></p>
<p>SmartBug Media is an intelligent inbound marketing agency that assists businesses in growing revenue through content marketing, sales enablement, web development, marketing automation, and PR. For over 10 years, SmartBug has helped businesses increase qualified leads, close customers, and enhance the reach and loyalty of their brands.</p>
<p><strong>Founded:</strong> 2007
<strong>Website:</strong> <a href="http://www.smartbugmedia.com">SmartBug Media</a>
<strong>Number of Employees:</strong> 51-200
<strong>Industry:</strong> Marketing and Advertising</p>
<hr />
<p><a href="http://www.letsdeel.com">Deel</a></p>
<p>Deel aims to remove the fear of not getting paid by creating a new automated payment system. We are using AI and smart contract as the main technology to build the most user-friendly system. No more fear of chasing clients for payments. We believe users come first. We are implementing the safest and easiest payment system to make sure our users getting paid with no concerns so that they can focus on building great products. We’re a group of creators who love to ship products to solve an existing problem and tend to obsess over details. Our engineering, product, and design team come from MIT, Technion, the IDF, which have been building software products for fortune 500 and millions of individuals from hundreds of countries.</p>
<p><strong>Founded:</strong> 2018
<strong>Website:</strong> <a href="http://www.letsdeel.com">Deel</a>
<strong>Number of Employees:</strong> 2-10
<strong>Industry:</strong> Financial Services</p>
<hr />
<p><a href="http://swym.it">SWYM</a></p>
<p>We are now officially in a multi-device world. 2 in 3 e-commerce shoppers start their interaction on one device, likely their smartphone, and continue that journey on another. As marketers competing for consumers’ attention in an increasingly noisy setting, it is imperative that we make those journeys seamless experiences, regardless of what device your customers are on. That’s the mission we are obsessed with at Swym – creating delightfully seamless shopping journeys for your customers. The typical shopping journey today spans multiple sessions/channels/devices, with a majority of e-commerce purchases resulting from a multi-session shopping experience. E-commerce sites are not adequately equipped to facilitate this new usage pattern, leaving their customers on their own to navigate between devices. Swym powers a cross-channel shopping platform for retailers, built to intuitively address the needs of today’s consumer, and can be easily integrated into an existing e-commerce site. Retailers can leverage the Swym platform to maximize the value of each customer interaction by enabling seamless multi-screen shopping experiences for shoppers. Swym is a proud member of the Techstars family, with offices in Seattle, WA and Bangalore, India.</p>
<p><strong>Founded:</strong> 2012
<strong>Website:</strong> <a href="http://swym.it">SWYM</a>
<strong>Number of Employees:</strong> 2-10
<strong>Industry:</strong> Computer Software</p>
<hr />
<p><a href="http://Speedlancer.com">Speedlancer</a></p>
<p>Speedlancer is the world's fastest freelance marketplace, delivering design, writing &amp; data-entry work in just 4 hours by curated freelancers. We help startup founders, digital agencies, SMBs, marketers and enterprise get tasks done quicker than ever before, with outstanding quality. In January 2015 we were accepted into 500 Startups Batch 12, and have relocated from Melbourne, Australia to San Francisco.</p>
<p><strong>Founded:</strong> 2014
<strong>Website:</strong> <a href="http://Speedlancer.com">Speedlancer</a>
<strong>Number of Employees:</strong> 2-10
<strong>Industry:</strong> Outsourcing</p>
<hr />
<p><a href="http://www.sentiovr.com">Sentio VR</a></p>
<p>The simplest platform to present 3D models in VR for Architecture, Engineering &amp; Construction. We are a Technology Company based out of Chile/India that builds Virtual Reality marketing software being used by the world's leading enterprises. SENTIO VR is a self-service platform for Architects and 3D artists to present their designs in Virtual Reality.</p>
<p><strong>Founded:</strong> 2015
<strong>Website:</strong> <a href="http://www.sentiovr.com">Sentio VR</a>
<strong>Number of Employees:</strong> 2-10
<strong>Industry:</strong> Computer Software</p>
<hr />
<p><a href="https://adhocteam.us">Ad Hoc</a></p>
<p>Ad Hoc is a software design and engineering company that came out of the successful effort to rescue HealthCare.gov after its disastrous initial launch. Ad Hoc is focused on developing, delivering, and operating fast, stable, and well-designed digital services on behalf of U.S. government clients. Our work enables agencies to provide transactional and informational services to their users. We bring technologists together to collaborate closely with government partners, crafting solutions and delivering software that works.</p>
<p><strong>Founded:</strong> 2014
<strong>Website:</strong> <a href="https://adhocteam.us">Ad Hoc</a>
<strong>Number of Employees:</strong> 51-200
<strong>Industry:</strong> Computer Software</p>
<hr />
<p><a href="http://www.codecabin.co.za">CodeCabin</a></p>
<p>Providing innovative, high quality products that maximise efficiency and revenue to all businesses. We made: WP Google Maps, WP Live Chat Support, Sola Plugins.</p>
<p><strong>Founded:</strong> 2013
<strong>Website:</strong> <a href="http://www.codecabin.co.za">CodeCabin</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Software</p>
<hr />
<p><a href="https://atlaspet.co">Atlas Pet Company</a></p>
<p>Atlas Pet Company creates the highest quality canine accessories for your best friend. With ultra-premium materials and attention to detail exclusively found in small-batch production, we design our products to last forever and stand behind them with the best warranty in the industry. Guaranteed for life, even if your pup destroys it.</p>
<p><strong>Founded:</strong> 2015
<strong>Website:</strong> <a href="https://atlaspet.co">Atlas Pet Company</a>
<strong>Number of Employees:</strong> 2-10
<strong>Industry:</strong> Consumer Goods</p>
<hr />
<p><a href="http://www.process.st">Process Street</a></p>
<p>Process Street is a SaaS application for businesses to build and track their processes using superpowered checklists. Businesses need processes to scale. Large companies like airlines have been using checklists for decades to minimize mistakes and save money, but they're not the only ones who can benefit from them. Process Street brings the power of checklists to any business. Our application lets teams create simple recurring checklists, collaborate around them and track as they’re completed. With advanced permissions, reporting and automation, we make simple checklists superpowered.</p>
<p><strong>Founded:</strong> 2014
<strong>Website:</strong> <a href="http://www.process.st">Process Street</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Internet</p>
<hr />
<p><a href="http://limitlessdesigns.io">Limitless Designs</a></p>
<p>Limitless Designs is a flat fee, unlimited graphic design service. Get unlimited graphic design requests for less than $6 a day. Satisfaction guaranteed.</p>
<p><strong>Founded:</strong> 2016
<strong>Website:</strong> <a href="http://limitlessdesigns.io">Limitless Designs</a>
<strong>Number of Employees:</strong> 2-10
<strong>Industry:</strong> Graphic Design</p>
<hr />
<p><a href="https://g2i.co">G2i</a></p>
<p>A Talent Platform For Engineers By Engineers Focused on React.js, React Native, GraphQL, Node.js, and Android/iOS. G2i provides on demand engineers both full time and on contracts, providing high-quality pre-vetted developers in specific tech stacks.</p>
<p><strong>Founded:</strong> 2012
<strong>Website:</strong> <a href="https://g2i.co">G2i</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Computer Software</p>
<hr />
<p><a href="https://www.oneupapp.io/">One Up</a></p>
<p>With OneUp, you can easily schedule your social media posts to be recycled for a specific number of times, at set intervals, leading to more engagement, more traffic, and more business. OneUp works with Facebook, Instagram, Twitter, Pinterest, Linkedin, and Google+.</p>
<p><strong>Founded:</strong> 2017
<strong>Website:</strong> <a href="https://www.oneupapp.io/">One Up</a>
<strong>Number of Employees:</strong> 2-10
<strong>Industry:</strong> Internet</p>
<hr />
<p><a href="https://www.interimly.com">Interimly</a></p>
<p>Growth companies need growth marketers. Whether you’re just starting out, need to add extra firepower to an existing team, or are trying to reinvent your brand, we partner with companies at every stage.</p>
<p><strong>Founded:</strong> 2016
<strong>Website:</strong> <a href="https://www.interimly.com">Interimly</a>
<strong>Number of Employees:</strong> 2-10
<strong>Industry:</strong> Marketing and Advertising</p>
<hr />
<p><a href="https://netguru.co">Netguru</a></p>
<p>Netguru builds digital products that let people do things differently. Share your challenge with our team, and we’ll work with you to deliver a revolutionary digital product. Our clients have changed the way people do banking, learn languages, and rent bikes. Their products have been featured in TechCrunch, Business Insider, and Product Hunt. Netguru provides consulting services in product development, creating software solutions, and product design. Since our founding in 2008, we've delivered over 200 projects to clients ranging from major corporations to early-stage startups, working across industries such as finance, security, healthcare, or lifestyle. We’re a team of over 500 people including web and mobile engineers along with project managers, quality assurance specialists, product designers, and support staff. Our team members are passionate about web and mobile technologies and thrive on working with clients on innovative products and helping them improve the world through software.</p>
<p><strong>Founded:</strong> 2008
<strong>Website:</strong> <a href="https://netguru.co">Netguru</a>
<strong>Number of Employees:</strong> 501-1000
<strong>Industry:</strong> Information Technology</p>
<hr />
<p><a href="http://www.tok.tv/">Tok.tv</a></p>
<p>TOK.tv allows millions of fans to talk to their friends, while watching a game on TV. It empowers teams and brands to talk to the fans, and monetize the game experience. TOK.tv is the 1 social network in sports.</p>
<p><strong>Founded:</strong> 2012
<strong>Website:</strong> <a href="http://www.tok.tv/">Tok.tv</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Internet</p>
<hr />
<p><a href="http://www.dreamfactory.com">DreamFactory</a></p>
<p>DreamFactory makes an open source REST API backend for mobile, web, and IoT applications. Our platform incorporates more than a decade of deep experience about how to securely build, deploy, and manage service-based applications in the enterprise. DreamFactory can be installed on any server, connected to any SQL or NoSQL database, and used for developing HTML5 or native mobile applications. Our technology enables developers to build modern applications for the phone, tablet, or desktop without having to manage server side code and complexity.</p>
<p><strong>Founded:</strong> 2005
<strong>Website:</strong> <a href="http://www.dreamfactory.com">DreamFactory</a>
<strong>Number of Employees:</strong> 51-200
<strong>Industry:</strong> Computer Software</p>
<hr />
<p><a href="http://consensys.net">ConsenSys</a></p>
<p>ConsenSys is a global formation of technologists and entrepreneurs working to enable a decentralized world.</p>
<ul>
<li><strong>CONSENSYS LABS</strong> - Our venture production studio supports entrepreneurs and developers all over the world, incubating over 50 projects on the Ethereum blockchain.</li>
<li><strong>CONSENSYS ACADEMY</strong> - Our academic institution develops the global blockchain ecosystem by bridging the Ethereum knowledge gap and revolutionizing education through blockchain technology.</li>
<li><strong>CONSENSYS SOLUTIONS</strong> - Our consulting arm works with businesses across all industries and governments across the world to build, test, and deploy public and private blockchain solutions.</li>
<li><strong>CONSENSYS CAPITAL</strong> - Our capital division is a constellation of financial service companies for the infrastructure of tomorrow’s global economy, employing blockchain-based digital assets.</li>
<li><strong>CONSENSYS CATALYST</strong> - Our brand and marketing suite works with both ConsenSys spokes and external Ethereum-based businesses to build their brands, navigate marketing strategy, and be the catalyst for explosive growth.</li>
<li><strong>ETHEREAL</strong> - Ethereal is an annual summit that brings together builders, philosophers, policy-makers, artists, and humanitarians from around the world for knowledge sharing around how we can build our decentralized future together using blockchain technology.</li>
</ul>
<p><strong>Founded:</strong> 2014
<strong>Website:</strong> <a href="http://consensys.net">ConsenSys</a>
<strong>Number of Employees:</strong> 501-1000
<strong>Industry:</strong> Computer Software</p>
<hr />
<h2 id="documo">Documo</h2>
<p><a href="https://www.documo.com">Documo</a></p>
<p>We move documents. The Documo Platform combines solutions that make working with documents easy, simple, secure, and reduce your carbon footprint. mFax (mfax.io) is a next-generation cloud fax platform designed to send and receive faxes from any device, securely and reliably. Our fully distributed team is focused on helping reduce paper consumption and waste throughout the world. Read more about our mission at <a href="https://www.documo.com/company/our-mission">https://www.documo.com/company/our-mission</a></p>
<p><strong>Founded:</strong> 2016
<strong>Website:</strong> <a href="https://www.documo.com">Documo</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Computer Software</p>
<h2 id="pieslice">Pieslice</h2>
<p><a href="https://www.pieslice.com">Pieslice</a></p>
<p>Pieslice is on a mission to disrupt finance. We use the blockchain to make financial instruments more accessible, transparent, and cost-effective for everyone.</p>
<p><strong>Founded:</strong> 2018
<strong>Website:</strong> <a href="https://www.pieslice.com">Pieslice</a>
<strong>Number of Employees:</strong> 2-10
<strong>Industry:</strong> Computer Software</p>
<h2 id="strategyzer">Strategyzer</h2>
<p><a href="http://www.strategyzer.com">Strategyzer</a></p>
<p>Practical tools to help you understand customers, design better value propositions, and find the right business model. Strategyzer makes it easy for anybody to rapidly sketch business model ideas with the business model canvas and the value proposition canvas. Work on business models together with your team, clients, board, or anyone else. Test the rough numbers of your business model to quickly find out if your idea is worth pursuing. Take our online class and get a the knowledge you need to do it professionally or follow our blog to be up to date.</p>
<p><strong>Founded:</strong> 2010
<strong>Website:</strong> <a href="http://www.strategyzer.com">Strategyzer</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Education Management</p>
<h2 id="web4realty">Web4Realty</h2>
<p><a href="https://www.web4realty.com">Web4Realty</a></p>
<p>Helping REALTOR® pros 📈 sales and profits through beautiful real estate websites, real estate CRM tools, and innovative marketing tools. <a href="http://web4realty.com">http://web4realty.com</a></p>
<p><strong>Founded:</strong> 2010
<strong>Website:</strong> <a href="https://www.web4realty.com">Web4Realty</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Internet</p>
<h2 id="bunny-inc">Bunny Inc</h2>
<p><a href="http://bunnyinc.com">Bunny Inc</a></p>
<p>Bunny Inc. allows you to delegate creative projects quickly, easily and affordably: voiceovers, voice acting, dubbing, script writing, content creation and transcreation to several languages! We offer absolute predictability in terms of quality and overall awesomeness.</p>
<p><strong>Founded:</strong> 2012
<strong>Website:</strong> <a href="http://bunnyinc.com">Bunny Inc</a>
<strong>Number of Employees:</strong> 51-200
<strong>Industry:</strong> Information Technology and Services</p>
<h2 id="work-reduce">Work Reduce</h2>
<p><a href="http://workreduce.com">Work Reduce</a></p>
<p>On Demand, On Shore, On Platform. WorkReduce delivers tailored solutions for the advertising industry. Forget traditional outsourcing models, and join the on-demand, platform-based solution that works with programmatic.</p>
<p><strong>Founded:</strong> 2015
<strong>Website:</strong> <a href="http://workreduce.com">Work Reduce</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Marketing and Advertising</p>
<hr />
<p><a href="https://filestage.io/">Filestage</a></p>
<p>Filestage is your online workspace to share, review and approve videos, audios, documents and designs with clients and co-workers. The platform is tailored to the needs of advertising, design, film, sound, media and creative professionals.</p>
<p><strong>Founded:</strong> 2014
<strong>Website:</strong> <a href="https://filestage.io/">Filestage</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Computer Software</p>
<hr />
<p><a href="https://www.pixelme.me/">Pixelme</a></p>
<p>Instead of spending money on podcast ads, businesses like Basecamp, eBay, and Code Pen are using branded podcasts to reach their audience. Our goal? Make Transistor the best way for a business to create a podcast. Currently, we offer podcast hosting. The user uploads their MP3, adds show notes and artwork, and we generate a podcast episode. This is syndicated via RSS, iTunes, and on their podcast website.</p>
<p><strong>Founded:</strong> 2017
<strong>Website:</strong> <a href="https://www.pixelme.me/">Pixelme</a>
<strong>Number of Employees:</strong> 2-10
<strong>Industry:</strong> Internet</p>
<hr />
<p><a href="https://agentrisk.com">AgentRisk</a></p>
<p>Automated portfolio management &amp; option strategies, all managed by A.I. No hidden fees, full transparency, next-day money withdrawal.</p>
<p><strong>Founded:</strong> 2016
<strong>Website:</strong> <a href="https://agentrisk.com">AgentRisk</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Investment Management</p>
<hr />
<p><a href="http://convertloop.co">ConvertLoop</a></p>
<p>ConvertLoop is a powerful software to track your web users' behavior and automate your marketing campaigns to optimize your user life cycle. It helps you get your users to take action to drive business growth.</p>
<p><strong>Founded:</strong> 2017
<strong>Website:</strong> <a href="http://convertloop.co">ConvertLoop</a>
<strong>Number of Employees:</strong> 2-10
<strong>Industry:</strong> Internet</p>
<hr />
<p><a href="https://quaderno.io">Quaderno</a></p>
<p><strong>Founded:</strong> 2014
<strong>Website:</strong> <a href="https://quaderno.io/">Quaderno</a>
<strong>Number of Employees:</strong> 2-10
<strong>Industry:</strong> Computer Software</p>
<hr />
<p><a href="http://www.smedia.ca">sMedia</a></p>
<p>The remote team assembly and management solution designed to ease the pain of finding, building, and maintaining a remote workforce.</p>
<p><strong>Founded:</strong> 2011
<strong>Website:</strong> <a href="http://www.smedia.ca">sMedia</a>
<strong>Number of Employees:</strong> 51-200
<strong>Industry:</strong> Marketing and Advertising</p>
<hr />
<p><a href="http://www.instantteams.com">Instant Teams</a></p>
<p><strong>Founded:</strong> 2016
<strong>Website:</strong> <a href="http://www.instantteams.com">Instant Teams</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Internet</p>
<hr />
<p><a href="http://www.wethos.co">Wethos</a></p>
<p>Where the gig economy meets meaningful work. We believe the people solving our toughest problems deserve the best talent.</p>
<p><strong>Founded:</strong> 2016
<strong>Website:</strong> <a href="http://www.wethos.co">Wethos</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Internet</p>
<hr />
<p><a href="https://www.workplaceless.com/">Workplaceless</a></p>
<p>Workplaceless helps remote workers, managers, and teams thrive in a location-free workplace.</p>
<p><strong>Founded:</strong> 2017
<strong>Website:</strong> <a href="https://www.workplaceless.com/">Workplaceless</a>
<strong>Number of Employees:</strong> 5-10
<strong>Industry:</strong> Learning and Development</p>
<hr />
<p><a href="https://www.rainforestqa.com/">Rainforest QA</a></p>
<p>Rainforest QA is an on-demand QA solution. Discover problems that affect the customer experience before code hits production, and do it at the speed of continuous delivery.</p>
<p><strong>Founded:</strong> 2013
<strong>Website:</strong> <a href="https://www.rainforestqa.com/">Rainforest QA</a>
<strong>Number of Employees:</strong> 51-200
<strong>Industry:</strong> Computer Software</p>
<hr />
<p><a href="https://www.timedoctor.com">Time Doctor</a></p>
<p>Productivity software and time tracking tool for distributed teams.</p>
<p><strong>Founded:</strong> 2012
<strong>Website:</strong> <a href="https://www.timedoctor.com">Time Doctor</a>
<strong>Number of Employees:</strong> 51-200
<strong>Industry:</strong> Computer Software</p>
<hr />
<p><a href="https://semaphoreci.com">Semaphore CI</a></p>
<p>The continuous integration and delivery SaaS.</p>
<p><strong>Founded:</strong> 2012
<strong>Website:</strong> <a href="https://semaphoreci.com">Semaphore CI</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Computer Software</p>
<hr />
<p><a href="https://corgibytes.com/">Corgibytes, LLC</a></p>
<p>&quot;We love maintaining and improving existing code.&quot;</p>
<p><strong>Founded:</strong> 2008
<strong>Website:</strong> <a href="https://corgibytes.com/">Corgibytes, LLC</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Computer Software</p>
<hr />
<p><a href="https://fuelnetwork.io">Fuel</a></p>
<p>The world's best dev teams, on-demand.</p>
<p><strong>Founded:</strong> 2019
<strong>Website:</strong> <a href="https://fuelnetwork.io">Fuel</a>
<strong>Number of Employees:</strong> 2-10
<strong>Industry:</strong> Information Technology and Services</p>
<hr />
<p><a href="https://www.crunchydata.com/">Crunchy Data</a></p>
<p>Crunchy Data is the Trusted Open Source Enterprise PostgreSQL Leader.</p>
<p><strong>Founded:</strong> 2012
<strong>Website:</strong> <a href="https://www.crunchydata.com/">Crunchy Data</a>
<strong>Number of Employees:</strong> 51-200
<strong>Industry:</strong> Information Technology and Services</p>
<hr />
<p><a href="https://workew.com">Workew</a></p>
<p>Workew is a remote job board and hiring platform connecting talented people who seek remote careers with innovative companies that offer these positions.</p>
<p><strong>Founded:</strong> 2017
<strong>Website:</strong> <a href="https://workew.com">Workew</a>
<strong>Number of Employees:</strong> 2-10
<strong>Industry:</strong> Recruiting, Talent, HR, SaaS, Hiring, Onboarding</p>
<hr />
<p><a href="https://meetedgar.com/">MeetEdgar</a></p>
<p>Social Media Scheduling tool.</p>
<p><strong>Founded:</strong> 2014
<strong>Website:</strong> <a href="https://meetedgar.com/">MeetEdgar</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Internet</p>
<hr />
<p><a href="https://www.greenhouse.io">Greenhouse Software</a></p>
<p>Greenhouse Software is the fastest-growing provider of enterprise talent acquisition software.</p>
<p><strong>Founded:</strong> 2012
<strong>Website:</strong> <a href="https://www.greenhouse.io">Greenhouse Software</a>
<strong>Number of Employees:</strong> 201-500
<strong>Industry:</strong> Recruiting, Talent, HR, SaaS, Hiring, Onboarding</p>
<hr />
<p><a href="https://www.virtualvocations.com">Virtual Vocations</a></p>
<p>Fully virtual company specializing in helping people find remote work.</p>
<p><strong>Founded:</strong> 2007
<strong>Website:</strong> <a href="https://www.virtualvocations.com">Virtual Vocations</a>
<strong>Number of Employees:</strong> 1-10
<strong>Industry:</strong> Internet</p>
<hr />
<p><a href="https://www.awardforce.com">Award Force</a></p>
<p>Award Force is SaaS for organisers of awards, grants, scholarships, pitch competitions and more to manage submission, evaluation and award of results, online.</p>
<p><strong>Founded:</strong> 2013
<strong>Website:</strong> <a href="https://www.awardforce.com">Award Force</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Computer Software</p>
<hr />
<p><a href="http://www.studysoup.com">StudySoup</a></p>
<p>Suite of edtech services for college students, including marketplace to sell notes and study guides to classmates.</p>
<p><strong>Founded:</strong> 2014
<strong>Website:</strong> <a href="http://www.studysoup.com">StudySoup</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> EdTech</p>
<hr />
<p><a href="www.idiomplus.com">Idiomplus</a></p>
<p><strong>Founded:</strong> 2013
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Training, Translation, Consulting</p>
<hr />
<p><a href="https://www.risewithus.co/">RISE</a></p>
<p>World-class tech talent, on-demand.</p>
<p><strong>Founded:</strong> 2016
<strong>Website:</strong> <a href="https://www.risewithus.co/">RISE</a>
<strong>Number of Employees:</strong> 51-200
<strong>Industry:</strong> Computer Software</p>
<hr />
<p><a href="https://altcoinfantasy.com">Altcoin Fantasy</a></p>
<p>A Crypto Trading Simulation Game that onboards people to the world of cryptocurrencies/blockchain projects.</p>
<p><strong>Founded:</strong> 2018
<strong>Website:</strong> <a href="https://altcoinfantasy.com">Altcoin Fantasy</a>
<strong>Number of Employees:</strong> 1-10
<strong>Industry:</strong> Fintech, Gaming, Crypto</p>
<hr />
<p><a href="www.siquia.com">Siquia</a></p>
<p>Online Therapy.</p>
<p><strong>Founded:</strong> 2012
<strong>Website:</strong> <a href="www.siquia.com">Siquia</a>
<strong>Number of Employees:</strong> 1-10
<strong>Industry:</strong> eHealth</p>
<hr />
<p><a href="safetywing.com">SafetyWing</a></p>
<p>Global insurance for remote teams and digital nomads. Building a social safety net on the internet.</p>
<p><strong>Founded:</strong> 2018
<strong>Website:</strong> <a href="safetywing.com">SafetyWing</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> InsureTech</p>
<hr />
<p><a href="http://cloudseal.io">Cloudseal</a></p>
<p>Cloudseal provides a software container technology where all bugs become recorded and fully reproducible.</p>
<p><strong>Founded:</strong> 2018
<strong>Website:</strong> <a href="http://cloudseal.io">Cloudseal</a>
<strong>Number of Employees:</strong> 2-10
<strong>Industry:</strong> Computer Software</p>
<hr />
<p><a href="https://www.strongdm.com/">strongDM</a></p>
<p>The strongDM proxy manages &amp; monitors access to databases, servers &amp; Kubernetes clusters.</p>
<p><strong>Founded:</strong> 2015
<strong>Website:</strong> <a href="https://www.strongdm.com/">strongDM</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Information Technology and Service</p>
<hr />
<p><a href="https://www.fourkitchens.com/">Four Kitchens</a></p>
<p>Four Kitchens makes big websites.</p>
<p><strong>Founded:</strong> 2006
<strong>Website:</strong> <a href="https://www.fourkitchens.com/">Four Kitchens</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Internet</p>
<hr />
<p><a href="https://customer.io/">Customer.io</a></p>
<p>People use Customer.io to automate and gain efficiency, but automation is usually cold and inhuman. We strive to make automation human and valued by the people on the receiving end of it.</p>
<p><strong>Founded:</strong> 2012
<strong>Website:</strong> <a href="https://customer.io/">Customer.io</a>
<strong>Number of Employees:</strong> 11-50
<strong>Industry:</strong> Internet</p>
<hr />
<p><a href="https://jobs.lever.co/kraken?location=Remote">Kraken</a></p>
<p><strong>Industry:</strong> Cryptocurrency</p>
<hr />
<p><a href="https://careers.givelify.com/">Givelify</a></p>
<p>Connect donors to non-profits or causes.</p>
<p><strong>Founded:</strong> 2013
<strong>Website:</strong> <a href="https://careers.givelify.com/">Givelify</a>
<strong>Number of Employees:</strong> 50-100
<strong>Industry:</strong> Fintech</p>

"""""
),
            ["""2023-02-24-RDB-Modeling"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 RDB modeling. A way to simplify your C4 model
""""",
["""date"""] =
"""""
 2023-02-24
""""",
["""tags"""] =
"""""
 architecture, c4, model, design, elm
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<p>😎 <a href="https://rdbmodel.github.io/">This application</a> allows you to create and visualize software architecture using a simplified version of the C4 model</p>
<p><img src="./images/diagram.eedae2b6.gif" alt="image1" />
<img src="./images/editor.17fc0b0b.gif" alt="image2" /></p>
<p>✍ Intuitive interface makes it easy to create and edit yaml files that represent the domain of your application</p>
<p>🪟 You can create multiple views of your model to better understand and communicate the relationships within your software system</p>
<p>🔎 Graphical interface enables you to create and edit views, layout elements and edges, zoom, scroll, and navigate through the selected view</p>
<p>💣 Application highlights any inconsistencies in the model and views using error messages, ensuring your software architecture is clear and consistent</p>
<p>☝ The C4 model is a powerful tool for understanding and communicating the structure of your software system, and our application supports the four main types of entities in the model: actors, systems, containers, and components</p>
<p>👨‍🔬 Whether you're a seasoned software architect or just starting out, our application makes it easy to design and understand your software architecture</p>
<p><a href="https://rdbmodel.github.io/">Link</a></p>

"""""
),
            ["""2023-04-01-Rotate-week-todo-app"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Rotate: The Desktop Todo App That Helps You Stay Organized
""""",
["""date"""] =
"""""
 2023-04-01
""""",
["""tags"""] =
"""""
 todo, elm, neutralinojs, desktop
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<p><img src="../images/6uYcsaJqui.png" alt="img" /></p>
<p>Do you often find yourself struggling to manage your tasks and keep track of deadlines? If so, you're not alone. Many people struggle to stay organized and focused, especially when they have a lot on their plate. That's why desktop todo apps like Rotate can be so helpful.</p>
<p>Rotate is a lightweight and user-friendly app that is designed to help you manage your tasks efficiently. It is built using Elm, a functional programming language, and Neutralinojs, a lightweight and portable framework for building desktop apps using web technologies.</p>
<p>One of the standout features of Rotate is its three types of tasks: Simple, Slice, and Cron. Simple tasks are those with a fixed due date that must be completed by that date. Slice tasks are those that must be completed daily, and if they aren't completed on the current day, they will be moved to the next day automatically. Cron tasks are those that need to be completed regularly based on a cron expression.</p>
<p>Rotate's simple and intuitive user interface makes it easy to create and manage your tasks. You can quickly add new tasks, mark them as complete, and edit or delete them as needed. You can also sort your tasks by due date or priority.</p>
<p>Another great feature of Rotate is its auto-update feature. The app automatically checks for updates and installs them for you, so you always have the latest version of the app with the newest features and bug fixes.</p>
<p>Rotate also saves all your tasks in a JSON file located near the app executable. This means you can easily backup and transfer your tasks to another device if needed.</p>
<p>If you're interested in trying out Rotate, you can find <a href="https://github.com/ypyl/rotate">the project on GitHub</a>. Overall, Rotate is a fantastic desktop todo app that can help you stay organized and focused. With its three types of tasks, auto-update feature, and JSON file saving, Rotate is a reliable and user-friendly app that can make your life easier. Give it a try today and see how it can help you manage your tasks with ease!</p>
<p><em>This text was generated by ChatGPT, a large language model trained by OpenAI, based on the GPT-3.5 architecture.</em></p>

"""""
),
            ["""2023-06-29-Creating-Blog-Using-Blazor"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Creating Blog using Blazor
""""",
["""date"""] =
"""""
 2023-06-29
""""",
["""categories"""] =
"""""
 programming
""""",
["""tags"""] =
"""""
 VSCode blazor dotnet SourceGenerator
""""",
 },
"""""
<h1 id="introduction">Introduction</h1>
<p>Creating a blog using <a href="https://dotnet.microsoft.com/en-us/apps/aspnet/web-apps/blazor">Blazor</a> is an interesting exercise to learn and explore the possibilities of Blazor. It's also fun to discover a new way to create a frontend app using <a href="https://learn.microsoft.com/en-us/dotnet/csharp/">C#</a>, <a href="https://learn.microsoft.com/en-us/aspnet/core/mvc/views/razor?view=aspnetcore-7.0">Razor</a>, <a href="https://webassembly.org/">Wasm</a>, <a href="https://www.mudblazor.com/">MudBlazor</a> and <a href="https://dotnet.microsoft.com/en-us/">DotNet</a>.</p>
<p><a href="https://learn.microsoft.com/en-us/aspnet/core/blazor/?view=aspnetcore-7.0#blazor-webassembly">Blazor Wasm</a> has been chosen as the framework allows hosting the blog on <a href="https://pages.github.com/">GitHub pages</a>. Since Blazor is the latest feature of ASP.NET for building interactive web UIs, it provides a valuable opportunity to try and learn this cutting-edge technology.</p>
<p>This article is not a step-by-step guide on how to build the website/blog. You can explore the code and its history in <a href="https://github.com/ypyl/ypyl.github.io">the source code repository</a>. Instead, the article focuses on the issues and interesting scenarios encountered during the app's development process.</p>
<h1 id="create-projects-and-solution">Create projects and solution</h1>
<h2 id="used-version-of-dotnet-and-vscode">Used version of dotnet and VScode</h2>
<p><a href="https://dotnet.microsoft.com/en-us/download/dotnet/7.0">Dotnet version 7.0</a> has been used and <a href="https://code.visualstudio.com/">VSCode</a> has been the chosen development tool for creating the app. However, it's worth noting that there have been some challenges when developing Blazor apps using VSCode. For a smoother experience and full support of all Blazor features, it is recommended to use Visual Studio as the integrated development environment (IDE).</p>
<h2 id="how-to-create-blazor-wasm-solution">How to create blazor wasm solution</h2>
<p>To create a Blazor app, you can start by running the following command <code>dotnet new blazorwasm</code>. This command will generate a new Blazor application.</p>
<p>To create a project that generates HTML code from Markdown, you can use <code>dotnet new console</code> command. After creating the console project, you can follow the instructions provided in the <a href="https://learn.microsoft.com/en-us/dotnet/csharp/roslyn-sdk/source-generators-overview">Source Generators article</a> to implement the necessary functionality.</p>
<p>Both of these projects can be combined in a single solution, allowing you to have a Blazor app alongside the project that generates HTML code from Markdown.</p>
<h2 id="why-source-generator-feature-as-it-doesnt-generate-separate-pages-for-each-blog-post">Why source generator feature as it doesn't generate separate pages for each blog post</h2>
<p>In the beginning, the idea was to generate a separate Blazor component page for each Markdown file. However, it was discovered that source generators do not support the generation of non-C# files. As a result, the decision was made to generate a single file that contains a map with the blog post names and their corresponding HTML content.</p>
<h1 id="sourcegenerator">SourceGenerator</h1>
<h2 id="how-to-start-with-it-and-examples">How to start with it and examples</h2>
<p>Source generators were <a href="https://devblogs.microsoft.com/dotnet/introducing-c-source-generators/">introduced in .NET 5</a>. They are a type of code that runs during compilation and enables the creation of additional files that are compiled alongside the rest of the code. There is useful <a href="https://github.com/dotnet/roslyn/blob/main/docs/features/source-generators.cookbook.md">cookbook</a> available that can be used to learn more about source generators.</p>
<h2 id="source-generator-reload-dotnet-build-server-shutdown-dotnet-clean-dotnet-run">Source generator reload - dotnet build-server shutdown; dotnet clean; dotnet run</h2>
<p>There is an interesting behavior regarding how source generators work. If you make changes to the code in the source generator project and expect those changes to immediately reflect in the project that uses the generated code, you will be disappointed. By simply running <code>dotnet build`` or </code>dotnet run``, the generated code in the target project will not be updated. In order to see the changes, you will need to execute the command dotnet build-server shutdown to clear the cache.</p>
<p>I encountered this issue and found a solution <a href="https://learn.microsoft.com/en-us/answers/questions/1184090/looking-for-assistance-clearing-the-cache-for-upda">here</a>.</p>
<p>To provide further context, the way it works is that the C# compiler, <code>csc.exe</code>, typically starts a &quot;compilation server&quot; named <code>VBCSCompiler.exe</code> to avoid the overhead of starting the process repeatedly. <code>csc.exe</code> forwards the parameters to <code>VBCSCompiler.exe</code> via interprocess communication (IPC) to perform the compilation. The compiler process, once loaded, will not pick up changes to the source generator DLL because it is loaded dynamically. Shutting down the <code>VBCSCompiler.exe</code> process or waiting for the idle timeout is necessary to load the updated DLL.</p>
<h2 id="issue-with-debugging-and-tracing">Issue with debugging and tracing</h2>
<p>Debugging source generators can be challenging, but there is a trick that can help:</p>
<ol>
<li>Add the following code at the beginning of the <code>Execute</code> method:</li>
</ol>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">while</span> (!System.Diagnostics.Debugger.IsAttached)
    System.Threading.Thread.Sleep(<span style="color:#B5CEA8;">500</span>);
</pre></div>
<ol start="2">
<li>Ensure that your <code>launch.json</code> file has a configuration to attach to the running dotnet process. Add the following configuration:</li>
</ol>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
{
    <span style="color:#FF8700;">&quot;name&quot;</span>: <span style="color:#008B8B;">&quot;.NET Core Attach&quot;</span>,
    <span style="color:#FF8700;">&quot;type&quot;</span>: <span style="color:#008B8B;">&quot;coreclr&quot;</span>,
    <span style="color:#FF8700;">&quot;request&quot;</span>: <span style="color:#008B8B;">&quot;attach&quot;</span>
},
</pre></div>
<ol start="3">
<li>Rebuild the entire project by running <code>dotnet build-server shutdown; dotnet clean; dotnet run</code> for your Blog web app. This command will pause at the building phase, allowing you time to attach to the building process. The process that needs to be attached to is typically <code>dotnet.exe</code>, which executes (<code>exec</code>) the VBCSCompiler.dll. For example, it could be something like <code>dotnet.exe exec C:\Program Files\dotnet\sdk\7.0.203\Roslyn\bincore\VBCSCompiler.dll</code>.</li>
</ol>
<p>The solution was found on <a href="https://stackoverflow.com/questions/67227370/c-sharp-source-generators-debug-in-vscode">StackOverflow</a>.</p>
<h2 id="using-sourcegenerator-to-create-html-from-md-files">Using SourceGenerator to create Html from MD files</h2>
<p>The `ArticleGenerator`` class contains the logic to convert Markdown files to their HTML representation. When the main project is built, a dictionary is created with article names as keys and HTML content and metadata as values. The <a href="https://github.com/xoofx/markdig">Markdig</a> library is utilized to perform the conversion from Markdown to HTML.</p>
<h2 id="using-targetpathwithtargetplatformmoniker">Using TargetPathWithTargetPlatformMoniker</h2>
<p>Since Markdig is used in the source generator project, it is necessary to inform the main project during the build process that Markdig is required. This can be accomplished by following a similar approach as shown in this <a href="https://github.com/dotnet/roslyn-sdk/blob/main/samples/CSharp/SourceGenerators/SourceGeneratorSamples/CSharpSourceGeneratorSamples.csproj#L27">sample</a>.</p>
<p>To achieve this, the NuGet reference needs to be marked with <code>GeneratePathProperty=&quot;true&quot;</code>, and the generated names, such as <code>PKGMarkdig</code>, <code>PKGMarkdown_ColorCode</code>, <code>PKGColorCode_Core</code>, and <code>PKGColorCode_Html</code>, should be used in the <code>TargetPathWithTargetPlatformMoniker</code> property. Note that the names should have a PKG prefix, and any dots should be replaced with underscores.</p>
<h2 id="referencing-sourcegenerator-from-blazor-app">Referencing SourceGenerator from Blazor app</h2>
<p>To reference a source generator project in the project that will use it, you need to add manually additional attributes to the reference definition. These attributes include <code>ReferenceOutputAssembly</code> and <code>OutputItemType</code>. Additionally, the <code>IncludeAssets</code> attribute should have a value <code>all</code>.</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#808080;">&lt;</span><span style="color:#E6E6E6;">ProjectReference</span> <span style="color:#92CAF4;">Include</span><span style="color:#808080;">=</span><span style="color:#569CD6;">&quot;</span><span style="color:#569CD6;">..\Generators\Generators.csproj</span><span style="color:#569CD6;">&quot;</span> <span style="color:#92CAF4;">ReferenceOutputAssembly</span><span style="color:#808080;">=</span><span style="color:#569CD6;">&quot;</span><span style="color:#569CD6;">false</span><span style="color:#569CD6;">&quot;</span> <span style="color:#92CAF4;">OutputItemType</span><span style="color:#808080;">=</span><span style="color:#569CD6;">&quot;</span><span style="color:#569CD6;">Analyzer</span><span style="color:#569CD6;">&quot;</span><span style="color:#808080;">&gt;</span>
    <span style="color:#808080;">&lt;</span><span style="color:#E6E6E6;">IncludeAssets</span><span style="color:#808080;">&gt;</span>all<span style="color:#808080;">&lt;/</span><span style="color:#E6E6E6;">IncludeAssets</span><span style="color:#808080;">&gt;</span>
<span style="color:#808080;">&lt;/</span><span style="color:#E6E6E6;">ProjectReference</span><span style="color:#808080;">&gt;</span>
</pre></div>
<p>By including these attributes and setting <code>IncludeAssets</code> to <code>all</code>, you ensure that the source generator project is properly referenced and that its assets are available for use in the consuming project.</p>
<h2 id="use-additionalfiles-to-provide-access-to-blogs-from-sourcegenerator">Use AdditionalFiles to provide access to blogs from SourceGenerator</h2>
<p>As Markdown files are converted to HTML during the compilation of the main Blazor project, it is necessary to reference them in the main project so that the source generator project can find them. To achieve this, you can use the special construct called <a href="https://github.com/dotnet/roslyn/blob/main/docs/analyzers/Using%20Additional%20Files.md">AdditionalFiles</a>.</p>
<p>Here's how you can include the Markdown files as AdditionalFiles in the project file (XML format):</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#808080;">&lt;</span><span style="color:#E6E6E6;">AdditionalFiles</span> <span style="color:#92CAF4;">Include</span><span style="color:#808080;">=</span><span style="color:#569CD6;">&quot;</span><span style="color:#569CD6;">..\Blog\**\*.md</span><span style="color:#569CD6;">&quot;</span> <span style="color:#808080;">/&gt;</span>
</pre></div>
<p>By adding this line to the project file, you are telling the compiler to consider all Markdown files (*.md) located in the ..\Blog directory and its subdirectories as AdditionalFiles. These files will then be accessible to the source generator project during the build process.</p>
<h1 id="blazor-app">Blazor app</h1>
<h2 id="using-mudblazor">Using MudBlazor</h2>
<p>The decision has been made to use <a href="https://www.mudblazor.com/">MudBlazor</a>, a Blazor Component Library that offers a wide range of components and is very user-friendly. With MudBlazor, there is no need to invest significant time in creating raw HTML and CSS code. Instead, developers can leverage the well-designed and convenient components provided by the library, making the development process much more efficient and enjoyable.</p>
<h3 id="adding-styles-to-mudtext-title">Adding styles to MudText title</h3>
<p>To add custom styling to a MudBlazor component, you can use the <code>Style</code> property:</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
&lt;MudText Typo=<span style="color:#D69D85;">&quot;Typo.h5&quot;</span> Class=<span style="color:#D69D85;">&quot;flex-grow-1&quot;</span> Style=<span style="color:#D69D85;">&quot;white-space: nowrap; text-overflow: ellipsis; overflow: hidden;&quot;</span>&gt;@articleService.ArticleName&lt;/MudText&gt;
</pre></div>
<p>In this example, the <code>Style</code> property is used to apply custom CSS styling to the <code>MudText</code> component. The specified CSS styles will make sure that the content of the <code>MudText</code> component does not wrap, and any overflow is hidden with an ellipsis. The <code>Class</code> property is also used here to apply additional CSS classes to the component for more styling options.</p>
<h2 id="copy-assets-and-images-to-output-folder">Copy assets and images to output folder</h2>
<p>To copy images and assets from the Blog folder to the output folder, you can use the following commands in the project file:</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#808080;">&lt;</span><span style="color:#E6E6E6;">ItemGroup</span><span style="color:#808080;">&gt;</span>
    <span style="color:#808080;">&lt;</span><span style="color:#E6E6E6;">ContentWithTargetPath</span> <span style="color:#92CAF4;">Include</span><span style="color:#808080;">=</span><span style="color:#569CD6;">&quot;</span><span style="color:#569CD6;">..\Blog\images\*.*</span><span style="color:#569CD6;">&quot;</span><span style="color:#808080;">&gt;</span>
        <span style="color:#808080;">&lt;</span><span style="color:#E6E6E6;">Link</span><span style="color:#808080;">&gt;</span>%(RecursiveDir)%(Filename)%(Extension)<span style="color:#808080;">&lt;/</span><span style="color:#E6E6E6;">Link</span><span style="color:#808080;">&gt;</span>
        <span style="color:#808080;">&lt;</span><span style="color:#E6E6E6;">CopyToOutputDirectory</span><span style="color:#808080;">&gt;</span>PreserveNewest<span style="color:#808080;">&lt;/</span><span style="color:#E6E6E6;">CopyToOutputDirectory</span><span style="color:#808080;">&gt;</span>
        <span style="color:#808080;">&lt;</span><span style="color:#E6E6E6;">TargetPath</span><span style="color:#808080;">&gt;</span>wwwroot/images/%(RecursiveDir)%(Filename)%(Extension)<span style="color:#808080;">&lt;/</span><span style="color:#E6E6E6;">TargetPath</span><span style="color:#808080;">&gt;</span>
    <span style="color:#808080;">&lt;/</span><span style="color:#E6E6E6;">ContentWithTargetPath</span><span style="color:#808080;">&gt;</span>
    <span style="color:#808080;">&lt;</span><span style="color:#E6E6E6;">ContentWithTargetPath</span> <span style="color:#92CAF4;">Include</span><span style="color:#808080;">=</span><span style="color:#569CD6;">&quot;</span><span style="color:#569CD6;">..\Blog\assets\*.*</span><span style="color:#569CD6;">&quot;</span><span style="color:#808080;">&gt;</span>
        <span style="color:#808080;">&lt;</span><span style="color:#E6E6E6;">Link</span><span style="color:#808080;">&gt;</span>%(RecursiveDir)%(Filename)%(Extension)<span style="color:#808080;">&lt;/</span><span style="color:#E6E6E6;">Link</span><span style="color:#808080;">&gt;</span>
        <span style="color:#808080;">&lt;</span><span style="color:#E6E6E6;">CopyToOutputDirectory</span><span style="color:#808080;">&gt;</span>PreserveNewest<span style="color:#808080;">&lt;/</span><span style="color:#E6E6E6;">CopyToOutputDirectory</span><span style="color:#808080;">&gt;</span>
        <span style="color:#808080;">&lt;</span><span style="color:#E6E6E6;">TargetPath</span><span style="color:#808080;">&gt;</span>wwwroot/assets/%(RecursiveDir)%(Filename)%(Extension)<span style="color:#808080;">&lt;/</span><span style="color:#E6E6E6;">TargetPath</span><span style="color:#808080;">&gt;</span>
    <span style="color:#808080;">&lt;/</span><span style="color:#E6E6E6;">ContentWithTargetPath</span><span style="color:#808080;">&gt;</span>
<span style="color:#808080;">&lt;/</span><span style="color:#E6E6E6;">ItemGroup</span><span style="color:#808080;">&gt;</span>
</pre></div>
<p>In this code snippet, the <code>ItemGroup</code> element is used to specify the content that needs to be copied. The <code>ContentWithTargetPath</code> item includes the source path for the images and assets in the Blog folder. The <code>Link</code> element specifies the target path for the copied files. The <code>CopyToOutputDirectory</code> element with the value <code>PreserveNewest</code> ensures that only newer files are copied. The <code>TargetPath</code> element sets the output path for the copied files within the <code>wwwroot/images</code> and <code>wwwroot/assets</code> folders, respectively.</p>
<h2 id="use-katex-in-blog-posts">Use Katex in blog posts</h2>
<p>To support Katex for displaying formulas in the blog app, you need to make modifications to the <code>index.html</code> file and the Blazor component.</p>
<ul>
<li>Include the Katex script in the head of the <code>index.html</code> file:</li>
</ul>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#57A64A;">&lt;!-- The loading of KaTeX is deferred to speed up page rendering --&gt;</span>
<span style="color:#569CD6;">&lt;</span><span style="color:#A31515;">script</span> <span style="color:#FF0000;">defer</span> <span style="color:#FF0000;">src</span><span style="color:#569CD6;">=</span><span style="color:#569CD6;">&quot;https://cdn.jsdelivr.net/npm/katex@0.16.7/dist/katex.min.js&quot;</span> <span style="color:#FF0000;">integrity</span><span style="color:#569CD6;">=</span><span style="color:#569CD6;">&quot;sha384-G0zcxDFp5LWZtDuRMnBkk3EphCK1lhEf4UEyEM693ka574TZGwo4IWwS6QLzM/2t&quot;</span> <span style="color:#FF0000;">crossorigin</span><span style="color:#569CD6;">=</span><span style="color:#569CD6;">&quot;anonymous&quot;</span><span style="color:#569CD6;">&gt;</span><span style="color:#569CD6;">&lt;/</span><span style="color:#A31515;">script</span><span style="color:#569CD6;">&gt;</span>
</pre></div>
<ul>
<li>Add the following script to the end of the <code>index.html</code> file:</li>
</ul>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
window.callKatex = <span style="color:#569CD6;">function</span>() {
    <span style="color:#569CD6;">var</span> tex =  document.querySelectorAll(<span style="color:#D69D85;">&#39;.math&#39;</span>);
    <span style="color:#569CD6;">for</span> (<span style="color:#569CD6;">const</span> el of tex) {
        <span style="color:#569CD6;">const</span> txt = el.textContent.trim().replace(/^\\\(/, <span style="color:#D69D85;">&#39;&#39;</span>).replace(/\\\)$/, <span style="color:#D69D85;">&#39;&#39;</span>).replace(/^\\\[/, <span style="color:#D69D85;">&#39;&#39;</span>).replace(/\\\]$/, <span style="color:#D69D85;">&#39;&#39;</span>);
        <span style="color:#569CD6;">const</span> displayMode = txt.indexOf(<span style="color:#D69D85;">&#39;begin&#39;</span>) &gt; -1;
        katex.render(txt, el, { displayMode: displayMode });
    }
};
</pre></div>
<ul>
<li>Call the <code>callKatex</code> function in the <code>OnAfterRenderAsync</code> method of the Blazor component:</li>
</ul>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">protected</span> <span style="color:#569CD6;">override</span> <span style="color:#569CD6;">async</span> Task OnAfterRenderAsync(<span style="color:#569CD6;">bool</span> firstRender)
{
    <span style="color:#569CD6;">await</span> JSRuntime.InvokeVoidAsync(<span style="color:#D69D85;">&quot;callKatex&quot;</span>);
    articleService.ArticleName = SelectedArticleName;
}
</pre></div>
<p>By following these steps, you will be able to support Katex and render formulas in your Blazor app.</p>
<h2 id="using-recurssion-to-render-folder-structure">Using recurssion to render folder structure</h2>
<p>The Blog app has a navigation panel on the left side that contains a list of articles. The articles are organized using folders, and this organization is represented as a hierarchy in the navigation.</p>
<p><code>FolderComponent</code> is a Blazor component that renders the hierarchy by calling itself to render child folders:</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
@<span style="color:#569CD6;">foreach</span> (<span style="color:#569CD6;">var</span> folder <span style="color:#569CD6;">in</span> FolderValue.Folders)
{
    &lt;FolderComponent FolderValue=<span style="color:#D69D85;">&quot;@folder&quot;</span> SearchTerm=<span style="color:#D69D85;">&quot;@SearchTerm&quot;</span>&gt;&lt;/FolderComponent&gt;
}
</pre></div>
<p>In this code snippet, the <code>FolderComponent</code> iterates through the child folders of the current folder (FolderV<code>alue). For each child folder, it recursively calls itself (</code>FolderComponent<code>) to render the sub-folders and articles present in the hierarchy. The </code>SearchTerm` parameter is also passed to the child components, enabling search functionality within the folders and articles.</p>
<h2 id="update-blog-title-in-a-layout-based-on-article">Update blog title in a layout based on article</h2>
<p>To notify the <code>MainLayout</code> component about changes in the article name, a service is used with an event that the <code>MainLayout</code> component subscribes to. Here's the corrected code:</p>
<p>In the service class:</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">public</span> <span style="color:#569CD6;">event</span> Action OnArticleChange = () =&gt; {};
<span style="color:#569CD6;">public</span> <span style="color:#569CD6;">string</span> ArticleName
{
    <span style="color:#569CD6;">get</span> { <span style="color:#569CD6;">return</span> _articleName; }
    <span style="color:#569CD6;">set</span> {
        <span style="color:#569CD6;">if</span> (_articleName != value)
        {
            <span style="color:#569CD6;">if</span> (Blog.Articles.Value()[value].Item1.TryGetValue(<span style="color:#D69D85;">&quot;title&quot;</span>, <span style="color:#569CD6;">out</span> <span style="color:#569CD6;">var</span> title))
            {
                _articleName = title;
            }
            <span style="color:#569CD6;">else</span>
            {
                _articleName = value;
            }
            NotifyArticleNameChanged();
        }
    }
}

<span style="color:#569CD6;">private</span> <span style="color:#569CD6;">void</span> NotifyArticleNameChanged() =&gt; OnArticleChange?.Invoke();
</pre></div>
<p>In the <code>MainLayout</code> component:</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">protected</span> <span style="color:#569CD6;">override</span> <span style="color:#569CD6;">void</span> OnInitialized()
{
    articleService.OnArticleChange += StateHasChanged;
}

<span style="color:#569CD6;">public</span> <span style="color:#569CD6;">void</span> Dispose()
{
    articleService.OnArticleChange -= StateHasChanged;
}
</pre></div>
<p>In the <code>Article</code> component:</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">protected</span> <span style="color:#569CD6;">override</span> <span style="color:#569CD6;">async</span> Task OnAfterRenderAsync(<span style="color:#569CD6;">bool</span> firstRender)
{
    <span style="color:#569CD6;">await</span> JSRuntime.InvokeVoidAsync(<span style="color:#D69D85;">&quot;callKatex&quot;</span>);
    articleService.ArticleName = SelectedArticleName;
}
</pre></div>
<p>With these changes, when the <code>SelectedArticleName</code> changes in the <code>Article</code> component, it will trigger a change in the <code>MainLayout</code> component, causing it to re-render itself and reflect the updated article name.</p>
<h2 id="using-markupstring-to-render-blog-html">Using MarkupString to render blog html</h2>
<p>As the HTML representation of the article is created during the building of the app, it is required to render the raw HTML in the <code>Article</code> component. To achieve that, you can use <code>MarkupString</code>:</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
@(<span style="color:#569CD6;">new</span> MarkupString(articleService.Content(SelectedArticleName)))
</pre></div>
<p>In this code snippet, <code>MarkupString</code> is used to render the HTML content obtained from the <code>articleService.Content(SelectedArticleName)</code> method. The <code>MarkupString</code> class allows you to render raw HTML as markup in a Blazor component. By wrapping the <code>articleService.Content(SelectedArticleName)</code> with <code>MarkupString</code>, the raw HTML will be displayed properly in the <code>Article</code> component.</p>
<h1 id="github-actions-to-deploy-blog-to-github-pages">GitHub actions to deploy blog to GitHub pages</h1>
<p>As it is a Blazor WebAssembly app, you can host it on <a href="https://pages.github.com/">GitHub Pages</a>. To achieve this, you need to build and publish the application using <a href="https://github.com/features/actions">GitHub Actions</a>. Below is the corrected YAML configuration for the GitHub Actions workflow:</p>
<pre><code class="language-yaml">name: Deploy to GitHub Pages

# Run workflow on every push to the master branch
on:
  push:
    branches: [ master ]

jobs:
  deploy-to-github-pages:
    # use ubuntu-latest image to run steps on
    runs-on: ubuntu-latest
    steps:
    # uses GitHub's checkout action to checkout code form the master branch
    - uses: actions/checkout@v2

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x

    - name: Clear NuGet package cache
      run: dotnet nuget locals all --clear

    - name: Restore NuGet packages
      run: dotnet restore

    - name: Build
      run: dotnet build

    # publishes Blazor project to the release-folder
    - name: Publish .NET Core Project
      run: dotnet publish BlazorBlog/BlazorBlog.csproj -c Release -o release --nologo

    # copy index.html to 404.html to serve the same file when a file is not found
    - name: copy index.html to 404.html
      run: cp release/wwwroot/index.html release/wwwroot/404.html

    # add .nojekyll file to tell GitHub pages to not treat this as a Jekyll project. (Allow files and folders starting with an underscore)
    - name: Add .nojekyll file
      run: touch release/wwwroot/.nojekyll

    - name: Commit wwwroot to GitHub Pages
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        branch: gh-pages
        folder: release/wwwroot
</code></pre>
<p>With this YAML configuration, the GitHub Actions workflow will trigger on pushes to the <code>main</code> branch. It will build the Blazor project, publish it to the <code>release</code> folder, and deploy the contents of the <code>release/wwwroot</code> directory to the <code>gh-pages</code> branch. This will host your Blazor WebAssembly app on GitHub Pages.</p>
<h1 id="summary">Summary</h1>
<p>In this article, I share my experience creating a blog application using Blazor WebAssembly, exploring its versatile capabilities with C#, Razor, WebAssembly, and .NET. Throughout the development process, I encountered and addressed various challenges, documenting the solutions for readers to learn from. Utilizing MudBlazor's component library expedited the frontend development, while source generators optimized file generation during compilation. I also navigated the integration of KaTeX for displaying formulas and managed Markdown files and assets seamlessly. Ultimately, the blog application was successfully hosted on GitHub Pages with GitHub Actions. This article serves as a concise guide for building a Blazor WebAssembly blog and offers insights into overcoming common hurdles, inspiring developers to explore Blazor's potential for dynamic web applications.</p>
<p>Source code is available by <a href="https://github.com/ypyl/ypyl.github.io">link</a>.</p>

"""""
),
            ["""2023-07-10-Nomad-Visas"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Nomad Visas
""""",
["""date"""] =
"""""
 2023-07-10
""""",
["""categories"""] =
"""""
 travelling
""""",
["""tags"""] =
"""""
 visa programming travel
""""",
 },
"""""
<table>
<thead>
<tr>
<th>Visa Name</th>
<th>Visa Fee</th>
<th>Income Required</th>
<th>Visa Period</th>
<th>Country Name</th>
</tr>
</thead>
<tbody>
<tr>
<td>Lose the crowd find yourself work, life, bliss program</td>
<td>$2,000</td>
<td>No income requirement</td>
<td>1-year</td>
<td>Anguilla</td>
</tr>
<tr>
<td>Digital nomad residence program</td>
<td>$1,500</td>
<td>$4,166 monthly income required</td>
<td>2-year</td>
<td>Antigua and Barbuda</td>
</tr>
<tr>
<td>Extended access travel stay</td>
<td>$25</td>
<td>No income requirement</td>
<td>1-year with 2-year extension</td>
<td>Bahamas</td>
</tr>
<tr>
<td>Welcome Stamp</td>
<td>$2,000</td>
<td>$4,166 monthly income required</td>
<td>1-year with 1-year extension</td>
<td>Barbados</td>
</tr>
<tr>
<td>Work Where You Vacation program</td>
<td>$250</td>
<td>$6,250 monthly income required</td>
<td>6 months</td>
<td>Belize</td>
</tr>
<tr>
<td>One year residential certificate</td>
<td>$263</td>
<td>No income requirment</td>
<td>1-year</td>
<td>Bermuda</td>
</tr>
<tr>
<td>Digital Nomad Visa (VITEM XIV)</td>
<td>$120</td>
<td>$1,500 monthly income or $18k proof of funds</td>
<td>1-year with 1-year extension</td>
<td>Brazil</td>
</tr>
<tr>
<td>Remote working program</td>
<td>$21</td>
<td>$1,800 monthly income required</td>
<td>6 month</td>
<td>Cabo Verde</td>
</tr>
<tr>
<td>Global Citizen Concierge Program</td>
<td>$1,469</td>
<td>$100,000 yearly income required</td>
<td>2-year</td>
<td>Cayman Islands</td>
</tr>
<tr>
<td>Digital Nomad Visa</td>
<td>$190</td>
<td>$3,000 monthly income required</td>
<td>1-year with 1-year extension</td>
<td>Costa Rica</td>
</tr>
<tr>
<td>Digital Nomad Visa</td>
<td>$73 visa fee, $66 residence fee</td>
<td>$2,658 monthly income required</td>
<td>1-year</td>
<td>Croatia</td>
</tr>
<tr>
<td>@Home in Curaçao</td>
<td>$300</td>
<td>No income requirement</td>
<td>6 month with 6-month extension</td>
<td>Curaçao</td>
</tr>
<tr>
<td>Digital Nomad Visa</td>
<td>$78</td>
<td>$3,083 monthly income required</td>
<td>1-year with 2-year extension</td>
<td>Cyprus</td>
</tr>
<tr>
<td>Zivno Freelance visa</td>
<td>$117 visa fee, $46 trade license</td>
<td>$5,200 proof of funds</td>
<td>1-year</td>
<td>Czechia</td>
</tr>
<tr>
<td>Wok in nature visa program</td>
<td>$800</td>
<td>$4,166 monthly income required</td>
<td>18-month</td>
<td>Dominica</td>
</tr>
<tr>
<td>Digital Nomad visa</td>
<td>$50 application fee, $400</td>
<td>$1,275 monthly income required</td>
<td>2-year</td>
<td>Ecuador</td>
</tr>
<tr>
<td>First ever digital nomad visa</td>
<td>$105</td>
<td>$3,083 monthly income required</td>
<td>1-year</td>
<td>Estonia</td>
</tr>
<tr>
<td>Remotely from Georgia</td>
<td>Free</td>
<td>$2,000 monthly income required</td>
<td>1-year</td>
<td>Georgia</td>
</tr>
<tr>
<td>Freelance visa</td>
<td>$105</td>
<td>Must be self-employed</td>
<td>3-year</td>
<td>Germany</td>
</tr>
<tr>
<td>Digital Nomad Visa</td>
<td>$79</td>
<td>$3,690 monthly income required</td>
<td>3-year</td>
<td>Greece</td>
</tr>
<tr>
<td>Remote Employment Act</td>
<td>$1,500</td>
<td>$3,083 monthly income required</td>
<td>1-year with 1-year extension</td>
<td>Grenada</td>
</tr>
<tr>
<td>Hungarian White Card visa</td>
<td>$116</td>
<td>$2,110 monthly income required</td>
<td>1-year</td>
<td>Hungary</td>
</tr>
<tr>
<td>Digital Nomad Visa</td>
<td>$96</td>
<td>$7,763 monthly income required</td>
<td>6 month</td>
<td>Iceland</td>
</tr>
<tr>
<td>Digital Nomad Visa</td>
<td>$65</td>
<td>$3,020 monthly income required</td>
<td>1-year with 1-year extension</td>
<td>Latvia</td>
</tr>
<tr>
<td>DE Rantau Nomad Pass</td>
<td>$221</td>
<td>$2,000 monthly income required</td>
<td>1-year</td>
<td>Malaysia</td>
</tr>
<tr>
<td>Digital Nomad Visa</td>
<td>$316</td>
<td>$2,850 monthly income required</td>
<td>1-year</td>
<td>Malta</td>
</tr>
<tr>
<td>Premium Travel Visa</td>
<td>Free</td>
<td>$1,500 monthly income required</td>
<td>1-year</td>
<td>Mauritius</td>
</tr>
<tr>
<td>Lose the crowd find yourself, work, life, bliss program</td>
<td>$2,000</td>
<td>No income requirement</td>
<td>1-year</td>
<td>Anguilla</td>
</tr>
<tr>
<td>Digital nomad residence program</td>
<td>$1,500</td>
<td>$4,166 monthly income required</td>
<td>2-year</td>
<td>Antigua and Barbuda</td>
</tr>
<tr>
<td>Extended access travel stay</td>
<td>$25</td>
<td>No income requirement</td>
<td>1-year with 2-year extension</td>
<td>Bahamas</td>
</tr>
<tr>
<td>Welcome Stamp</td>
<td>$2,000</td>
<td>$4,166 monthly income required</td>
<td>1-year with 1-year extension</td>
<td>Barbados</td>
</tr>
<tr>
<td>Work Where You Vacation program</td>
<td>$250</td>
<td>$6,250 monthly income required</td>
<td>6 months</td>
<td>Belize</td>
</tr>
<tr>
<td>One year residential certificate</td>
<td>$263</td>
<td>No income requirement</td>
<td>1-year</td>
<td>Bermuda</td>
</tr>
<tr>
<td>Digital Nomad Visa (VITEM XIV)</td>
<td>$120</td>
<td>$1,500 monthly income or $18k proof of funds</td>
<td>1-year with 1-year extension</td>
<td>Brazil</td>
</tr>
<tr>
<td>Remote working program</td>
<td>$21</td>
<td>$1,800 monthly income required</td>
<td>6 month</td>
<td>Cabo Verde</td>
</tr>
<tr>
<td>Global Citizen Concierge Program</td>
<td>$1,469</td>
<td>$100,000 yearly income required</td>
<td>2-year</td>
<td>Cayman Islands</td>
</tr>
<tr>
<td>Digital Nomad Visa</td>
<td>$190</td>
<td>$3,000 monthly income required</td>
<td>1-year with 1-year extension</td>
<td>Costa Rica</td>
</tr>
<tr>
<td>Digital Nomad Visa</td>
<td>$73 visa fee, $66 residence fee</td>
<td>$2,658 monthly income required</td>
<td>1-year</td>
<td>Croatia</td>
</tr>
<tr>
<td>@Home in Curaçao</td>
<td>$300</td>
<td>No income requirement</td>
<td>6 month with 6-month extension</td>
<td>Curaçao</td>
</tr>
<tr>
<td>Digital Nomad Visa</td>
<td>$78</td>
<td>$3,083 monthly income required</td>
<td>1-year with 2-year extension</td>
<td>Cyprus</td>
</tr>
<tr>
<td>Zivno Freelance visa</td>
<td>$117 visa fee, $46 trade license</td>
<td>$5,200 proof of funds</td>
<td>1-year</td>
<td>Czechia</td>
</tr>
<tr>
<td>Wok in nature visa program</td>
<td>$800</td>
<td>$4,166 monthly income required</td>
<td>18-month</td>
<td>Dominica</td>
</tr>
<tr>
<td>Digital Nomad visa</td>
<td>$50 application fee, $400 visa fee</td>
<td>$1,275 monthly income required</td>
<td>2-year</td>
<td>Ecuador</td>
</tr>
<tr>
<td>First ever digital nomad visa</td>
<td>$105</td>
<td>$3,083 monthly income required</td>
<td>1-year</td>
<td>Estonia</td>
</tr>
<tr>
<td>Remotely from Georgia</td>
<td>Free</td>
<td>$2,000 monthly income required</td>
<td>1-year</td>
<td>Georgia</td>
</tr>
<tr>
<td>Freelance visa</td>
<td>$105</td>
<td>Must be self-employed</td>
<td>3-year</td>
<td>Germany</td>
</tr>
<tr>
<td>Digital Nomad Visa</td>
<td>$79</td>
<td>$3,690 monthly income required</td>
<td>3-year</td>
<td>Greece</td>
</tr>
<tr>
<td>Remote Employment Act</td>
<td>$1,500</td>
<td>$3,083 monthly income required</td>
<td>1-year with 1-year extension</td>
<td>Grenada</td>
</tr>
<tr>
<td>Hungarian White Card visa</td>
<td>$116</td>
<td>$2,110 monthly income required</td>
<td>1-year</td>
<td>Hungary</td>
</tr>
<tr>
<td>Digital Nomad Visa</td>
<td>$96</td>
<td>$7,763 monthly income required</td>
<td>6 month</td>
<td>Iceland</td>
</tr>
<tr>
<td>Digital Nomad Visa</td>
<td>$65</td>
<td>$3,020 monthly income required</td>
<td>1-year with 1-year extension</td>
<td>Latvia</td>
</tr>
<tr>
<td>DE Rantau Nomad Pass</td>
<td>$221</td>
<td>$2,000 monthly income required</td>
<td>1-year</td>
<td>Malaysia</td>
</tr>
<tr>
<td>Digital Nomad Visa</td>
<td>$316</td>
<td>$2,850 monthly income required</td>
<td>1-year</td>
<td>Malta</td>
</tr>
<tr>
<td>Premium Travel Visa</td>
<td>Free</td>
<td>$1,500 monthly income required</td>
<td>1-year</td>
<td>Mauritius</td>
</tr>
<tr>
<td>Temporary Resident Visa</td>
<td>$150 to $350 visa fee</td>
<td>$2,600 monthly income required</td>
<td>1-year with 3-year extension</td>
<td>Mexico</td>
</tr>
<tr>
<td>Remote Workers Stamp</td>
<td>$500</td>
<td>$5,833 monthly income required</td>
<td>1-year</td>
<td>Montserrat</td>
</tr>
<tr>
<td>Digital Nomad Visa</td>
<td>$62</td>
<td>$2,000 monthly income required</td>
<td>6 month</td>
<td>Namibia</td>
</tr>
<tr>
<td>Working Holiday Visa</td>
<td>$150 to $200 visa fee</td>
<td>$2,700 proof of funds</td>
<td>1-year</td>
<td>New Zealand</td>
</tr>
<tr>
<td>Digital Nomad Visa</td>
<td>$632</td>
<td>$3,140 monthly income required</td>
<td>2-year</td>
<td>Norway</td>
</tr>
<tr>
<td>Digital Nomad Visa</td>
<td>$300</td>
<td>$3,000 monthly income required</td>
<td>9-month with 9-month extension</td>
<td>Panama</td>
</tr>
<tr>
<td>Digital Nomad Visa</td>
<td>$190</td>
<td>$2,950 monthly income required</td>
<td>1-year with 4-year extension</td>
<td>Portugal</td>
</tr>
<tr>
<td>Digital Nomad Visa</td>
<td>$120 visa fee, $50 residence fee</td>
<td>$3,900 monthly income required</td>
<td>1-year</td>
<td>Romania</td>
</tr>
<tr>
<td>Digital Nomad Visa</td>
<td>$46</td>
<td>No income requirement</td>
<td>1-year</td>
<td>Saint Lucia</td>
</tr>
<tr>
<td>Digital Nomad Visa</td>
<td>$47</td>
<td>No income requirement</td>
<td>1-year</td>
<td>Seychelles</td>
</tr>
<tr>
<td>Digital Nomad Visa</td>
<td>$265</td>
<td>$2,215 monthly income required</td>
<td>1-year with 4-year extension</td>
<td>Spain</td>
</tr>
<tr>
<td>Employment Gold Card Visa</td>
<td>$230 to $300 visa fee</td>
<td>$5,600 monthly income required</td>
<td>1-year with 2-year extension</td>
<td>Taiwan</td>
</tr>
<tr>
<td>Digital Nomad Visa</td>
<td>$600</td>
<td>$80,000 yearly income required</td>
<td>up to 10 years</td>
<td>Thailand</td>
</tr>
<tr>
<td>Remote Working Visa Scheme</td>
<td>$81 to $287 visa fee</td>
<td>$5,000 monthly income required</td>
<td>1-year</td>
<td>United Arab Emirates</td>
</tr>
</tbody>
</table>

"""""
),
            ["""2023-07-13-Coding-Techniques"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Coding techniques
""""",
["""date"""] =
"""""
 2023-07-13
""""",
["""categories"""] =
"""""
 programming
""""",
["""tags"""] =
"""""
 interview coding pattern
""""",
 },
"""""
<h1 id="sliding-window"><a href="https://de.wikipedia.org/wiki/Sliding_Window">Sliding Window</a></h1>
<p><img src="./images/52s4F62R2c.png" alt="sliding-window" /></p>
<h2 id="description">Description</h2>
<p>The Sliding Window coding technique is a strategy used in computer programming to efficiently process arrays, strings, or other sequence-based data structures. It involves maintaining a window that slides through the input data, manipulating and updating elements as it moves along. By adjusting the window's size or position based on the problem's requirements, the technique allows for the efficient computation or discovery of subarrays, substrings, or subsequences that satisfy specific conditions. This approach significantly reduces time complexity, often from O(n^2) to O(n) or even O(1), making it ideal for solving problems with large input sizes. By reusing information from the previous window, unnecessary recomputation is avoided, resulting in improved algorithmic performance. Overall, the Sliding Window technique offers an effective solution for efficiently processing sequence-based data, optimizing computations, and solving algorithmic problems.</p>
<h2 id="data-structures-involved">Data Structures Involved</h2>
<p><a href="https://en.wikipedia.org/wiki/Array_%28data_structure%29">Array</a>, <a href="https://en.wikipedia.org/wiki/String_%28computer_science%29">String</a>, <a href="https://en.wikipedia.org/wiki/Hash_table">HashTable</a></p>
<h2 id="sample-problems">Sample Problems</h2>
<ul>
<li><a href="https://leetcode.com/problems/longest-substring-without-repeating-characters/description/">Longest Substring with 'K' Distinct Characters</a></li>
<li><a href="https://leetcode.com/problems/fruit-into-baskets/">Fruits into Baskets</a></li>
</ul>
<h1 id="islands-matrix-traversal"><a href="https://levelup.gitconnected.com/grokking-the-coding-interview-pattern-island-dc9c7def6b54#:%7E:text=We%20can%20traverse%20the%20matrix%20linearly%20to%20find,to%20find%20all%20of%20its%20connected%20land%20cells.">Islands (Matrix Traversal)</a></h1>
<p><img src="./images/DPPj8CoBIl.png" alt="island" /></p>
<h2 id="description-1">Description</h2>
<p>The Islands (Matrix Traversal) technique is a coding strategy used to solve problems involving matrix traversal and the identification of islands or connected components within the grid. It typically involves iterating through the matrix and using algorithms like DFS or BFS to explore neighboring cells and recursively visit adjacent ones that meet specific criteria. By marking visited cells and efficiently traversing the matrix, this technique enables the efficient identification and manipulation of islands or connected components, reducing time complexity and facilitating analysis of grid-like structures.</p>
<h2 id="data-structures-involved-1">Data Structures Involved</h2>
<p><a href="https://en.wikipedia.org/wiki/Matrix_(mathematics)">Matrix</a>, <a href="https://en.wikipedia.org/wiki/Queue_(abstract_data_type)">Queue</a></p>
<h2 id="sample-problems-1">Sample Problems</h2>
<ul>
<li><a href="https://leetcode.com/problems/number-of-islands/">Number of Islands</a></li>
<li><a href="https://leetcode.com/problems/flood-fill/">Flood Fill</a></li>
<li><a href="https://leetcode.com/problems/detect-cycles-in-2d-grid/">Cycle in a Matrix</a></li>
</ul>
<h1 id="two-pointers"><a href="https://www.geeksforgeeks.org/two-pointers-technique/">Two Pointers</a></h1>
<p><img src="./images/OKJsB0cjio.png" alt="two-pointers" /></p>
<h2 id="description-2">Description</h2>
<p>The Two Pointers technique is a coding strategy used to efficiently solve problems involving sorted arrays or sequences. It utilizes two pointers, often starting from different ends or positions, to traverse and manipulate the data simultaneously. By taking advantage of the sorted nature of the input, the technique allows for optimized traversal and comparison of elements. The pointers can move in different ways based on the problem's requirements, enabling efficient operations such as searching, merging, or identifying patterns within the data. This technique provides an effective approach to solve problems with sorted arrays or sequences, reducing time complexity and improving algorithmic efficiency.</p>
<h2 id="data-structures-involved-2">Data Structures Involved</h2>
<p><a href="https://en.wikipedia.org/wiki/Array_%28data_structure%29">Array</a>, <a href="https://en.wikipedia.org/wiki/String_%28computer_science%29">String</a>, <a href="https://en.wikipedia.org/wiki/Linked_list">LinkedList</a></p>
<h2 id="sample-problems-2">Sample Problems</h2>
<ul>
<li>[Squaring a Sorted <a href="https://en.wikipedia.org/wiki/Array_%28data_structure%29">Array</a>](<a href="https://leetcode.com/problems/squares-of-a-sorted-array/">https://leetcode.com/problems/squares-of-a-sorted-array/</a>)</li>
<li><a href="https://leetcode.com/problems/sort-colors/solutions/1505473/dutch-national-flag-problem/">Dutch National Flag Problem</a></li>
<li><a href="https://leetcode.com/problems/minimum-window-substring/">Minimum Window Sort</a></li>
</ul>
<h1 id="fast-slow-pointers"><a href="https://techbum.io/slow-fast-pointers-linked-list/">Fast &amp; Slow Pointers</a></h1>
<p><img src="./images/fUvRwuxhNX.png" alt="fast-and-slow-pointers" /></p>
<h2 id="description-3">Description</h2>
<p>The Fast &amp; Slow Pointers technique is a coding strategy that involves using two pointers, fast and slow, to solve problems related to linked lists or sequences. The fast pointer moves at a faster rate, typically advancing by multiple steps per iteration, while the slow pointer lags behind. This technique is particularly useful for tasks like detecting cycles, finding middle elements, or performing operations that rely on the relative speed or distance between elements. By manipulating and comparing the elements at the positions of the fast and slow pointers, various operations can be efficiently performed on linked lists or sequences.</p>
<h2 id="data-structures-involved-3">Data Structures Involved</h2>
<p><a href="https://en.wikipedia.org/wiki/Array_%28data_structure%29">Array</a>, <a href="https://en.wikipedia.org/wiki/String_%28computer_science%29">String</a>, <a href="https://en.wikipedia.org/wiki/Linked_list">LinkedList</a></p>
<h2 id="sample-problems-3">Sample Problems</h2>
<ul>
<li>[Middle of the <a href="https://en.wikipedia.org/wiki/Linked_list">LinkedList</a>](<a href="https://leetcode.com/problems/middle-of-the-linked-list/">https://leetcode.com/problems/middle-of-the-linked-list/</a>)</li>
<li><a href="https://leetcode.com/problems/happy-number/">Happy Number</a></li>
<li>[Cycle in a Circular <a href="https://en.wikipedia.org/wiki/Array_%28data_structure%29">Array</a>](<a href="https://leetcode.com/problems/circular-array-loop/">https://leetcode.com/problems/circular-array-loop/</a>)</li>
</ul>
<h1 id="merge-intervals"><a href="https://www.geeksforgeeks.org/merging-intervals/">Merge Intervals</a></h1>
<p><img src="./images/x2PtTNmFVR.png" alt="merge-intervals" /></p>
<h2 id="description-4">Description</h2>
<p>The Merge Intervals technique is a coding strategy that involves combining and consolidating overlapping intervals in a collection. By iterating through the intervals, sorting them if needed, and comparing adjacent intervals, overlapping intervals are merged into a single consolidated set. This technique is particularly useful for solving problems related to interval merging, such as merging meeting schedules or determining the overall coverage of time intervals.</p>
<h2 id="data-structures-involved-4">Data Structures Involved</h2>
<p><a href="https://en.wikipedia.org/wiki/Array_%28data_structure%29">Array</a>, <a href="https://en.wikipedia.org/wiki/Heap_(data_structure)">Heap</a></p>
<h2 id="sample-problems-4">Sample Problems</h2>
<ul>
<li><a href="https://leetcode.com/problems/non-overlapping-intervals/">Conflicting Appointments</a></li>
<li><a href="https://leetcode.com/problems/meeting-rooms-iii/">Minimum Meeting Rooms</a></li>
</ul>
<h1 id="cyclic-sort"><a href="https://en.wikipedia.org/wiki/Cycle_sort">Cyclic Sort</a></h1>
<p><img src="./images/6HAc3A1uk.webp" alt="cyclic-sort" /></p>
<h2 id="description-5">Description</h2>
<p>The Cyclic Sort technique is a coding strategy used to solve problems involving an array that should ideally contain unique elements within a specific range. It involves iteratively placing each element in its correct position by cycling through the array until all elements are properly sorted. The technique utilizes the fact that the array elements and their indices often share a correlation, allowing for efficient sorting in linear time complexity. By repeatedly swapping elements and cycling through the array, the Cyclic Sort technique provides an intuitive and efficient approach to achieve a fully sorted array with minimal additional space requirements.</p>
<h2 id="data-structures-involved-5">Data Structures Involved</h2>
<p><a href="https://en.wikipedia.org/wiki/Array_%28data_structure%29">Array</a></p>
<h2 id="sample-problems-5">Sample Problems</h2>
<ul>
<li><a href="https://leetcode.com/problems/missing-number/">Find all Missing Numbers</a></li>
<li><a href="https://leetcode.com/problems/find-all-duplicates-in-an-array/">Find all Duplicate Numbers</a></li>
<li><a href="https://leetcode.com/problems/kth-missing-positive-number/">Find the First K Missing Positive Numbers</a></li>
</ul>
<h1 id="in-place-reversal-of-a-linkedlist"><a href="https://emre.me/coding-patterns/in-place-reversal-of-a-linked-list/">In-place Reversal of a LinkedList</a></h1>
<p><img src="./images/reverse-linked-list.gif" alt="in-place-reversal" /></p>
<h2 id="description-6">Description</h2>
<p>The In-place Reversal of a LinkedList technique is a coding strategy used to reverse the order of elements in a linked list without using additional data structures. It involves manipulating the pointers within the linked list to change the direction of links between nodes. By iteratively reversing the connections between nodes, the linked list is transformed into its reverse order. This technique allows for an efficient reversal of the linked list in constant space complexity, making it particularly useful when memory usage needs to be minimized.</p>
<h2 id="data-structures-involved-6">Data Structures Involved</h2>
<p><a href="https://en.wikipedia.org/wiki/Linked_list">LinkedList</a></p>
<h2 id="sample-problems-6">Sample Problems</h2>
<ul>
<li><a href="https://leetcode.com/problems/reverse-nodes-in-k-group/">Reverse every K-element Sub-list</a></li>
<li>[Rotate a <a href="https://en.wikipedia.org/wiki/Linked_list">LinkedList</a>](<a href="https://leetcode.com/problems/rotate-list/">https://leetcode.com/problems/rotate-list/</a>)</li>
</ul>
<h1 id="breadth-first-search"><a href="https://en.wikipedia.org/wiki/Breadth-first_search">Breadth-First Search</a></h1>
<p><img src="./images/Animated_BFS.gif" alt="bfs" /></p>
<h2 id="description-7">Description</h2>
<p>The Breadth-First Search (BFS) technique is a coding strategy used to traverse or search graph-like structures in a breadthward manner. It starts from a specified source vertex and explores its neighboring vertices before moving on to the next level of vertices. The BFS technique uses a queue data structure to maintain the order of traversal, enqueueing adjacent vertices and dequeuing them as they are visited. This approach ensures that vertices at each level are visited before moving deeper into the graph. BFS is commonly employed to solve problems like finding the shortest path, connected components, or level order traversal in trees or graphs. It guarantees that the shortest path is found when the graph has uniform edge weights, making it an effective and widely used technique for graph traversal and related problem-solving.</p>
<h2 id="data-structures-involved-7">Data Structures Involved</h2>
<p>Tree, Graph, <a href="https://en.wikipedia.org/wiki/Matrix_(mathematics)">Matrix</a>, [Queue](<a href="https://en.wikipedia.org/wiki/Queue_(abstract_data_type)">https://en.wikipedia.org/wiki/Queue_(abstract_data_type)</a></p>
<h2 id="sample-problems-7">Sample Problems</h2>
<ul>
<li><a href="https://leetcode.com/problems/binary-tree-level-order-traversal/">Binary Tree Level Order Traversal</a></li>
<li><a href="https://leetcode.com/problems/minimum-depth-of-binary-tree/">Minimum Depth of a Binary Tree</a></li>
<li><a href="https://leetcode.com/problems/populating-next-right-pointers-in-each-node/">Connect Level Order Siblings</a></li>
</ul>
<h1 id="depth-first-search"><a href="https://en.wikipedia.org/wiki/Depth-first_search">Depth First Search</a></h1>
<p><img src="./images/Depth-First-Search.gif" alt="dfs" /></p>
<h2 id="description-8">Description</h2>
<p>The Depth First Search (DFS) technique is a coding strategy used to traverse or search graph-like structures in a depthward manner. It starts from a specified source vertex and explores as far as possible along each branch before backtracking. The DFS technique utilizes a stack or recursion to keep track of the vertices to visit. It visits a vertex, marks it as visited, and then recursively explores its adjacent unvisited vertices. This process continues until all reachable vertices have been visited or a specific condition is met. DFS is commonly employed to solve problems like finding connected components, detecting cycles, or exploring all possible paths in a graph or tree. Its depthward nature makes it particularly useful for exploring and analyzing graph structures efficiently.</p>
<h2 id="data-structures-involved-8">Data Structures Involved</h2>
<p>Tree, Graph, <a href="https://en.wikipedia.org/wiki/Matrix_(mathematics)">Matrix</a></p>
<h2 id="sample-problems-8">Sample Problems</h2>
<ul>
<li><a href="https://leetcode.com/problems/binary-tree-paths/">Path With Given Sequence</a></li>
<li><a href="https://leetcode.com/problems/path-sum-iii/">Count Paths for a Sum</a></li>
</ul>
<h1 id="two-heaps"><a href="https://algodaily.com/lessons/two-heaps-technique">Two Heaps</a></h1>
<p><img src="./images/zLvR1ypcKJ.png" alt="two-heaps" /></p>
<h2 id="description-9">Description</h2>
<p>The Two Heaps technique is a coding strategy that utilizes two separate heaps, a min heap and a max heap, to efficiently manage and manipulate elements in a dataset requiring minimum and maximum operations. Elements are inserted into the appropriate heap based on their values, ensuring that the minimum element can be accessed from the min heap, and the maximum element from the max heap, both in constant time complexity. This technique is particularly valuable for solving problems like finding the median or maintaining sliding windows with minimum and maximum values, offering an efficient solution by leveraging the benefits of two heaps.</p>
<h2 id="data-structures-involved-9">Data Structures Involved</h2>
<p><a href="https://en.wikipedia.org/wiki/Heap_(data_structure)">Heap</a>, <a href="https://en.wikipedia.org/wiki/Array_%28data_structure%29">Array</a></p>
<h2 id="sample-problems-9">Sample Problems</h2>
<ul>
<li><a href="https://leetcode.com/problems/find-median-from-data-stream/">Find the Median of a Number Stream</a></li>
<li><a href="https://leetcode.com/problems/find-right-interval/">Next Interval</a></li>
</ul>
<h1 id="subsets"><a href="https://en.wikipedia.org/wiki/Subset">Subsets</a></h1>
<p><img src="./images/2019-11-19-subsets-example.png" alt="subsets" /></p>
<h2 id="description-10">Description</h2>
<p>The Subsets technique is a coding strategy used to generate all possible subsets of a given set or array. It involves systematically exploring different combinations of elements in the set to create all possible subsets. The technique typically employs backtracking or iterative approaches to generate subsets by including or excluding elements at each step. By exhaustively considering all possible combinations, the Subsets technique allows for the comprehensive enumeration of subsets. This technique is commonly used in problems involving combinatorics, power set generation, or solving tasks that require analyzing and manipulating subsets of a set or array.</p>
<h2 id="data-structures-involved-10">Data Structures Involved</h2>
<p><a href="https://en.wikipedia.org/wiki/Queue_(abstract_data_type)">Queue</a>, <a href="https://en.wikipedia.org/wiki/Array_%28data_structure%29">Array</a>, <a href="https://en.wikipedia.org/wiki/String_%28computer_science%29">String</a></p>
<h2 id="sample-problems-10">Sample Problems</h2>
<ul>
<li><a href="https://leetcode.com/problems/letter-case-permutation/">String Permutations by changing case</a></li>
<li><a href="https://leetcode.com/problems/generalized-abbreviation/">Unique Generalized Abbreviations</a></li>
</ul>
<h1 id="modified-binary-search"><a href="https://ashutosh-kumar.medium.com/modified-binary-search-algorithm-to-solve-tricky-problems-92399b193206">Modified Binary Search</a></h1>
<h2 id="description-11">Description</h2>
<p>The Modified Binary Search technique is a coding strategy used to efficiently search for specific elements or conditions in sorted arrays or sequences. It involves a variation of the binary search algorithm, tailored to address problems that require finding elements with specific properties rather than exact matches. By comparing the target element or condition with the middle element of the sorted array, the search space is narrowed down by adjusting the search boundaries. This technique allows for a significant reduction in search time complexity, often achieving logarithmic time complexity (O(log n)). The Modified Binary Search technique is commonly used in tasks such as finding the first or last occurrence of a target element, locating the insertion point for a value, or determining if a condition is met within a sorted array or sequence.</p>
<h2 id="data-structures-involved-11">Data Structures Involved</h2>
<p><a href="https://en.wikipedia.org/wiki/Array_%28data_structure%29">Array</a></p>
<h2 id="sample-problems-11">Sample Problems</h2>
<ul>
<li><a href="https://leetcode.com/problems/search-insert-position/description/">Ceiling of a Number</a></li>
<li><a href="https://www.geeksforgeeks.org/maximum-length-bitonic-subarray/">Bitonic Array Maximum</a></li>
</ul>
<h1 id="bitwise-xor"><a href="https://en.wikipedia.org/wiki/Bitwise_operation">Bitwise XOR</a></h1>
<p><img src="./images/how-Bitwise-XOR-Operator-works.webp" alt="bitwise-xor" /></p>
<h2 id="description-12">Description</h2>
<p>The Bitwise XOR (exclusive OR) technique is a coding strategy used to perform logical operations on individual bits of binary numbers. It involves applying the XOR operator (^) to corresponding bits of two numbers, resulting in a new number with bits that are set (1) only when the corresponding bits in the operands are different. The Bitwise XOR operation can be used to manipulate and extract information from binary representations efficiently. It is commonly used in various applications, including encryption, checksum calculation, finding single unique elements in an array, or swapping values without using a temporary variable. The Bitwise XOR technique provides a powerful tool for performing bitwise operations and extracting valuable information from binary representations.</p>
<h2 id="data-structures-involved-12">Data Structures Involved</h2>
<p><a href="https://en.wikipedia.org/wiki/Array_%28data_structure%29">Array</a>, <a href="https://en.wikipedia.org/wiki/Bit">Bits</a></p>
<h2 id="sample-problems-12">Sample Problems</h2>
<ul>
<li><a href="https://leetcode.com/problems/single-number-ii/">Two Single Numbers</a></li>
<li><a href="https://leetcode.com/problems/flipping-an-image/">Flip and Invert an Image</a></li>
</ul>
<h1 id="top-k-elements">Top 'K' Elements</h1>
<h2 id="description-13">Description</h2>
<p>The Top 'K' Elements technique is a coding strategy used to efficiently identify and retrieve the K largest or smallest elements from a collection or data structure. It involves utilizing appropriate data structures, such as priority queues or heaps, to keep track of the K elements with the highest or lowest values based on the specific problem requirements. By maintaining the desired number of elements in the data structure, the Top 'K' Elements technique allows for constant time complexity when accessing the top K elements. This technique is particularly useful in scenarios like finding the K largest or smallest elements, finding the median, or solving problems that involve ranking or selecting elements based on their values. By leveraging the Top 'K' Elements technique, the efficient retrieval of the top K elements can be achieved, even from large datasets or collections.</p>
<h2 id="data-structures-involved-13">Data Structures Involved</h2>
<p><a href="https://en.wikipedia.org/wiki/Array_%28data_structure%29">Array</a>, <a href="https://en.wikipedia.org/wiki/Heap_(data_structure)">Heap</a>, <a href="https://en.wikipedia.org/wiki/Queue_(abstract_data_type)">Queue</a></p>
<h2 id="sample-problems-13">Sample Problems</h2>
<ul>
<li><a href="https://leetcode.com/problems/k-closest-points-to-origin/">'K' Closest Points to the Origin</a></li>
<li>Maximum Distinct Elements</li>
</ul>
<h1 id="k-way-merge"><a href="https://en.wikipedia.org/wiki/K-way_merge_algorithm">K-way Merge</a></h1>
<p><img src="./images/k-way-merge.jpg" alt="k-way-merge" /></p>
<h2 id="description-14">Description</h2>
<p>The K-way Merge technique is a coding strategy used to merge K sorted arrays or sequences into a single sorted array or sequence. It involves merging the arrays or sequences by comparing the elements from each array or sequence and selecting the smallest (or largest) element to form the merged output. The technique typically uses a priority queue or a heap data structure to efficiently select the next element from each array or sequence. By iteratively selecting the smallest (or largest) element and advancing the corresponding array or sequence, the K-way Merge technique allows for the creation of a single sorted output with a time complexity proportional to the total number of elements across all K arrays or sequences. This technique is particularly useful when dealing with scenarios involving large or distributed datasets that need to be merged and sorted efficiently.</p>
<h2 id="data-structures-involved-14">Data Structures Involved</h2>
<p><a href="https://en.wikipedia.org/wiki/Array_%28data_structure%29">Array</a>, <a href="https://en.wikipedia.org/wiki/Queue_(abstract_data_type)">Queue</a>, <a href="https://en.wikipedia.org/wiki/Heap_(data_structure)">Heap</a></p>
<h2 id="sample-problems-14">Sample Problems</h2>
<ul>
<li><a href="https://www.youtube.com/watch?v=942B92CrTtQ">Kth Smallest Number in M Sorted Lists</a></li>
<li><a href="https://leetcode.com/problems/kth-smallest-element-in-a-sorted-matrix/">Kth Smallest Number in a Sorted Matrix</a></li>
</ul>
<h1 id="topological-sort"><a href="https://en.wikipedia.org/wiki/Topological_sorting">Topological Sort</a></h1>
<p><img src="./images/Q3MA6dZ.png" alt="topological-sort" /></p>
<h2 id="description-15">Description</h2>
<p>The Topological Sort technique is a coding strategy used to order the vertices of a directed acyclic graph (DAG) in such a way that for every directed edge (u, v), vertex u appears before vertex v in the ordering. It involves systematically visiting the vertices of the graph while respecting the direction of the edges. The Topological Sort technique typically utilizes depth-first search (DFS) or breadth-first search (BFS) algorithms to explore and order the vertices. By visiting the vertices in a specific order, the technique ensures that dependencies between vertices are satisfied, making it particularly useful for tasks such as project scheduling, dependency resolution, or determining a linear order of events. The Topological Sort technique provides an efficient way to establish a consistent ordering of vertices in a DAG, facilitating the solution of various graph-related problems.</p>
<h2 id="data-structures-involved-15">Data Structures Involved</h2>
<p><a href="https://en.wikipedia.org/wiki/Array_%28data_structure%29">Array</a>, <a href="https://en.wikipedia.org/wiki/Hash_table">HashTable</a>, [Queue](<a href="https://en.wikipedia.org/wiki/Queue_(abstract_data_type)">https://en.wikipedia.org/wiki/Queue_(abstract_data_type)</a>, Graph</p>
<h2 id="sample-problems-15">Sample Problems</h2>
<ul>
<li><a href="https://leetcode.com/problems/task-scheduler/">Tasks Scheduling</a></li>
<li><a href="https://leetcode.com/problems/verifying-an-alien-dictionary/">Alien Dictionary</a></li>
</ul>
<h1 id="knapsack"><a href="https://www.geeksforgeeks.org/0-1-knapsack-problem-dp-10/">0/1 Knapsack</a></h1>
<p><img src="./images/maxresdefault.jpg" alt="knacksack" /></p>
<h2 id="description-16">Description</h2>
<p>The 0/1 Knapsack technique is a coding strategy used to solve problems that involve maximizing the value of items selected for a knapsack while considering their weights and a given weight capacity constraint. It involves making decisions on whether to include or exclude each item in the knapsack to achieve the maximum value without exceeding the weight capacity. The technique typically utilizes dynamic programming to build a table or memoization to store and reuse intermediate results for optimal subproblems. By considering the values and weights of items and iteratively calculating the maximum achievable value for different weight capacities, the 0/1 Knapsack technique provides an efficient solution for problems related to item selection and knapsack optimization. It allows for dynamic decision-making and facilitates the identification of the most valuable combination of items that can be carried within the weight constraint.</p>
<h2 id="data-structures-involved-16">Data Structures Involved</h2>
<p><a href="https://en.wikipedia.org/wiki/Array_%28data_structure%29">Array</a>, <a href="https://en.wikipedia.org/wiki/Hash_table">HashTable</a></p>
<h2 id="sample-problems-16">Sample Problems</h2>
<ul>
<li><a href="https://leetcode.com/problems/partition-equal-subset-sum/">Equal Subset Sum Partition</a></li>
<li><a href="https://leetcode.com/problems/partition-array-into-two-arrays-to-minimize-sum-difference/">Minimum Subset Sum Difference</a></li>
</ul>
<h1 id="fibonacci-numbers"><a href="https://en.wikipedia.org/wiki/Fibonacci_sequence">Fibonacci Numbers</a></h1>
<p><img src="./images/fibonacci_diagram.svg" alt="fibonacci" /></p>
<h2 id="description-17">Description</h2>
<p>The Fibonacci Numbers technique is a coding strategy used to efficiently calculate or generate the Fibonacci sequence. It involves using iterative or recursive algorithms to compute the Fibonacci numbers, where each number is the sum of the two preceding numbers in the sequence (starting with 0 and 1). The technique typically utilizes dynamic programming or memoization to store and reuse intermediate results for optimal performance. By avoiding redundant calculations and efficiently building the sequence, the Fibonacci Numbers technique allows for the generation of Fibonacci numbers with improved time complexity. It is commonly used in various applications, such as calculating mathematical series, modeling growth patterns, or solving problems that involve recursive sequences. The Fibonacci Numbers technique provides an effective approach for generating Fibonacci numbers and analyzing related mathematical patterns.</p>
<h2 id="data-structures-involved-17">Data Structures Involved</h2>
<p><a href="https://en.wikipedia.org/wiki/Array_%28data_structure%29">Array</a>, <a href="https://en.wikipedia.org/wiki/Hash_table">HashTable</a></p>
<h2 id="sample-problems-17">Sample Problems</h2>
<ul>
<li><a href="https://leetcode.com/problems/climbing-stairs/">Staircase</a></li>
<li><a href="https://leetcode.com/problems/house-robber/">House Thief</a></li>
</ul>
<h1 id="palindromic-subsequence"><a href="https://www.geeksforgeeks.org/longest-palindromic-subsequence-dp-12/">Palindromic Subsequence</a></h1>
<p><img src="./images/OIP.jpg" alt="fibonacci" /></p>
<h2 id="description-18">Description</h2>
<p>The Palindromic Subsequence technique is a coding strategy used to identify and analyze subsequences within a string or sequence that are palindromic, meaning they read the same forwards and backwards. It involves examining all possible subsequence combinations and checking if they form palindromes. This technique typically employs dynamic programming to efficiently store and reuse intermediate results, enabling faster computation of palindromic subsequences. By considering the properties of palindromes, such as the symmetric nature of their characters, the Palindromic Subsequence technique allows for the identification of the longest or specific types of palindromic subsequences. It is commonly used in applications like string manipulation, text processing, or solving problems that involve palindromic patterns or constraints. The Palindromic Subsequence technique provides an effective approach to analyze and extract palindromic subsequences within a given sequence.</p>
<h2 id="data-structures-involved-18">Data Structures Involved</h2>
<p><a href="https://en.wikipedia.org/wiki/Array_%28data_structure%29">Array</a>, <a href="https://en.wikipedia.org/wiki/Hash_table">HashTable</a></p>
<h2 id="sample-problems-18">Sample Problems</h2>
<ul>
<li><a href="https://leetcode.com/problems/longest-palindromic-subsequence/">Longest Palindromic Subsequence</a></li>
<li><a href="https://leetcode.com/problems/minimum-insertion-steps-to-make-a-string-palindrome/">Minimum Deletions in a String to make it a Palindrome</a></li>
</ul>
<h1 id="longest-common-substring"><a href="https://en.wikipedia.org/wiki/Longest_common_substring">Longest Common Substring</a></h1>
<p><img src="./images/longest-common-string.jpg" alt="longest-common-substring" /></p>
<h2 id="description-19">Description</h2>
<p>The Longest Common Substring technique is a coding strategy used to find the longest substring that is common to multiple strings. It involves comparing the characters of the given strings and identifying the longest continuous substring that appears in all of them. This technique typically employs dynamic programming or memoization to efficiently store and reuse intermediate results, allowing for faster computation of the longest common substring. By examining all possible substrings and their commonality across the strings, the Longest Common Substring technique enables the identification of the longest shared sequence. It is commonly used in applications like string matching, DNA sequence analysis, or solving problems that require finding similarities between multiple strings. The Longest Common Substring technique provides an effective approach to determine the longest common substring and analyze the shared characteristics among multiple strings.</p>
<h2 id="data-structures-involved-19">Data Structures Involved</h2>
<p><a href="https://en.wikipedia.org/wiki/Array_%28data_structure%29">Array</a>, <a href="https://en.wikipedia.org/wiki/Hash_table">HashTable</a></p>
<h2 id="sample-problems-19">Sample Problems</h2>
<ul>
<li><a href="https://leetcode.com/problems/maximum-alternating-subsequence-sum/">Maximum Sum Increasing Subsequence</a></li>
<li><a href="https://leetcode.com/problems/edit-distance/">Edit Distance</a></li>
</ul>
<h1 id="resources">Resources</h1>
<ul>
<li><a href="https://www.designgurus.io/">DesignGurus.org</a></li>
<li><a href="https://emre.me/categories/#coding-patterns">emre.me</a></li>
<li><a href="https://www.wikipedia.org/">wiki</a></li>
<li><a href="https://www.geeksforgeeks.org">GeeksForGeeks</a></li>
<li><a href="https://chat.openai.com/">ChatGPT</a></li>
<li><a href="https://leetcode.com/">Leetcode</a></li>
</ul>

"""""
),
            ["""2023-08-30-Data-Oriented-Programming"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Data-oriented programming
""""",
["""date"""] =
"""""
 2023-08-30
""""",
["""categories"""] =
"""""
 programming
""""",
["""tags"""] =
"""""
 programming data
""""",
 },
"""""
<h1 id="notes-about-data-oriented-programming">Notes about data-oriented programming</h1>
<h2 id="code-vs-data">Code vs data</h2>
<p>In data-oriented programming (DOP), its principles are language-agnostic and promote the separation of code from data as a foundational concept (Principle #1). This separation simplifies DOP systems compared to traditional Object-Oriented Programming (OOP) systems. DOP focuses on data entities, which hold information, and rejects strict data encapsulation, emphasizing flexibility to adapt to evolving requirements. By isolating code and data, DOP allows for independent design and representation of these elements. DOP systems are organized into high-level data entities and code modules composed of stateless functions. They are highly adaptable and often accommodate changing requirements without altering the core system design. Unlike traditional OOP, where object state is implicit, DOP employs explicit arguments for stateless functions. In DOP, code modules primarily relate through usage, while data entities have associations and compositions as their key relationships. This approach enhances system clarity and flexibility.</p>
<h2 id="data">Data</h2>
<p>Principle #2 emphasizes representing data entities using generic data structures. These structures, often referred to as string maps, allow data to be represented as records, which are collections of fields, possibly of different data types. Data entity diagrams consist of these records, interconnected through composition or association relationships. DOP values flexibility and genericity, even at the cost of some data safety. It allows dynamic field addition, removal, and renaming at runtime. Data manipulation is achieved through generic functions, making it easier to adapt to changing requirements. While DOP might lose some compile-time type safety, it liberates data representation from classes and objects, promoting a clear, adaptable system with information accessible through information paths and generic functions, particularly suitable for data-heavy tasks.</p>
<h2 id="state">State</h2>
<p>Principle #3 highlights that data should be immutable. Mutations, which are operations that change the system's state, are managed through a multi-version approach split into calculation and commit phases. All data manipulation occurs via immutable functions, and native hash map setters are forbidden. Structural sharing enables the efficient creation of new data versions by sharing common elements, reducing memory and computational costs. The calculation phase, which is stateless, employs immutable functions with structural sharing, while the commit phase handles system state updates and is stateful. Data validation is separated from data manipulation, ensuring system-wide consistency. DOP's structure allows efficient memory management and straightforward state restoration, thanks to the clear separation between calculation and commit phases.</p>
<h2 id="concurrency">Concurrency</h2>
<p>In data-oriented programming, optimistic concurrency control is a lock-free approach that allows mutations to proceed optimistically without waiting for permission. This method efficiently manages concurrent mutations of the system state, enabling high throughput of read and write operations, particularly when combined with immutable data. Conflicts between concurrent mutations are reconciled during the commit phase, often following a similar approach to Git's branch merging, with options for fast-forward or three-way merges. The reconciliation algorithm is universal and can be applied to systems using immutable hash maps. It leverages structural sharing to create subsequent versions of the system state efficiently. In user-facing systems, conflicting concurrent mutations are infrequent, and when reconciliation isn't possible, mutations are aborted, prompting the user to retry. Comparing structural differences between versions is efficient due to the inherent sharing in immutable data structures, and the algorithm handles replacements and additions effectively. However, it does not support deletions.</p>
<h2 id="validation">Validation</h2>
<p>Principle #4 emphasizes the separation of data schema and data representation. This principle recognizes the importance of clearly defining the boundaries of a system where data is exchanged, often involving data validation. Data validation in DOP entails ensuring that data adheres to a specific schema, and when validation fails, error information is provided in a human-readable format. Validating data at the system's boundaries reduces the need for redundant validation within the system. JSON Schema is a key tool in this process, allowing the separation of data validation from its representation. While JSON Schema syntax can be verbose, it offers high expressiveness, and schemas can be manipulated like any other maps in the program, enabling flexible and robust data validation practices for both incoming and outgoing data.</p>
<h2 id="polymorphism">Polymorphism</h2>
<p>Polymorphism is primarily valued for its extensibility. This extensibility is enabled by multimethods, which facilitate polymorphism in scenarios where data is represented with generic maps. A multimethod comprises a dispatch function and multiple methods, with the dispatch function emitting a dispatch value used to determine the appropriate method implementation. Multimethods can emulate object-oriented class inheritance through single dispatch, where a map with a &quot;type&quot; field is used for dispatching. They also support more advanced polymorphisms, such as multiple dispatch and dynamic dispatch, allowing behavior to depend on multiple or runtime arguments. Multimethods provide extensibility by decoupling method initialization from method implementations and support default implementations when no specific method matches the dispatch value. Careful attention is needed to ensure consistency between the order of elements in the dispatch array and the method wiring in multimethods featuring multiple dispatch.</p>
<h2 id="resources">Resources</h2>
<ul>
<li><a href="https://blog.klipse.tech/data-oriented-programming-book.html">Data-Oriented Programming</a></li>
</ul>

"""""
),
            ["""2023-10-10-Set-up-raspberry"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Set up raspberry
""""",
["""date"""] =
"""""
 2023-10-10
""""",
["""categories"""] =
"""""
 raspberry
""""",
["""tags"""] =
"""""
 raspberry
""""",
 },
"""""
<h1 id="setup-sd">Setup SD</h1>
<p>Install raspberry os - <a href="https://www.raspberrypi.com/software/">https://www.raspberrypi.com/software/</a></p>
<p>Create <code>wpa_supplicant.conf</code> with:</p>
<pre><code>ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
update_config=1
ap_scan=1
fast_reauth=1
country=PL
network={
    ssid=&quot;WIFI Name&quot;
    psk=&quot;WIFI password&quot;
    id_str=&quot;0&quot;
    priority=100
}
</code></pre>
<p>Create empty <code>ssh</code> file</p>
<p>Copy both files to flash</p>
<h1 id="mount-hdd">Mount HDD</h1>
<pre><code>#For everyone well versed in Linux and BASH, here's everything up front

#Find the drive (in our case /dev/sda1)
sudo fdisk -l
#install NTFS-3g
sudo apt-get install ntfs-3g
#Make the mount directory and manage it's owner
sudo mkdir /mnt/hdd
sudo chown pi:pi /mnt/hdd
#Mount the drive
sudo mount -t ntfs-3g -o uid-pi,gid-pi /dev/sda1 /mnt/hdd

&gt; If it is mounted, run `sudo umount /dev/sda1`

#Now you're done but it's not permanent

#Making it permanent
#Edit file system table
sudo nano /etc/fstab

#Add this line of text after the SD card partitions
/dev/sda1	/mnt/hdd	ntfs-3g	uid=pi,gid=pi	0	0
#hit ctrl-o to save and ctrl-x to exit nano

#Now the mounting will be restored on reboot
#Reboot to test it
sudo shutdown -r now
</code></pre>
<h1 id="samba">Samba</h1>
<pre><code>sudo apt install samba samba-common-bin

sudo cp /etc/samba/smb.conf /etc/samba/smb.conf_backup

sudo nano /etc/samba/smb.conf
</code></pre>
<p>Add to the end of the file</p>
<pre><code>[share]
Comment = Raspberry Pi Shared Folder
Path = /mnt/hdd
Browseable = yes
Writeable = Yes
only guest = no
create mask = 0777
directory mask = 0777
Public = yes
Guest ok = yes
</code></pre>
<pre><code>sudo service smbd restart

sudo shutdown -r now
</code></pre>
<h1 id="transmission">transmission</h1>
<pre><code>sudo apt install transmission-daemon

sudo systemctl stop transmission-daemon

sudo chown -R pi:pi /mnt/hdd/torrents/downloads
sudo chown -R pi:pi /mnt/hdd/torrents/incomplete

sudo nano /etc/transmission-daemon/settings.json
</code></pre>
<p>Modify in settings</p>
<pre><code>&quot;incomplete-dir&quot;: &quot;/mnt/hdd/torrents/incomplete&quot;,
&quot;download-dir&quot;: &quot;/mnt/hdd/torrents/downloads&quot;,
&quot;incomplete-dir-enabled&quot;: true,
&quot;rpc-password&quot;: &quot;Your_Password&quot;,
&quot;rpc-username&quot;: &quot;Your_Username&quot;,
&quot;rpc-whitelist&quot;: &quot;192.168.*.*&quot;,
</code></pre>
<pre><code>sudo nano /etc/init.d/transmission-daemon
</code></pre>
<p>Edit file:</p>
<pre><code>USER=pi
</code></pre>
<pre><code>sudo nano /etc/systemd/system/multi-user.target.wants/transmission-daemon.service
</code></pre>
<p>Edit file:</p>
<pre><code>user=pi
</code></pre>
<pre><code>sudo systemctl daemon-reload
sudo chown -R pi:pi /etc/transmission-daemon
sudo mkdir -p /home/pi/.config/transmission-daemon/
sudo ln -s /etc/transmission-daemon/settings.json /home/pi/.config/transmission-daemon/
sudo chown -R pi:pi /home/pi/.config/transmission-daemon/
sudo systemctl start transmission-daemon
sudo shutdown -r now
</code></pre>
<h1 id="syncthings">Syncthings</h1>
<pre><code>sudo apt update
sudo apt full-upgrade

sudo apt install apt-transport-https

curl -s https://syncthing.net/release-key.txt | gpg --dearmor | sudo tee /usr/share/keyrings/syncthing-archive-keyring.gpg &gt;/dev/null

echo &quot;deb [signed-by=/usr/share/keyrings/syncthing-archive-keyring.gpg] https://apt.syncthing.net/ syncthing stable&quot; | sudo tee /etc/apt/sources.list.d/syncthing.list

sudo apt update

sudo apt install syncthing

hostname -I

sudo mkdir /home/pi/.config/syncthing
chmod -R 777 /home/pi/.config/syncthing
syncthing
</code></pre>
<p>After the initial run, kill the application by pressing CTRL + C.</p>
<pre><code>nano ~/.config/syncthing/config.xml
&lt;address&gt;127.0.0.1:8384&lt;/address&gt;
</code></pre>
<pre><code>sudo nano /lib/systemd/system/syncthing.service
</code></pre>
<pre><code>[Unit]
Description=Syncthing - Open Source Continuous File Synchronization
Documentation=man:syncthing(1)
After=network.target

[Service]
User=pi
ExecStart=/usr/bin/syncthing -no-browser -no-restart -logflags=0
Restart=on-failure
RestartSec=5
SuccessExitStatus=3 4
RestartForceExitStatus=3 4

# Hardening
ProtectSystem=full
PrivateTmp=true
SystemCallArchitectures=native
MemoryDenyWriteExecute=true
NoNewPrivileges=true

[Install]
WantedBy=multi-user.target
</code></pre>
<pre><code>sudo systemctl enable syncthing
sudo systemctl start syncthing
sudo systemctl status syncthing
</code></pre>

"""""
),
            ["""2023-11-01-Azure-Cosmos-DB-Always-Encrypted-"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Azure Cosmos DB Always Encrypted and GetItemLinqQueryable issue
""""",
["""date"""] =
"""""
 2023-11-01
""""",
["""categories"""] =
"""""
 programming
""""",
["""tags"""] =
"""""
 dotnet core azure cosmosDB encryption
""""",
 },
"""""
<h1 id="reading-azure-cosmos-db-always-encrypted-issue">Reading Azure Cosmos DB Always Encrypted issue</h1>
<p>When following <a href="https://learn.microsoft.com/en-us/azure/cosmos-db/how-to-always-encrypted?tabs=dotnet">Microsoft's article</a> on client-side encryption in Azure Cosmos DB and using the <a href="https://learn.microsoft.com/en-us/dotnet/api/microsoft.azure.cosmos.container.getitemlinqqueryable?view=azure-dotnet">GetItemLinqQueryable</a> method, you may encounter decryption issues. To resolve this, swap out ToFeedIterator with ToEncryptionFeedIterator from <a href="https://github.com/Azure/azure-cosmos-dotnet-v3/blob/master/Microsoft.Azure.Cosmos.Encryption/src/EncryptionContainerExtensions.cs">Microsoft.Azure.Cosmos.Encryption.EncryptionContainerExtensions</a>. Here's an example:</p>
<pre><code>var queryable = _container.GetItemLinqQueryable&lt;TBaseEntity&gt;().AsQueryable();

// Convert to feed iterator
using FeedIterator&lt;TResult&gt; linqFeed = _container.ToEncryptionFeedIterator(query);
</code></pre>

"""""
),
            ["""2023-12-04-Software-Architecture-Metrics"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Notes about software architecture metrics
""""",
["""date"""] =
"""""
 2023-12-04
""""",
["""categories"""] =
"""""
 programming
""""",
["""tags"""] =
"""""
 architecture software
""""",
 },
"""""
<h1 id="four-key-architecture-metrics">Four Key Architecture Metrics</h1>
<h2 id="development-throughput-deployment-frequency">Development throughput - Deployment Frequency</h2>
<p>Deployment frequency refers to the rate at which individual changes successfully exit the development pipeline over a given period. These changes encompass various deployment units, such as code, configurations, or a blend of both. Examples include the introduction of new features or the resolution of software bugs.</p>
<h2 id="development-throughput-lead-time-for-changes">Development throughput - Lead Time for Changes</h2>
<p>The lead time for changes represents the duration it takes for a developer's completed code or configuration alterations to traverse the development pipeline and emerge at the final stage.</p>
<h2 id="stability-of-the-overall-service-change-failure-rate">Stability of the overall service - Change Failure Rate</h2>
<p>The change failure rate is the proportion of changes that exit the development pipeline and subsequently cause a failure in the operational service. A &quot;failure&quot; is anything blocking users from completing their tasks via the service.</p>
<h2 id="stability-of-the-overall-service-time-to-restore-service">Stability of the overall service - Time to Restore Service</h2>
<p>Time to restore service measures how long it takes to detect a service failure and deliver the necessary fix to restore it for users.</p>

"""""
),
            ["""2023-12-27-Semantic-Kernel-Resources"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Semantic Kernel learning
""""",
["""date"""] =
"""""
 2023-12-27
""""",
["""categories"""] =
"""""
 programming
""""",
["""tags"""] =
"""""
 ai semantic kernel openai
""""",
 },
"""""
<h1 id="how-to-write-better-prompts-for-openai-codex"><a href="https://platform.openai.com/docs/guides/prompt-engineering/six-strategies-for-getting-better-results">How to write better prompts for OpenAI Codex</a></h1>
<ul>
<li>This page provides tips and tricks for writing effective prompts for OpenAI Codex, a system that can generate code from natural language.</li>
<li>The page explains how to use the following strategies: providing clear instructions, using examples, specifying input and output formats, using comments, and handling errors.</li>
<li>The page also includes a list of resources, such as the OpenAI Cookbook, the Codex Playground, and the Codex API documentation, to help users get started with Codex.</li>
</ul>
<h1 id="semantic-kernel-1.0-function-calling"><a href="https://www.developerscantina.com/p/semantic-kernel-function-calling/">Semantic Kernel 1.0: Function Calling</a></h1>
<ul>
<li>This page explains how Semantic Kernel 1.0 supports function calling, a feature that allows an LLM to orchestrate complex AI workflows by calling external functions.</li>
<li>The page shows how to use function calling in two ways: manually, where the developer is in charge of calling the functions and passing the results to the LLM, and automatically, where Semantic Kernel handles everything for the developer.</li>
<li>The page also compares function calling with planners, another feature of Semantic Kernel that enables AI orchestration, and provides code samples and a GitHub repository to demonstrate the concepts.</li>
</ul>
<h1 id="general-guidelines-azure-core"><a href="https://azure.github.io/azure-sdk/general_azurecore.html">General Guidelines: Azure Core</a></h1>
<ul>
<li>This page defines the requirements for the Azure Core library, which provides cross-cutting services to other client libraries.</li>
<li>The page covers topics such as HTTP pipeline, authentication, logging, configuration, distributed tracing, and proxy support.</li>
<li>The page also specifies the common environment variables, global configuration keys, and token credential types that are used by the Azure SDK.</li>
</ul>
<h1 id="creating-native-functions-for-ai-to-call"><a href="https://learn.microsoft.com/en-us/semantic-kernel/agents/plugins/using-the-kernelfunction-decorator?tabs=Csharp">Creating native functions for AI to call</a></h1>
<ul>
<li>This page explains how to create native functions that can perform tasks that large language models cannot do easily on their own, such as arithmetic.</li>
<li>It shows how to create a MathPlugin class that contains various math functions, and how to use the KernelFunction decorator to register them with the kernel.</li>
<li>It also demonstrates how to import and run the native functions using the kernel, and how to enable the AI to automatically call them within the chat loop.</li>
</ul>
<h1 id="openai-api-documentation"><a href="https://platform.openai.com/docs/api-reference/chat/create">OpenAI API Documentation</a></h1>
<ul>
<li>The OpenAI API provides access to various models and features, such as text generation, image generation, fine-tuning, and moderation.</li>
<li>The API documentation explains how to use the endpoints, parameters, and objects for each feature, and provides examples and code snippets.</li>
<li>The API documentation also includes guides, tutorials, and resources to help developers get started and make the most of the OpenAI platform.</li>
</ul>
<h1 id="mathsolver.cs"><a href="https://github.com/MicrosoftDocs/semantic-kernel-docs/blob/main/samples/dotnet/11-Planner/plugins/MathSolver.cs">MathSolver.cs</a></h1>
<ul>
<li>A class that implements the <code>IPlugin</code> interface and provides a method to solve mathematical expressions using the <code>MathNet.Symbolics</code> library</li>
<li>A constructor that takes a <code>SemanticKernel</code> instance and registers the <code>SolveAsync</code> function as a prompt handler for the <code>math</code> keyword</li>
<li>A <code>SolveAsync</code> function that takes a <code>PromptContext</code> instance and returns a <code>PromptResult</code> instance with the evaluated expression or an error message</li>
</ul>
<h1 id="consolechat.cs-at-main-microsoftsemantic-kernel-starters"><a href="https://github.com/microsoft/semantic-kernel-starters/blob/main/sk-csharp-console-chat/ConsoleChat.cs">ConsoleChat.cs at main · microsoft/semantic-kernel-starters</a></h1>
<ul>
<li>This is a C# source code file that defines the <strong>ConsoleChat</strong> class, which implements the <strong>IChat</strong> interface for console-based chat applications.</li>
<li>The <strong>ConsoleChat</strong> class has a constructor that takes a <strong>ChatGPTPlugin</strong> object as a parameter, and three methods: <strong>StartAsync</strong>, <strong>StopAsync</strong>, and <strong>ExecuteAsync</strong>.</li>
<li>The <strong>StartAsync</strong> method initializes the chat session and prints a welcome message, the <strong>StopAsync</strong> method terminates the chat session and prints a goodbye message, and the <strong>ExecuteAsync</strong> method handles the user input and output using the <strong>ChatGPTPlugin</strong> object.</li>
</ul>
<h1 id="introducing-the-v1.0.0-beta1-for-the.net-semantic-kernel-sdk"><a href="https://devblogs.microsoft.com/semantic-kernel/introducing-the-v1-0-0-beta1-for-the-net-semantic-kernel-sdk/">Introducing the v1.0.0 Beta1 for the .NET Semantic Kernel SDK</a></h1>
<ul>
<li>This page announces the release of Semantic Kernel SDK v1.0.0-beta1, which has several breaking changes from previous versions.</li>
<li>The page provides a detailed migration guide for developers using the .NET version of Semantic Kernel, covering topics such as package renaming, class renaming, function invocation, and AI service configuration.</li>
<li>The page also includes some examples and tests that have been updated to use the new SDK, as well as an image of the Chat Copilot Release 0.5 that integrates Semantic Memory.</li>
</ul>
<h1 id="release-candidate-1-for-the-semantic-kernel.net-sdk-is-now-live"><a href="https://devblogs.microsoft.com/semantic-kernel/release-candidate-1-for-the-semantic-kernel-net-sdk-is-now-live/">Release Candidate 1 for the Semantic Kernel .NET SDK is now live.</a></h1>
<ul>
<li>This page introduces the new features and improvements of Semantic Kernel v1.0.0 RC1, a .NET SDK for building AI applications with OpenAI and Hugging Face models.</li>
<li>The page highlights how Semantic Kernel simplifies function calling with OpenAI, allows streaming responses from the kernel, and supports prompt YAML files and Handlebars templates.</li>
<li>The page also provides code examples and links to starter apps for Semantic Kernel, and invites developers to join the hackathon and give feedback on the SDK.</li>
</ul>
<h1 id="semantic-kernels-ignite-release-beta8-for-the.net-sdk"><a href="https://devblogs.microsoft.com/semantic-kernel/semantic-kernels-ignite-release-beta8-for-the-net-sdk/#start-developing-openai-assistants-with-semantic-kernel">Semantic Kernel’s Ignite release: Beta8 for the .NET SDK</a></h1>
<ul>
<li>This page announces the new gen-4 and gen-5 planners developed by the Semantic Kernel team, which can handle more functions and logic with fewer tokens.</li>
<li>The page also explains how to migrate from the previous planners (Action, Sequential, and V1 Stepwise) to the new ones (Handlebars and Function Calling Stepwise) using a migration guide.</li>
<li>The page also provides some updates on the Semantic Kernel .NET SDK, the v1.0.0 release, and the AI hackathon.</li>
</ul>
<p>Here is a memo for this page:</p>
<h1 id="say-hello-to-semantic-kernel-v1.0.1"><a href="https://devblogs.microsoft.com/semantic-kernel/semantic-kernel-v1-0-1-has-arrived-to-help-you-build-agents/">Say hello to Semantic Kernel V1.0.1</a></h1>
<ul>
<li>This page announces the release of Semantic Kernel V1.0.1 for C#, a .NET SDK for building AI agents for AI powered applications[<sup>1</sup>][1].</li>
<li>The page provides information on how to get started with Semantic Kernel, such as updated documentation, a step-by-step guide, and a Discord channel for help.</li>
<li>The page also lists the stable, preview, and alpha NuGet packages for Semantic Kernel, and invites the community to contribute to the project by building AI connectors for various models.</li>
</ul>
<h1 id="automatically-orchestrate-ai-with-planners"><a href="https://learn.microsoft.com/en-us/semantic-kernel/agents/planners/?tabs=Csharp">Automatically orchestrate AI with planners</a></h1>
<ul>
<li>A planner is a function that takes a user's ask and returns back a plan on how to accomplish the request using AI and plugins</li>
<li>Planners can automatically recombine functions to create workflows for complex scenarios, such as solving math problems or creating reminders.</li>
<li>Planners have advantages and disadvantages, such as performance, cost, and flexibility, and can be optimized by pre-creating plans for common scenarios.</li>
</ul>
<h1 id="mathplugin.cs"><a href="https://github.com/MicrosoftDocs/semantic-kernel-docs/blob/main/samples/dotnet/08-Creating-Functions-For-AI/plugins/MathPlugin.cs">MathPlugin.cs</a></h1>
<ul>
<li>This page is a code file named MathPlugin.cs that contains a class called MathPlugin with various mathematical functions.</li>
<li>The functions include basic arithmetic operations, trigonometric functions, logarithmic functions, and rounding functions.</li>
<li>The code file is part of a sample project called 08-Creating-Functions-For-AI, which demonstrates how to create custom functions for AI services using Semantic Kernel.</li>
</ul>
<h1 id="kernelprompttemplate.cs"><a href="https://github.com/microsoft/semantic-kernel/blob/main/dotnet/src/SemanticKernel.Core/PromptTemplate/KernelPromptTemplate.cs">KernelPromptTemplate.cs</a></h1>
<ul>
<li>A class that defines a template for generating prompts for semantic kernels</li>
<li>It uses a template engine to render the prompt based on the input variables and the output blocks</li>
<li>It also provides methods to extract the blocks from the prompt and to add missing input variables</li>
</ul>
<h1 id="nuget-gallery-packages-matching-microsoft.semantickernel"><a href="https://www.nuget.org/packages?page=2&amp;q=Microsoft.SemanticKerne&amp;sortBy=relevance">NuGet Gallery | Packages matching Microsoft.SemanticKernel</a></h1>
<ul>
<li>This page shows 61 packages related to Microsoft Semantic Kernel, a framework for building AI applications with semantic memory and reasoning capabilities.</li>
<li>The packages include connectors, plugins, planners, functions, and template engines for various AI services and data sources, such as OpenAI, Weaviate, DuckDB, Kusto, Milvus, Qdrant, MongoDB, SQLite, OpenAPI, YAML, Markdown, and Handlebars.</li>
<li>The page also provides information about the downloads, updates, and descriptions of each package, as well as links to contact, FAQ, status, and privacy statement of NuGet.org.</li>
</ul>
<hr />
<h1 id="prompt-to-generate-such-summary-for-the-page">Prompt to generate such summary for the page:</h1>
<p>Please create a memo for this page that will be used later to find this page.
The first must be the title and the link to this page. After there should be 3 sentences formated as a list.
Do not add any cross-links, references or sources links in the output.
Format result as markdown code.</p>
<p>There is an example of markdown code:</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;font-weight: bold;"># [PAGE_TITLE](LINK_TO_THE_PAGE)</span>

<span style="font-weight: bold;">-</span> Sentence summary one
<span style="font-weight: bold;">-</span> Sentence summary two
<span style="font-weight: bold;">-</span> Sentence  summary three
</pre></div>
"""""
),
            ["""2024-03-02-How-To-Avoid-Silence"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 How to avoid silence
""""",
["""date"""] =
"""""
 2024-03-02
""""",
["""categories"""] =
"""""
 conversation
""""",
["""tags"""] =
"""""
 english communication soft-skills
""""",
 },
"""""
<h1 id="how-to-avoid-silence-5-strategies-for-keeping-conversations-alive">How to Avoid Silence: 5 Strategies for Keeping Conversations Alive</h1>
<p>In a world filled with constant distractions and ever-increasing connectivity, one might think that avoiding silence in conversations would be effortless. Yet, many of us still find ourselves grappling with awkward pauses and struggling to maintain engaging dialogue. Whether you're at a networking event, on a date, or catching up with an old friend, mastering the art of conversation can vastly improve your social interactions. Here are five strategies to help you keep the conversation flowing and avoid those uncomfortable silences:</p>
<h2 id="play-remind-me-of">Play &quot;Remind Me Of&quot;</h2>
<p>One of the easiest ways to keep a conversation going is by playing the &quot;remind me of&quot; game. This involves sharing anecdotes or experiences that are tangentially related to the current topic. For example, if someone mentions they recently went hiking, you could respond with, &quot;That reminds me of the time I got lost on a trail in the mountains. Have you ever had a similar experience?&quot; This not only keeps the conversation on track but also encourages the other person to share their own stories.</p>
<h2 id="ask-open-ended-questions">Ask Open-Ended Questions</h2>
<p>Closed-ended questions, which can typically be answered with a simple &quot;yes&quot; or &quot;no,&quot; often lead to dead ends in conversation. Instead, opt for open-ended questions that invite the other person to elaborate and share their thoughts and experiences. For instance, instead of asking, &quot;Did you enjoy the movie?&quot; try asking, &quot;What did you think about the movie? What were your favorite parts?&quot; This allows for a more dynamic exchange and helps to prevent the conversation from fizzling out.</p>
<h2 id="use-revival-questions">Use Revival Questions</h2>
<p>When you sense the conversation starting to lag, don't be afraid to inject some energy back into it with revival questions. These are questions designed to reignite interest and enthusiasm in the topic at hand. For example, if the conversation has veered off course, you could steer it back by asking, &quot;I'm curious, what sparked your interest in this topic in the first place?&quot; This not only shows that you're actively engaged in the conversation but also encourages the other person to delve deeper into their thoughts and opinions.</p>
<h2 id="make-a-complimentary-cold-read">Make a Complimentary Cold Read</h2>
<p>Cold reading is a technique often used by mentalists and psychics to make generalized statements that appear specific to an individual. While you're not aiming to convince someone you can read their mind, making a complimentary cold read can be a fun way to keep the conversation flowing. For instance, you might say something like, &quot;You strike me as someone who's incredibly creative and resourceful. Am I right?&quot; This not only flatters the other person but also encourages them to share more about themselves, keeping the conversation going in a positive direction.</p>
<h2 id="flip-the-script">Flip the Script</h2>
<p>If all else fails and you find yourself stuck in a conversational rut, don't be afraid to flip the script entirely. Instead of trying to think of something witty or profound to say, simply acknowledge the silence and use it as an opportunity to shift gears. You could say something like, &quot;You know, I've always found moments of silence to be quite powerful. It's a chance to pause and reflect on everything that's been said so far.&quot; This not only breaks the tension but also opens up the conversation to new avenues of exploration.</p>
<p>In conclusion, avoiding silence in conversation is as much about being present and attentive as it is about employing specific strategies. By playing games like &quot;remind me of,&quot; asking open-ended questions, using revival questions, making complimentary cold reads, and knowing when to flip the script, you can keep the dialogue flowing and ensure that your interactions are engaging and meaningful. So the next time you find yourself faced with an awkward silence, remember these tips and watch as the conversation comes alive before your eyes.</p>

"""""
),
            ["""2024-03-30-SignalR-Cancellation-Token-Issue"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 How to Resolve SignalR Server-to-Client Sending Cancellation Issue
""""",
["""date"""] =
"""""
 2024-03-30
""""",
["""categories"""] =
"""""
 programming
""""",
["""tags"""] =
"""""
 SignalR .NET Streaming Server-to-Client Communication Cancellation Issue
""""",
 },
"""""
<h2 id="overview">Overview</h2>
<p>There exists an issue concerning the cancellation of SignalR server-to-client requests. This problem often arises within Azure Functions due to a particular code structure. Let's delve into the specifics:</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">public</span> <span style="color:#569CD6;">async</span> Task&lt;IActionResult&gt; PostMessage([HttpTrigger(AuthorizationLevel.Function, <span style="color:#D69D85;">&quot;post&quot;</span>, Route = <span style="color:#D69D85;">&quot;{userId}/data&quot;</span>)] HttpRequestData req, Guid userId,
       CancellationToken cancellationToken)
{
    <span style="color:#57A64A;">// some code</span>
    <span style="color:#569CD6;">await</span> <span style="color:#569CD6;">foreach</span> (<span style="color:#569CD6;">var</span> result <span style="color:#569CD6;">in</span> _getCompletion.Handle(command, cancellationToken))
    {
        _logger.LogTrace(<span style="color:#D69D85;">&quot;{method} Received answer from underlying layer: {completinResult.Content}.&quot;</span>, nameof(method), result.Content);
        cancellationToken.ThrowIfCancellationRequested();
        <span style="color:#57A64A;">// some code</span>
        _logger.LogTrace(<span style="color:#D69D85;">&quot;{method} Sending result to client.&quot;</span>, nameof(method));
        <span style="color:#569CD6;">await</span> MessageHubContext.Clients.User(userId.ToString()).SendAsync(NewPartOfResultReceived, result, cancellationToken);
        _logger.LogTrace(<span style="color:#D69D85;">&quot;{method} Sent answer to client&quot;</span>, nameof(method));
    };
    <span style="color:#57A64A;">// some code</span>
    <span style="color:#569CD6;">return</span> <span style="color:#569CD6;">new</span> JsonResult(finalResult);
}
</pre></div>
<p>The core of the issue lies in SignalR's behavior, wherein even after cancellation of the token (utilizing <a href="https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal/abort_static">AbortSignal.abort()</a>), SignalR persists in sending data to the client.</p>
<h2 id="identifying-the-issue">Identifying the Issue</h2>
<p>It appears that SignalR lacks built-in support for cancellation in such scenarios. This observation has been documented in a GitHub ticket: <a href="https://github.com/dotnet/aspnetcore/issues/11542">dotnet/aspnetcore#11542</a>.</p>
<h2 id="proposed-solution">Proposed Solution</h2>
<p>To tackle this issue, one potential solution involves halting the reception of data for connections associated with an 'aborted' state in the <a href="https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal">AbortSignal</a>. Rather than resolving the problem on the backend, it could be more feasible to address it on the client side.</p>
<p>Here's a TypeScript snippet illustrating how you can check for an aborted signal and prevent further processing if found:</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#57A64A;">// some code</span>
<span style="color:#57A64A;">// state.operations contains current ongoing operations</span>
<span style="color:#569CD6;">const</span> targetOperation = state.operations.find(x =&gt; x.id === allData[targetData].operationId);
<span style="color:#569CD6;">if</span> (targetOperation === undefined || targetOperation?.controller?.signal.aborted) {
    <span style="color:#569CD6;">return</span>;
}
<span style="color:#57A64A;">// adding data to the target</span>
</pre></div>
<p>By implementing a mechanism on the client side that ceases data reception upon detection of an aborted AbortSignal, the issue can be effectively mitigated.</p>
<ul>
<li>The text was updated and modified by OpenAI/ GTP-3.5 model.</li>
</ul>

"""""
),
            ["""2024-04-14-Secure-by-Design"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Some bullet points related to security
""""",
["""date"""] =
"""""
 2024-04-14
""""",
["""categories"""] =
"""""
 programming
""""",
["""tags"""] =
"""""
 secure design architecture
""""",
 },
"""""
<h1 id="secure-by-design-notes">Secure by Design notes</h1>
<p>Some notes after reading the book mentioned in the reference section.</p>
<p><strong>1. Software Security Design and Practices:</strong></p>
<ul>
<li>Security is best approached as a concern to be addressed rather than a checklist of features.</li>
<li>It's impractical to rely solely on constant vigilance for security during development; instead, seek design practices that inherently lead to secure solutions.</li>
<li>All decision-making activities in software development should be considered part of the design process, applicable at all levels from code to architecture.</li>
<li>Traditional software security approaches struggle because they require developers to be security experts and anticipate every possible vulnerability.</li>
<li>Shifting focus to design allows for achieving high software security without constant explicit consideration of security.</li>
<li>Strong design emphasis leads to more secure code compared to traditional security approaches.</li>
<li>XML parsers are inherently vulnerable to entity attacks due to the nature of XML.</li>
<li>Using generic types for specific data can introduce security vulnerabilities.</li>
<li>Understanding underlying parser implementations is crucial for configuring XML parsers securely.</li>
<li>Secure design promotes security in-depth by incorporating multiple layers of security.</li>
<li>Incomplete, missing, or shallow modeling can result in a design with security flaws.</li>
<li>Security flaws, such as broken business integrity, can persist in production, causing financial losses for the enterprise.</li>
<li>Conscious and explicit design leads to a more robust solution.</li>
</ul>
<p><strong>2. Domain Modeling:</strong></p>
<ul>
<li>Building domain models promotes deep learning about the domain and serves as a language for system communication.</li>
<li>A domain model should be strict, unambiguous, and adhere to a ubiquitous language for common understanding among the team, including domain experts.</li>
<li>Multiple possible models exist when creating a domain model, and it's crucial to choose one that captures only essential aspects.</li>
<li>Entities, value objects, and aggregates are fundamental components of the domain model, with entities possessing consistent identity throughout their lifecycle.</li>
<li>Aggregates group model objects, maintain invariants among them, and have an aggregate root, which holds global identity and is typically the same as the aggregate in code.</li>
<li>Bounded context defines where the model's semantics hold, and changes in semantics indicate a boundary shift, aided by Conway's Law.</li>
<li>Domain primitives are the foundation of the domain model, immutable, and must be valid within the current domain.</li>
<li>Using domain primitives simplifies and secures the codebase, hardening APIs and mitigating sensitive data leakage.</li>
<li>Entities are recommended for handling mutable states, ensuring consistency upon creation, and can be partially immutable.</li>
<li>Attributes' integrity should be protected during access, with careful design for multithreaded environments.</li>
<li>The builder pattern is useful for constructing entities with complex constraints, and state handling is improved when extracted to a separate object.</li>
<li>Careful design is required for multithreaded environments with high capacity, with options like database locking or entity snapshots improving availability.</li>
<li>Introduce domain primitives at semantic boundaries of context and clarify defensive code constructs using contracts.</li>
<li>Ensure domain primitives cover entire conceptual wholes and address domain types lacking proper validation with secure entities.</li>
</ul>
<p><strong>3. Security Testing and Practices:</strong></p>
<ul>
<li>Protect against Domain DoS attacks by verifying origin IP or requiring access keys, performing data size checks, and using simple regular expressions for lexical content checks.</li>
<li>Organize validation breakdown into origin checks, data size checks, lexical content checks, syntax format checks, and semantic checks.</li>
<li>Prioritize validation order, with earlier, more economical checks protecting later, more resource-intensive steps.</li>
<li>Segment tests into normal testing, boundary testing, invalid input testing, and extreme input testing to incorporate security into unit test suites efficiently.</li>
<li>Optimize regular expression usage by checking input length before execution to avoid inefficient backtracking.</li>
<li>Mitigate security vulnerabilities by verifying feature toggle mechanisms with automated tests, testing all possible combinations, and keeping toggles to a minimum to manage combinatory complexity.</li>
<li>Ensure auditability and record-keeping of toggle mechanisms.</li>
<li>Integrate automated security tests into build pipelines for regular penetration testing to maintain system security.</li>
<li>Consider availability as a critical security aspect in system design, simulating DoS attacks to reveal weaknesses.</li>
<li>Address security issues stemming from misconfiguration through identification of configuration hot spots and testing default tool behavior.</li>
<li>Implement the fail-fast principle by checking preconditions early in each method to control failures.</li>
<li>Mitigate security bugs caused by ambiguous parameters in APIs through direct, discovery, or new API approaches.</li>
<li>Prevent second-order injection attacks by avoiding logging unchecked user input and limiting access to sensitive values.</li>
<li>Utilize explicit accessor methods for data intended for logging to avoid accidental inclusion of new fields in logs, enhancing security.</li>
<li>Leverage tests to uncover weaknesses in code, especially through invalid and extreme input tests.</li>
</ul>
<p><strong>4. Resilience and Availability:</strong></p>
<ul>
<li>Ensure data integrity by maintaining consistency and accuracy throughout the data lifecycle.</li>
<li>Guarantee data availability by ensuring obtainability and accessibility at expected performance levels.</li>
<li>Leverage immutable values, which are safe to share between threads without locking or blocking.</li>
<li>Benefit from immutability by solving data availability issues through scalability and preventing data integrity issues by disallowing change.</li>
<li>Utilize contracts to effectively clarify the responsibilities of objects and methods, enhancing resilience and availability.</li>
</ul>
<p><strong>5. Microservices Security:</strong></p>
<ul>
<li>Ensure a good microservice possesses an independent runtime for independent updates and is resilient to other services being down.</li>
<li>Treat each microservice as a bounded context to aid in designing more secure APIs and apply secure design principles like domain primitives and context mapping.</li>
<li>Mitigate security pitfalls by only exposing domain operations in APIs, using explicit context mapping between services, and paying extra attention to evolving APIs.</li>
<li>Assess confidentiality, integrity, availability, and traceability (CIA-T) across all services and identify sensitive data that needs to be secured.</li>
<li>Emphasize the integrity of log data through normalization and categorization, requiring extensive domain knowledge.</li>
<li>Uniquely identify services by their name, version number, and instance ID, and ensure traceability of transactions across systems.</li>
<li>Utilize a logger with a domain-oriented API to consider the confidentiality of log data and prevent accidental information leakage by avoiding intermixing sensitive and nonsensitive data in the same log.</li>
</ul>
<p>Here's the adjusted bullet list:</p>
<p><strong>6. Secure Software Development Practices:</strong></p>
<ul>
<li>Adopt a design strategy of separating business exceptions from technical exceptions to maintain clarity and consistency.</li>
<li>Avoid mixing technical and business exceptions using the same type to prevent confusion and maintain code integrity.</li>
<li>Ensure good design practice by never including business data in technical exceptions to safeguard sensitive information.</li>
<li>Design software systems to handle failures gracefully, treating them as normal, unexceptional results.</li>
<li>Prioritize availability as a crucial security goal, enhancing system resilience and responsiveness to improve overall security.</li>
<li>Implement design patterns like circuit breakers, bulkheads, and timeouts to enhance system availability and mitigate potential failures.</li>
<li>Minimize risk by avoiding repairing data before validation and never echoing input verbatim to prevent security vulnerabilities.</li>
<li>Apply twelve-factor app and cloud-native concepts for enhanced application and system security, emphasizing stateless processes and backing services.</li>
<li>Separate code and configuration to facilitate deployment across multiple environments without rebuilding, while avoiding storing sensitive data in resource files.</li>
<li>Manage environment-dependent configuration as part of the environment and incorporate administration tasks into the solution.</li>
<li>Enhance security by avoiding local file logging and opting for centralized logging services.</li>
<li>Improve security and availability through service discovery, supporting dynamic system changes.</li>
<li>Implement the three R's (rotate, repave, repair) for improved security, particularly in cloud-based applications.</li>
<li>Apply the DRY principle to repeated representation of knowledge rather than text, avoiding unnecessary dependencies.</li>
<li>Conduct code security reviews as a recurring part of secure software development and invest in tooling for quick access to security vulnerability information.</li>
<li>Establish a proactive strategy for addressing security vulnerabilities in regular development cycles, incorporating pen tests to challenge design and detect issues.</li>
<li>Utilize feedback generated by pen tests to improve strategies and processes and consider bug bounty programs for continuous pen testing, acknowledging their complexity and resource demands.</li>
</ul>
<p><strong>7. Knowledge Acquisition and Application:</strong></p>
<ul>
<li>Initiate deliberate discovery early to gain deep insights into the domain, focusing on specificity initially and abstracting later for clarity.</li>
<li>Expand expertise by gathering knowledge from adjacent domains, facilitating cross-disciplinary problem-solving.</li>
<li>Prioritize semantic consistency by refactoring names when semantics change, especially outside bounded contexts, to maintain clarity and cohesion.</li>
<li>Acquire knowledge in the field of security to effectively address security problems, applying insights from different domains to enhance security measures.</li>
<li>Recognize the distinction between incident handling and problem resolution, involving the team in incident handling and focusing on learning and resilience to improve security posture.</li>
</ul>
<p>References: <a href="https://www.amazon.com/Secure-Design-Daniel-Deogun/dp/1617294357">Secure By Design</a></p>

"""""
),
            ["""2024-05-25-Items-for-Travel-First-Aid-Kit"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Essential Items for a Travel First Aid Kit
""""",
["""date"""] =
"""""
 2024-05-25
""""",
["""tags"""] =
"""""
 medicine travel
""""",
["""categories"""] =
"""""
 travelling
""""",
 },
"""""
<h3 id="essential-items-for-a-travel-first-aid-kit">Essential Items for a Travel First Aid Kit</h3>
<ol>
<li><p><strong>Individual Medications</strong></p>
<ul>
<li>Prescription medications (as prescribed by your doctor)</li>
<li>Regularly taken over-the-counter medications (e.g., for chronic conditions)</li>
</ul>
</li>
<li><p><strong>Bandaging Materials</strong></p>
<ul>
<li>Sterile gauze pads</li>
<li>Adhesive bandages (various sizes)</li>
<li>Antiseptic wipes</li>
<li>Adhesive tape</li>
<li>Elastic bandages</li>
<li>Bandages for sprains</li>
</ul>
</li>
<li><p><strong>Pain Relief</strong></p>
<ul>
<li>Ibuprofen or acetaminophen</li>
</ul>
</li>
<li><p><strong>Anti-Nausea and Motion Sickness Medications</strong></p>
<ul>
<li>Example: Aviomarin</li>
</ul>
</li>
<li><p><strong>Gastrointestinal Medications</strong></p>
<ul>
<li>Loperamide (for diarrhea)</li>
<li>Phthalylsulfathiazole (for gastrointestinal infections)</li>
</ul>
</li>
<li><p><strong>Allergy Medications</strong></p>
<ul>
<li>Antihistamines (e.g., Suprastin)</li>
</ul>
</li>
<li><p><strong>Tools</strong></p>
<ul>
<li>Scissors</li>
<li>Tweezers</li>
</ul>
</li>
<li><p><strong>Antiseptics</strong></p>
<ul>
<li>Alcohol wipes</li>
<li>Antiseptic solution (e.g., Betadine)</li>
</ul>
</li>
</ol>
<h3 id="situational-additions">Situational Additions</h3>
<ul>
<li><p><strong>Sun Protection</strong></p>
<ul>
<li>Sunscreen</li>
<li>After-sun care (e.g., Panthenol)</li>
</ul>
</li>
<li><p><strong>Insect Protection</strong></p>
<ul>
<li>Insect repellent (for mosquitoes, ticks)</li>
</ul>
</li>
</ul>
<h3 id="storage-tips">Storage Tips</h3>
<ul>
<li><p><strong>Container</strong></p>
<ul>
<li>Choose a waterproof and durable case or bag.</li>
<li>Consider a specially designed first aid bag for better organization and accessibility.</li>
</ul>
</li>
<li><p><strong>Maintenance</strong></p>
<ul>
<li>Regularly check expiration dates and replace outdated medications.</li>
<li>Keep the kit organized to ensure quick access in emergencies.</li>
</ul>
</li>
</ul>
<h3 id="additional-recommendations">Additional Recommendations</h3>
<ul>
<li><p><strong>Burn Treatment</strong></p>
<ul>
<li>Burn cream or gel (e.g., Aloe vera)</li>
</ul>
</li>
<li><p><strong>Cold and Flu</strong></p>
<ul>
<li>Decongestant</li>
<li>Throat lozenges</li>
</ul>
</li>
<li><p><strong>Basic Medical Instruments</strong></p>
<ul>
<li>Digital thermometer</li>
<li>Instant cold packs</li>
</ul>
</li>
<li><p><strong>Other Essentials</strong></p>
<ul>
<li>Safety pins</li>
<li>Medical gloves</li>
<li>CPR face shield</li>
</ul>
</li>
</ul>
<h3 id="conclusion">Conclusion</h3>
<p>Having a well-prepared first aid kit is crucial for any travel, whether it’s a short hike or an extended trip. Regularly update and maintain your kit to ensure that all items are in good condition and ready for use. Share this checklist with friends and fellow travelers to promote safety and preparedness on every adventure.</p>
<p>Feel free to adapt this list based on specific travel needs or personal medical requirements. Safe travels!</p>
<hr />
<h3 id="section">Основные предметы для аптечки путешественника</h3>
<ol>
<li><p><strong>Индивидуальные лекарства</strong></p>
<ul>
<li>Рецептурные лекарства (как предписано врачом)</li>
<li>Регулярно принимаемые безрецептурные лекарства (например, для хронических заболеваний)</li>
</ul>
</li>
<li><p><strong>Перевязочные материалы</strong></p>
<ul>
<li>Стерильные марлевые салфетки</li>
<li>Лейкопластыри (различных размеров)</li>
<li>Антисептические салфетки</li>
<li>Лейкопластырь</li>
<li>Эластичные бинты</li>
<li>Бинты для растяжений</li>
</ul>
</li>
<li><p><strong>Обезболивающие</strong></p>
<ul>
<li>Ибупрофен или парацетамол</li>
</ul>
</li>
<li><p><strong>Противорвотные и противоукачивающие средства</strong></p>
<ul>
<li>Например: Авиаомарин</li>
</ul>
</li>
<li><p><strong>Препараты от желудочно-кишечных расстройств</strong></p>
<ul>
<li>Лоперамид (от диареи)</li>
<li>Фталазол (от кишечных инфекций)</li>
</ul>
</li>
<li><p><strong>Противоаллергические средства</strong></p>
<ul>
<li>Антигистамины (например, Супрастин)</li>
</ul>
</li>
<li><p><strong>Инструменты</strong></p>
<ul>
<li>Ножницы</li>
<li>Пинцет</li>
</ul>
</li>
<li><p><strong>Антисептики</strong></p>
<ul>
<li>Спиртовые салфетки</li>
<li>Антисептический раствор (например, Бетадин)</li>
</ul>
</li>
</ol>
<h3 id="section-1">Дополнительные предметы по ситуации</h3>
<ul>
<li><p><strong>Защита от солнца</strong></p>
<ul>
<li>Солнцезащитный крем</li>
<li>Средства после загара (например, Пантенол)</li>
</ul>
</li>
<li><p><strong>Защита от насекомых</strong></p>
<ul>
<li>Средства от насекомых (комары, клещи)</li>
</ul>
</li>
</ul>
<h3 id="section-2">Советы по хранению</h3>
<ul>
<li><p><strong>Контейнер</strong></p>
<ul>
<li>Выберите водонепроницаемый и прочный футляр или сумку.</li>
<li>Рассмотрите возможность использования специальной аптечной сумки для лучшей организации и доступности.</li>
</ul>
</li>
<li><p><strong>Обслуживание</strong></p>
<ul>
<li>Регулярно проверяйте сроки годности и заменяйте устаревшие лекарства.</li>
<li>Поддерживайте порядок в аптечке, чтобы обеспечить быстрый доступ в экстренных ситуациях.</li>
</ul>
</li>
</ul>
<h3 id="section-3">Дополнительные рекомендации</h3>
<ul>
<li><p><strong>Средства для лечения ожогов</strong></p>
<ul>
<li>Крем или гель от ожогов (например, алоэ вера)</li>
</ul>
</li>
<li><p><strong>Средства от простуды и гриппа</strong></p>
<ul>
<li>Деконгестанты</li>
<li>Леденцы для горла</li>
</ul>
</li>
<li><p><strong>Основные медицинские инструменты</strong></p>
<ul>
<li>Цифровой термометр</li>
<li>Мгновенные холодные пакеты</li>
</ul>
</li>
<li><p><strong>Другие необходимые предметы</strong></p>
<ul>
<li>Булавки</li>
<li>Медицинские перчатки</li>
<li>Маска для искусственного дыхания</li>
</ul>
</li>
</ul>
<hr />
<h3 id="podstawowe-przedmioty-do-apteczki-podroznej">Podstawowe przedmioty do apteczki podróżnej</h3>
<ol>
<li><p><strong>Leki indywidualne</strong></p>
<ul>
<li>Leki na receptę (zgodnie z zaleceniem lekarza)</li>
<li>Regularnie przyjmowane leki bez recepty (np. na przewlekłe schorzenia)</li>
</ul>
</li>
<li><p><strong>Materiały opatrunkowe</strong></p>
<ul>
<li>Sterylne gaziki</li>
<li>Plastry (różne rozmiary)</li>
<li>Chusteczki antyseptyczne</li>
<li>Taśma klejąca</li>
<li>Bandaże elastyczne</li>
<li>Bandaże na skręcenia</li>
</ul>
</li>
<li><p><strong>Środki przeciwbólowe</strong></p>
<ul>
<li>Ibuprofen lub paracetamol</li>
</ul>
</li>
<li><p><strong>Środki przeciwwymiotne i na chorobę lokomocyjną</strong></p>
<ul>
<li>Na przykład: Aviomarin</li>
</ul>
</li>
<li><p><strong>Leki na problemy żołądkowo-jelitowe</strong></p>
<ul>
<li>Loperamid (na biegunkę)</li>
<li>Ftalylsulfatiazol (na infekcje jelitowe)</li>
</ul>
</li>
<li><p><strong>Leki przeciwalergiczne</strong></p>
<ul>
<li>Antyhistaminy (np. Suprastin)</li>
</ul>
</li>
<li><p><strong>Narzędzia</strong></p>
<ul>
<li>Nożyczki</li>
<li>Pęseta</li>
</ul>
</li>
<li><p><strong>Antyseptyki</strong></p>
<ul>
<li>Chusteczki alkoholowe</li>
<li>Roztwór antyseptyczny (np. Betadine)</li>
</ul>
</li>
</ol>
<h3 id="dodatkowe-przedmioty-w-zaleznosci-od-sytuacji">Dodatkowe przedmioty w zależności od sytuacji</h3>
<ul>
<li><p><strong>Ochrona przeciwsłoneczna</strong></p>
<ul>
<li>Krem przeciwsłoneczny</li>
<li>Środki po opalaniu (np. Panthenol)</li>
</ul>
</li>
<li><p><strong>Ochrona przed owadami</strong></p>
<ul>
<li>Środki odstraszające owady (komary, kleszcze)</li>
</ul>
</li>
</ul>
<h3 id="wskazowki-dotyczace-przechowywania">Wskazówki dotyczące przechowywania</h3>
<ul>
<li><p><strong>Pojemnik</strong></p>
<ul>
<li>Wybierz wodoodporny i wytrzymały futerał lub torbę.</li>
<li>Rozważ użycie specjalnej torby medycznej dla lepszej organizacji i dostępności.</li>
</ul>
</li>
<li><p><strong>Konserwacja</strong></p>
<ul>
<li>Regularnie sprawdzaj daty ważności i wymieniaj przeterminowane leki.</li>
<li>Utrzymuj porządek w apteczce, aby zapewnić szybki dostęp w nagłych przypadkach.</li>
</ul>
</li>
</ul>
<h3 id="dodatkowe-zalecenia">Dodatkowe zalecenia</h3>
<ul>
<li><p><strong>Środki na oparzenia</strong></p>
<ul>
<li>Krem lub żel na oparzenia (np. aloes)</li>
</ul>
</li>
<li><p><strong>Środki na przeziębienie i grypę</strong></p>
<ul>
<li>Środki udrażniające nos</li>
<li>Pastylki do ssania na gardło</li>
</ul>
</li>
<li><p><strong>Podstawowe narzędzia medyczne</strong></p>
<ul>
<li>Cyfrowy termometr</li>
<li>Chłodzące kompresy</li>
</ul>
</li>
<li><p><strong>Inne niezbędne przedmioty</strong></p>
<ul>
<li>Agrafki</li>
<li>Rękawiczki medyczne</li>
<li>Maska do resuscytacji</li>
</ul>
</li>
</ul>

"""""
),
            ["""2024-06-08-Automating-Article-Summarization-and-Posting-to-Telegram"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Automating Article Summarization and Posting to Telegram using Python
""""",
["""date"""] =
"""""
 2024-06-08
""""",
["""tags"""] =
"""""
 ai groq llm python automation web-scraping beautifulsoup telegram-bot api-integration tech-content-curation
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<h1 id="automating-article-summarization-and-posting-to-telegram-using-python">Automating Article Summarization and Posting to Telegram using Python</h1>
<p>In this blog post, we will walk through a Python script that automates the process of extracting text from a web page, summarizing it into key points using the Groq API, and posting the summary to a Telegram channel. This can be particularly useful for curating and sharing tech content efficiently.</p>
<h2 id="overview-of-the-script">Overview of the Script</h2>
<p>The script is divided into several key functions:</p>
<ol>
<li><strong>Extracting text from a URL using BeautifulSoup</strong></li>
<li><strong>Summarizing the text with the Groq API</strong></li>
<li><strong>Posting the summary to a Telegram channel</strong></li>
</ol>
<p>Let's dive into each part of the script.</p>
<h3 id="importing-necessary-libraries">Importing Necessary Libraries</h3>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">import</span> requests
<span style="color:#569CD6;">from</span> groq <span style="color:#569CD6;">import</span> Groq
<span style="color:#569CD6;">from</span> bs4 <span style="color:#569CD6;">import</span> BeautifulSoup
</pre></div>
<p>We start by importing the necessary libraries: <code>requests</code> for making HTTP requests, <code>BeautifulSoup</code> for parsing HTML content, and <code>Groq</code> for interacting with the Groq API.</p>
<h3 id="setting-up-variables">Setting Up Variables</h3>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
channel_id = <span style="color:#D69D85;">&quot;@ArticleDigestTech&quot;</span>
token = <span style="color:#D69D85;">&quot;&lt;&lt;TOKEN&gt;&gt;&quot;</span>
url = <span style="color:#D69D85;">&quot;https://techcommunity.microsoft.com/t5/educator-developer-blog/local-development-using-azure-cosmos-db-emulator-at-no-cost/ba-p/4153822&quot;</span>
title = <span style="color:#D69D85;">&quot;Local Development using Azure Cosmos DB Emulator at no Cost&quot;</span>
client = Groq(api_key=<span style="color:#D69D85;">&quot;&lt;&lt;API_KEY&gt;&gt;&quot;</span>)
</pre></div>
<p>Here, we define variables for the Telegram channel ID, bot token, article URL, and title. We also initialize the Groq API client with an API key.</p>
<h3 id="defining-the-question-template">Defining the Question Template</h3>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
question_template = (
    <span style="color:#D69D85;">&quot;Please extract the main points of the article as bullet list. Article is an extraction from html page as a text. &quot;</span>
    <span style="color:#D69D85;">&quot;Provide only valuable information for senior dotnet developer. Do not add any non-valuable information from software development perspective. &quot;</span>
    <span style="color:#D69D85;">&quot;Return ONLY bullet points WITHOUT any explanation or comments. Don&#39;t be verbose. &quot;</span>
    <span style="color:#D69D85;">&quot;Expected result: &quot;</span>
    <span style="color:#D69D85;">&quot;- point 1 &quot;</span>
    <span style="color:#D69D85;">&quot;- point 2 &quot;</span>
    <span style="color:#D69D85;">&quot;- point 3 &quot;</span>
    <span style="color:#D69D85;">&quot;- point N &quot;</span>
    <span style="color:#D69D85;">&quot;INPUT:\n{}&quot;</span>
)
</pre></div>
<p>The <code>question_template</code> is used to instruct the Groq API on how to summarize the article. It specifies that only valuable information for senior .NET developers should be included.</p>
<h3 id="extracting-text-from-the-url">Extracting Text from the URL</h3>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">def</span> extract_text_from_url():
    response = requests<span style="color:#B5CEA8;">.</span>get(url)
    <span style="color:#569CD6;">if</span> response<span style="color:#B5CEA8;">.</span>status_code == <span style="color:#B5CEA8;">200</span>:
        soup = BeautifulSoup(response<span style="color:#B5CEA8;">.</span>content, <span style="color:#D69D85;">&#39;html.parser&#39;</span>)
        text = soup<span style="color:#B5CEA8;">.</span>get_text()
        lines = (line<span style="color:#B5CEA8;">.</span>strip() <span style="color:#569CD6;">for</span> line <span style="color:#569CD6;">in</span> text<span style="color:#B5CEA8;">.</span>splitlines())
        chunks = (phrase<span style="color:#B5CEA8;">.</span>strip() <span style="color:#569CD6;">for</span> line <span style="color:#569CD6;">in</span> lines <span style="color:#569CD6;">for</span> phrase <span style="color:#569CD6;">in</span> line<span style="color:#B5CEA8;">.</span>split(<span style="color:#D69D85;">&quot;  &quot;</span>))
        text = <span style="color:#D69D85;">&#39;\n&#39;</span>.join(chunk <span style="color:#569CD6;">for</span> chunk <span style="color:#569CD6;">in</span> chunks <span style="color:#569CD6;">if</span> chunk)
        <span style="color:#569CD6;">return</span> text
    <span style="color:#569CD6;">else</span>:
        <span style="color:#569CD6;">return</span> f<span style="color:#D69D85;">&quot;Failed to retrieve the webpage. Status code: {response.status_code}&quot;</span>
</pre></div>
<p>This function sends a GET request to the specified URL, parses the HTML content with BeautifulSoup, and extracts the text. If the request fails, it returns an error message.</p>
<h3 id="summarizing-the-text-with-groq-api">Summarizing the Text with Groq API</h3>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">def</span> get_answer_from_groqcloud(article_text):
    question = question_template<span style="color:#B5CEA8;">.</span><span>format</span>(article_text)
    chat_completion = client<span style="color:#B5CEA8;">.</span>chat<span style="color:#B5CEA8;">.</span>completions<span style="color:#B5CEA8;">.</span>create(
        messages=[
            {
                <span style="color:#D69D85;">&quot;role&quot;</span>: <span style="color:#D69D85;">&quot;user&quot;</span>,
                <span style="color:#D69D85;">&quot;content&quot;</span>: question,
            }
        ],
        model=<span style="color:#D69D85;">&quot;llama3-8b-8192&quot;</span>
    )
    <span style="color:#569CD6;">return</span> chat_completion<span style="color:#B5CEA8;">.</span>choices[<span style="color:#B5CEA8;">0</span>].message<span style="color:#B5CEA8;">.</span>content
</pre></div>
<p>This function formats the extracted article text with the <code>question_template</code> and sends it to the Groq API. The response, which contains the summarized points, is returned.</p>
<h3 id="posting-the-summary-to-telegram">Posting the Summary to Telegram</h3>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">def</span> send_telegram_message(message):
    telegram_url = f<span style="color:#D69D85;">&quot;https://api.telegram.org/bot{token}/sendMessage&quot;</span>
    payload = {
        <span style="color:#D69D85;">&quot;chat_id&quot;</span>: channel_id,
        <span style="color:#D69D85;">&quot;text&quot;</span>: f<span style="color:#D69D85;">&quot;[{title}]({url})\n{message}&quot;</span>,
        <span style="color:#D69D85;">&quot;parse_mode&quot;</span>: <span style="color:#D69D85;">&quot;Markdown&quot;</span>
    }
    response = requests<span style="color:#B5CEA8;">.</span>post(telegram_url, data=payload)
    <span style="color:#569CD6;">return</span> response<span style="color:#B5CEA8;">.</span>json()
</pre></div>
<p>This function sends the summarized points to the specified Telegram channel using the Telegram bot API. The message is formatted in Markdown.</p>
<h3 id="main-function">Main Function</h3>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">if</span> __name__ == <span style="color:#D69D85;">&quot;__main__&quot;</span>:
    <span style="color:#569CD6;">try</span>:
        article = extract_text_from_url()
        <span style="color:#569CD6;">if</span> <span style="color:#D69D85;">&quot;Failed to retrieve the webpage&quot;</span> <span style="color:#569CD6;">in</span> article:
            <span style="color:#569CD6;">raise</span> ValueError(article)
        <span>print</span>(<span style="color:#D69D85;">&quot;Extracted Article Text:&quot;</span>)
        <span>print</span>(article)
    <span style="color:#569CD6;">except</span> (requests<span style="color:#B5CEA8;">.</span>exceptions<span style="color:#B5CEA8;">.</span>RequestException, ValueError) <span style="color:#569CD6;">as</span> e:
        <span>print</span>(<span style="color:#D69D85;">&quot;Error extracting text from URL:&quot;</span>, e)
        exit(<span style="color:#B5CEA8;">1</span>)

    <span style="color:#569CD6;">try</span>:
        answer = get_answer_from_groqcloud(article)
        <span>print</span>(<span style="color:#D69D85;">&quot;Extracted Main Points:&quot;</span>)
        <span>print</span>(answer)
    <span style="color:#569CD6;">except</span> requests<span style="color:#B5CEA8;">.</span>exceptions<span style="color:#B5CEA8;">.</span>RequestException <span style="color:#569CD6;">as</span> e:
        <span>print</span>(<span style="color:#D69D85;">&quot;Error calling GroqCloud API:&quot;</span>, e)
        exit(<span style="color:#B5CEA8;">1</span>)

    <span style="color:#569CD6;">try</span>:
        response = send_telegram_message(answer)
        <span>print</span>(<span style="color:#D69D85;">&quot;Response from Telegram API:&quot;</span>)
        <span>print</span>(response)
    <span style="color:#569CD6;">except</span> requests<span style="color:#B5CEA8;">.</span>exceptions<span style="color:#B5CEA8;">.</span>RequestException <span style="color:#569CD6;">as</span> e:
        <span>print</span>(<span style="color:#D69D85;">&quot;Error posting message to Telegram:&quot;</span>, e)
        exit(<span style="color:#B5CEA8;">1</span>)
</pre></div>
<p>The main function orchestrates the entire process: extracting the article text, summarizing it, and posting the summary to Telegram. It includes error handling for each step to ensure robustness.</p>
<h2 id="conclusion">Conclusion</h2>
<p>This script automates the extraction, summarization, and sharing of technical articles. By leveraging the Groq API and BeautifulSoup, it ensures that only the most relevant information is shared with your audience, saving time and effort. Whether you're a content curator or a tech enthusiast, this script can be a valuable tool in your workflow.</p>

"""""
),
            ["""2024-07-24-Creating-Dynamic-Autocomplete-Menus-in-React-with-Material-UI"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Creating Dynamic Autocomplete Menus in React with Material-UI
""""",
["""date"""] =
"""""
 2024-07-24
""""",
["""tags"""] =
"""""
 react autocomplete javascript webdevelopment frontend material-ui userexperience uicomponents webdesign softwaredevelopment tech gpt-4o
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<h1 id="enhancing-user-experience-with-react-building-an-input-with-autocomplete-suggestions">Enhancing User Experience with React: Building an Input with Autocomplete Suggestions</h1>
<p>Autocomplete functionality can significantly improve user experience by providing suggestions as users type. In this article, we will explore how to create an input field with an autocomplete menu using React and Material-UI.</p>
<h2 id="main-points-of-functionality">Main Points of Functionality</h2>
<h3 id="setting-up-state-and-references">1. Setting Up State and References</h3>
<p>We manage the state using React's <code>useState</code> hook to keep track of input values, the status of the suggestion menu, suggested items, and the cursor position. We also use <code>useRef</code> to reference the input field.</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">const</span> [inputValue, setInputValue] = useState(<span style="color:#D69D85;">&#39;&#39;</span>);
<span style="color:#569CD6;">const</span> [suggestionMenuOpen, setSuggestionMenuOpen] = useState(<span style="color:#569CD6;">false</span>);
<span style="color:#569CD6;">const</span> [suggestedItems, setSuggestedItems] = useState&lt;any[]&gt;([]);
<span style="color:#569CD6;">const</span> [cursorPosition, setCursorPosition] = useState({ top: 0, left: 0 });
<span style="color:#569CD6;">const</span> textInputRef = useRef&lt;HTMLInputElement | <span style="color:#569CD6;">null</span>&gt;(<span style="color:#569CD6;">null</span>);
</pre></div><h3 id="suggestion-options">2. Suggestion Options</h3>
<p>We define the options for the autocomplete suggestions. These options will be filtered based on user input.</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">const</span> suggestionOptions = [
  { value: <span style="color:#D69D85;">&#39;GoogleSearch&#39;</span>, text: <span style="color:#D69D85;">&#39;Google Search&#39;</span> },
  { value: <span style="color:#D69D85;">&#39;DatabaseLookup&#39;</span>, text: <span style="color:#D69D85;">&#39;Database Lookup&#39;</span> },
];
</pre></div><h3 id="calculating-caret-coordinates">3. Calculating Caret Coordinates</h3>
<p>The caret position is calculated to position the suggestion menu accurately. This involves creating a temporary div and span to measure the width of the text preceding the caret.</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">const</span> calculateCaretCoordinates = (element: HTMLInputElement, position: number) =&gt; {
  <span style="color:#57A64A;">// Implementation to calculate and return caret coordinates</span>
};
</pre></div><h3 id="handling-input-changes">4. Handling Input Changes</h3>
<p>The handleInputChange function is responsible for updating the input value, detecting the &quot;@&quot; symbol, filtering suggestion options, and updating the cursor position to show the suggestion menu.</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">const</span> handleInputChange = (e: React.ChangeEvent&lt;HTMLInputElement&gt;) =&gt; {
  <span style="color:#569CD6;">const</span> newValue = e.target.value;
  setInputValue(newValue);
  <span style="color:#57A64A;">// Further implementation to detect &quot;@&quot; and filter suggestions</span>
};
</pre></div><h3 id="handling-key-presses">5. Handling Key Presses</h3>
<p>The handleKeyPress function manages keyboard interactions, such as closing the suggestion menu on Escape, selecting a suggestion on Enter, and preventing default behavior for certain keys.</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">const</span> handleKeyPress = (e: KeyboardEvent&lt;HTMLInputElement | HTMLTextAreaElement&gt;) =&gt; {
  <span style="color:#569CD6;">if</span> (e.key === <span style="color:#D69D85;">&#39;Escape&#39;</span>) <span style="color:#569CD6;">return</span> setSuggestionMenuOpen(<span style="color:#569CD6;">false</span>);
  <span style="color:#569CD6;">if</span> (suggestionMenuOpen &amp;&amp; e.key === <span style="color:#D69D85;">&#39;Enter&#39;</span>) {
    e.preventDefault();
    <span style="color:#569CD6;">if</span> (suggestedItems.length &gt; 0) handleSuggestionSelect(suggestedItems[0].value);
  } <span style="color:#569CD6;">else</span> <span style="color:#569CD6;">if</span> (e.key === <span style="color:#D69D85;">&#39;Enter&#39;</span> &amp;&amp; !e.shiftKey) e.preventDefault();
};
</pre></div><h3 id="selecting-a-suggestion">6. Selecting a Suggestion</h3>
<p>When a suggestion is selected, the menu closes, and the selected tool is logged.</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">const</span> handleSuggestionSelect = (item: string) =&gt; {
  setSuggestionMenuOpen(<span style="color:#569CD6;">false</span>);
  console.log(`Selected tool: ${item}`);
};
</pre></div><h3 id="rendering-components">7. Rendering Components</h3>
<p>The InputBase component from Material-UI is used for the input field, and the Popover component is used to display the suggestion menu. The menu items are mapped from the filtered suggestions.</p>
<div style="color:#DADADA;background-color:#1E1E1E;"><pre>
<span style="color:#569CD6;">return</span> (
  &lt;&gt;
    &lt;InputBase
      multiline
      autoFocus
      inputRef={textInputRef}
      maxRows={10}
      placeholder=<span style="color:#D69D85;">&quot;Type something...&quot;</span>
      value={inputValue}
      onChange={handleInputChange}
      onKeyDown={handleKeyPress}
    /&gt;
    &lt;Popover
      anchorReference=<span style="color:#D69D85;">&quot;anchorPosition&quot;</span>
      anchorPosition={{ top: cursorPosition.top, left: cursorPosition.left }}
      open={suggestionMenuOpen}
      onClose={() =&gt; setSuggestionMenuOpen(<span style="color:#569CD6;">false</span>)}
      anchorOrigin={{ vertical: <span style="color:#D69D85;">&#39;top&#39;</span>, horizontal: <span style="color:#D69D85;">&#39;left&#39;</span> }}
      transformOrigin={{ vertical: <span style="color:#D69D85;">&#39;bottom&#39;</span>, horizontal: <span style="color:#D69D85;">&#39;left&#39;</span> }}
      disableAutoFocus
      disableEnforceFocus
      disableRestoreFocus&gt;
      {suggestedItems.map((item, index) =&gt; (
        &lt;MenuItem key={item.value} onClick={() =&gt; handleSuggestionSelect(item.value)}&gt;
          {item.text}
        &lt;/MenuItem&gt;
      ))}
    &lt;/Popover&gt;
  &lt;/&gt;
);
</pre></div><h2 id="conclusion">Conclusion</h2>
<p>Implementing autocomplete functionality in React can enhance user experience by providing relevant suggestions as users type. This article walked through the main points of building an input field with an autocomplete menu using React and Material-UI.</p>
<p>For the complete code, you can refer to the following links:</p>
<ul>
<li><a href="https://playcode.io/1948870">View the code on PlayCode</a></li>
<li><a href="./assets/InputWithSuggestionMenu.zip">Download the code as a ZIP file</a></li>
</ul>
<blockquote>
<p>Created by gpt-4o v2024-05-13, reviewed and edited by me</p>
</blockquote>

"""""
),
            ["""2024-12-06-Automating-Version-Increment-in-csproj-File-Using-Pre-Commit-Hook"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Automating Version Increment in a csproj File Using a Pre-Commit Hook
""""",
["""date"""] =
"""""
 2024-12-06
""""",
["""tags"""] =
"""""
 csproj versioning git pre-commit bash programming automation tech gpt-4o
""""",
["""categories"""] =
"""""
 programming
""""",
 },
"""""
<h1 id="automating-version-increment-in-a-csproj-file-using-a-pre-commit-hook">Automating Version Increment in a csproj File Using a Pre-Commit Hook</h1>
<p>When working on software projects, maintaining an accurate version number in the <code>csproj</code> file ensures proper tracking of builds and releases. This guide explains how to automate the process of incrementing the patch version in a <code>csproj</code> file using a <code>pre-commit</code> hook.</p>
<h2 id="overview">Overview</h2>
<p>The pre-commit hook ensures that every commit updates the version in the <code>csproj</code> file automatically. The following steps describe the implementation.</p>
<h2 id="step-1-write-the-pre-commit-hook">Step 1: Write the Pre-Commit Hook</h2>
<p>The <code>pre-commit</code> file ensures the script is executed before each commit. Below is an example:</p>
<pre><code class="language-bash">#!/bin/bash
./update_version.sh
git add example.csproj
</code></pre>
<p>This script calls <code>update_version.sh</code> to update the version and then stages the modified <code>example.csproj</code> file for the commit.</p>
<h2 id="step-2-create-the-version-update-script">Step 2: Create the Version Update Script</h2>
<p>The <code>update_version.sh</code> script parses the <code>csproj</code> file, increments the patch version, and updates the version in the file. Below is the script:</p>
<pre><code class="language-bash">#!/bin/bash
csprojFile=&quot;example.csproj&quot;
versionLine=$(grep -oPm1 &quot;(?&lt;=&lt;Version&gt;)[^&lt;]+&quot; &quot;$csprojFile&quot;)

if [ -z &quot;$versionLine&quot; ]; then
    echo &quot;Version node not found in the project file&quot; &gt;&amp;2
    exit 1
fi

version=&quot;$versionLine&quot;
IFS='.' read -r -a versionParts &lt;&lt;&lt; &quot;$version&quot;
if [ ${#versionParts[@]} -lt 3 ]; then
    echo &quot;Version format is incorrect. Expected format: major.minor.patch&quot; &gt;&amp;2
    exit 1
fi

versionParts[2]=$((versionParts[2] + 1))
newVersion=&quot;${versionParts[0]}.${versionParts[1]}.${versionParts[2]}&quot;
sed -i &quot;s/&lt;Version&gt;$version&lt;\/Version&gt;/&lt;Version&gt;$newVersion&lt;\/Version&gt;/&quot; &quot;$csprojFile&quot;
exit 0
</code></pre>
<h2 id="explanation-of-the-script">Explanation of the Script</h2>
<ol>
<li><strong>Locate the <code>&lt;Version&gt;</code> tag:</strong>
The script extracts the version number using <code>grep</code> with a Perl-compatible regular expression (PCRE).
<pre><code class="language-bash">versionLine=$(grep -oPm1 &quot;(?&lt;=&lt;Version&gt;)[^&lt;]+&quot; &quot;$csprojFile&quot;)
</code></pre>
</li>
<li><strong>Validate the format:</strong>
The script ensures the version follows the <code>major.minor.patch</code> format and handles errors if the tag is missing or misformatted.</li>
<li><strong>Increment the patch version:</strong>
The script splits the version string, increments the patch number, and constructs the new version.</li>
<li><strong>Update the file:</strong>
Using <code>sed</code>, the script replaces the old version in the <code>csproj</code> file with the new version.</li>
</ol>
<h2 id="step-3-make-scripts-executable">Step 3: Make Scripts Executable</h2>
<p>Ensure both scripts are executable by running:</p>
<pre><code class="language-bash">chmod +x pre-commit update_version.sh
</code></pre>
<h2 id="step-4-install-the-pre-commit-hook">Step 4: Install the Pre-Commit Hook</h2>
<p>Move the <code>pre-commit</code> file to the Git hooks directory:</p>
<pre><code class="language-bash">mv pre-commit .git/hooks/pre-commit
</code></pre>
<h2 id="step-5-test-the-automation">Step 5: Test the Automation</h2>
<ol>
<li>Modify some files in your repository.</li>
<li>Stage the changes and commit.
<pre><code class="language-bash">git commit -m &quot;Test version update&quot;
</code></pre>
</li>
<li>Confirm that the <code>example.csproj</code> file's version has been updated.</li>
</ol>
<h2 id="conclusion">Conclusion</h2>
<p>Using a <code>pre-commit</code> hook to automatically increment the version in your <code>csproj</code> file streamlines the process of maintaining consistent versioning. This ensures your build pipeline always operates on updated version numbers without manual intervention.</p>

"""""
),
            ["""2024-12-29-Effective-Communication-in-Team-Chat-Applications"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Effective Communication in Team Chat Applications
""""",
["""date"""] =
"""""
 2024-12-29
""""",
["""tags"""] =
"""""
 communication team-chat problem-solving etiquette programming collaboration
""""",
["""categories"""] =
"""""
 teamwork productivity
""""",
 },
"""""
<h1 id="effective-communication-in-team-chat-applications">Effective Communication in Team Chat Applications</h1>
<h2 id="starting-conversations-in-a-team-chat">Starting Conversations in a Team Chat</h2>
<p>When reaching out to teammates for help or discussion, it’s essential to:</p>
<ol>
<li><strong>Provide Context</strong>: Briefly explain the task or situation.</li>
<li><strong>Ask Specific Questions</strong>: Focus on the help or information you need.</li>
<li><strong>Consolidate Your Message</strong>: Aim to describe your situation or question in a single, well-organized message rather than splitting it across multiple fragments. This helps others quickly grasp the full picture and respond efficiently.</li>
<li><strong>Avoid the XY Problem</strong>: Clearly state the root problem (Y), not just your proposed solution (X).</li>
</ol>
<h3 id="example">Example:</h3>
<ul>
<li><strong>Ineffective:</strong> “Hi, How do I add a timeout to this HTTP request?”</li>
<li><strong>Effective:</strong> “Hi, I’m working on ensuring our HTTP requests don’t hang indefinitely. Should I use a timeout setting, or is there a better approach?”</li>
</ul>
<p>The second example communicates the root problem (Y) while inviting input on potential solutions.</p>
<hr />
<h2 id="communication-etiquette">Communication Etiquette</h2>
<p>To foster a positive and productive environment, adhere to the following principles inspired by the Elm Community Spaces Code of Conduct:</p>
<h3 id="be-friendly-welcoming-and-inclusive">Be Friendly, Welcoming, and Inclusive</h3>
<ul>
<li>Make everyone feel valued and respected, regardless of their experience level or background.</li>
</ul>
<h3 id="be-helpful-and-patient">Be Helpful and Patient</h3>
<ul>
<li>Share knowledge constructively, avoiding condescending or dismissive behavior.</li>
<li>If someone is struggling, offer guidance without judgment.</li>
</ul>
<h3 id="be-respectful-and-considerate">Be Respectful and Considerate</h3>
<ul>
<li>Understand that people have diverse perspectives, skills, and communication styles.</li>
<li>Avoid assumptions about others’ expertise or intent.</li>
</ul>
<h3 id="avoid-negative-behavior">Avoid Negative Behavior</h3>
<ul>
<li><strong>Derailing Conversations:</strong> Stay on topic unless a shift is necessary and agreed upon.</li>
<li><strong>Unconstructive Criticism:</strong> Provide actionable feedback instead of merely pointing out flaws.</li>
<li><strong>Hostile Comments:</strong> Refrain from sarcasm or inflammatory language.</li>
</ul>
<h3 id="resolve-conflicts-gracefully">Resolve Conflicts Gracefully</h3>
<ul>
<li>Approach disagreements with a calm and solution-oriented mindset.</li>
<li>Assume good intentions, and clarify misunderstandings respectfully.</li>
</ul>
<hr />
<h2 id="sources">Sources</h2>
<ul>
<li><a href="https://github.com/elm-community/discussions/blob/master/code-of-conduct.md">Elm Community Spaces Code of Conduct</a></li>
<li><a href="https://en.wikipedia.org/wiki/XY_problem">Wikipedia: XY Problem</a></li>
</ul>

"""""
),
            ["""2025-01-19-Testing-React-Components-with-Vitest"""] = (new Dictionary<string, string> { ["path"]="",["""title"""] =
"""""
 Testing React Components with Vitest: Testing React Components with Vitest
""""",
["""date"""] =
"""""
 2025-01-19
""""",
["""tags"""] =
"""""
 testing react vitest components mocking hooks
""""",
["""categories"""] =
"""""
 programming testing
""""",
 },
"""""
<h1 id="testing-react-components-with-vitest">Testing React Components with Vitest</h1>
<h2 id="difference-between-vi.mock-and-vi.fn">Difference Between vi.mock and vi.fn</h2>
<table>
<thead>
<tr>
<th><strong>Aspect</strong></th>
<th><strong><code>vi.spyOn</code></strong></th>
<th><strong><code>vi.fn</code> (mock)</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Behavior</strong></td>
<td>Observes an existing function.</td>
<td>Replaces a function entirely.</td>
</tr>
<tr>
<td><strong>Preserves logic</strong></td>
<td>Yes, by default.</td>
<td>No, unless you explicitly define it.</td>
</tr>
<tr>
<td><strong>Flexibility</strong></td>
<td>Modifies existing methods conditionally.</td>
<td>Fully customizable, starting from scratch.</td>
</tr>
<tr>
<td><strong>Typical use case</strong></td>
<td>Tracking calls to real methods.</td>
<td>Testing isolated components or behaviors.</td>
</tr>
</tbody>
</table>
<h2 id="testing-interactive-components">Testing Interactive Components</h2>
<h3 id="counter-button-component">Counter Button component</h3>
<pre><code class="language-tsx">import { useState } from &quot;react&quot;;

export default function CounterButton() {
  const [count, setCount] = useState(0);
  return (
    &lt;div&gt;
      &lt;span&gt;{count}&lt;/span&gt;
      &lt;button onClick={() =&gt; setCount(count + 1)}&gt;Increment&lt;/button&gt;
    &lt;/div&gt;
  );
}
</code></pre>
<h3 id="counter-button-test">Counter Button test</h3>
<pre><code class="language-tsx">import { render, screen } from &quot;@testing-library/react&quot;;
import userEvent from &quot;@testing-library/user-event&quot;;
import CounterButton from &quot;./button-click.component.tsx&quot;;
import { expect, test } from &quot;vitest&quot;;
import &quot;@testing-library/jest-dom&quot;;

test(&quot;increments value when button is clicked&quot;, async () =&gt; {
  render(&lt;CounterButton /&gt;);

  const user = userEvent.setup();
  const button = screen.getByRole(&quot;button&quot;, { name: &quot;Increment&quot; });
  const value = screen.getByText(&quot;0&quot;);

  await user.click(button);

  expect(value).toHaveTextContent(&quot;1&quot;);
});
</code></pre>
<h2 id="mocking-global-apis-e.g.fetch">Mocking Global APIs (e.g., fetch)</h2>
<h3 id="fetch-button-component">Fetch Button component</h3>
<pre><code class="language-tsx">import { useState } from &quot;react&quot;;

export default function FetchButton() {
  const [data, setData] = useState(null);

  async function handleClick() {
    const response = await fetch(&quot;/api/data&quot;);
    const result = await response.json();
    setData(result.message);
  }

  return (
    &lt;div&gt;
      &lt;button onClick={handleClick}&gt;Fetch Data&lt;/button&gt;
      {data &amp;&amp; &lt;span&gt;{data}&lt;/span&gt;}
    &lt;/div&gt;
  );
}

</code></pre>
<h3 id="fetch-button-test">Fetch Button test</h3>
<pre><code class="language-tsx">import { expect, test, vi } from &quot;vitest&quot;;
import FetchButton from &quot;./mock-fetch.component&quot;;
import { render, screen } from &quot;@testing-library/react&quot;;
import userEvent from &quot;@testing-library/user-event&quot;;
import &quot;@testing-library/jest-dom&quot;;

test(&quot;calls fetch when button is clicked&quot;, async () =&gt; {
  // Mock the fetch function
  vi.stubGlobal(
    &quot;fetch&quot;,
    vi.fn(() =&gt;
      Promise.resolve({
        json: () =&gt; Promise.resolve({ message: &quot;Hello, World!&quot; }),
      })
    )
  );
  render(&lt;FetchButton /&gt;);
  const user = userEvent.setup();

  const button = screen.getByRole(&quot;button&quot;, { name: &quot;Fetch Data&quot; });

  // Click the button
  await user.click(button);

  // Verify fetch was called with the correct URL
  expect(fetch).toHaveBeenCalledWith(&quot;/api/data&quot;);

  // Verify the rendered data
  const result = await screen.findByText(&quot;Hello, World!&quot;);
  expect(result).toBeInTheDocument();

  // Cleanup mock
  vi.unstubAllGlobals();
});

</code></pre>
<h2 id="testing-callbacks-passed-to-child-components">Testing Callbacks Passed to Child Components</h2>
<h3 id="parent-child-components">Parent &amp; Child components</h3>
<pre><code class="language-tsx">import ChildComponent from &quot;./child.component.tsx&quot;;

const ParentComponent = () =&gt; {
  const onCallback1 = () =&gt; {
    console.log(&quot;Callback 1 triggered&quot;);
  };

  const onCallback2 = () =&gt; {
    console.log(&quot;Callback 2 triggered&quot;);
  };

  return (
    &lt;div&gt;
      &lt;h1&gt;Parent Component&lt;/h1&gt;
      &lt;ChildComponent onCallback1={onCallback1} onCallback2={onCallback2} showTitle={true} /&gt;
    &lt;/div&gt;
  );
};

export default ParentComponent;

</code></pre>
<pre><code class="language-tsx">export interface ChildComponentProps {
  onCallback1: () =&gt; void;
  onCallback2: () =&gt; void;
  showTitle: boolean;
}

const ChildComponent = ({ showTitle, onCallback1, onCallback2 }: ChildComponentProps) =&gt; {
  return (
    &lt;div&gt;
      {showTitle &amp;&amp; &lt;h1&gt;Child Component&lt;/h1&gt;}
      &lt;button onClick={onCallback1}&gt;Callback 1&lt;/button&gt;
      &lt;button onClick={onCallback2}&gt;Callback 2&lt;/button&gt;
    &lt;/div&gt;
  );
};

export default ChildComponent;

</code></pre>
<h3 id="parent-test">Parent test</h3>
<pre><code class="language-tsx">import { render, screen } from &quot;@testing-library/react&quot;;
import userEvent from &quot;@testing-library/user-event&quot;;
import { expect, test, vi } from &quot;vitest&quot;;
import ParentComponent from &quot;./parent.component.tsx&quot;;
import { ChildComponentProps } from &quot;./child.component.tsx&quot;;
import ChildComponent from &quot;./child.component.tsx&quot;;

// Mock the child component
vi.mock(&quot;./child.component.tsx&quot;, async () =&gt; {
  return {
    default: vi.fn().mockImplementation(({ onCallback1, onCallback2 }: ChildComponentProps) =&gt; (
      &lt;div&gt;
        &lt;button data-testid=&quot;button-1&quot; onClick={onCallback1}&gt;
          Trigger Callback 1
        &lt;/button&gt;
        &lt;button data-testid=&quot;button-2&quot; onClick={onCallback2}&gt;
          Trigger Callback 2
        &lt;/button&gt;
      &lt;/div&gt;
    )),
  };
});

test(&quot;calls parent's internal callbacks when child buttons are clicked&quot;, async () =&gt; {
  const user = userEvent.setup();

  // Spy on console.log to check if callbacks are triggered
  const consoleSpy = vi.spyOn(console, &quot;log&quot;);

  render(&lt;ParentComponent /&gt;);

  // Simulate button clicks in the mocked child component
  const button1 = screen.getByTestId(&quot;button-1&quot;);
  const button2 = screen.getByTestId(&quot;button-2&quot;);

  await user.click(button1);
  await user.click(button2);

  // Assert the parent's callbacks (console logs) are triggered
  expect(consoleSpy).toHaveBeenCalledWith(&quot;Callback 1 triggered&quot;);
  expect(consoleSpy).toHaveBeenCalledWith(&quot;Callback 2 triggered&quot;);
  expect(vi.mocked(ChildComponent)).toHaveBeenCalledWith(
    expect.objectContaining({
      showTitle: true, // Verifying the showTitle prop
    }),
    expect.anything()
  );

  // Cleanup the console spy
  consoleSpy.mockRestore();
});

</code></pre>
<h2 id="mocking-custom-hooks">Mocking Custom Hooks</h2>
<h3 id="parent-component-custom-hook">Parent component &amp; Custom hook</h3>
<pre><code class="language-tsx">import useCustomHook from &quot;./useCustomHook&quot;;

const ParentComponent = () =&gt; {
  const { data, isLoading } = useCustomHook();

  if (isLoading) {
    return &lt;p&gt;Loading...&lt;/p&gt;;
  }

  return &lt;div&gt;{data ? &lt;p&gt;Data: {data}&lt;/p&gt; : &lt;p&gt;No Data Available&lt;/p&gt;}&lt;/div&gt;;
};

export default ParentComponent;


</code></pre>
<pre><code class="language-tsx">import { useState, useEffect } from &quot;react&quot;;

export interface CustomHookReturn {
  data: string | null;
  isLoading: boolean;
}

export default function useCustomHook(): CustomHookReturn {
  const [data, setData] = useState&lt;string | null&gt;(null);
  const [isLoading, setIsLoading] = useState(true);

  useEffect(() =&gt; {
    setTimeout(() =&gt; {
      setData(&quot;Hello, World!&quot;);
      setIsLoading(false);
    }, 1000);
  }, []);

  return { data, isLoading };
}

</code></pre>
<h3 id="parent-test-1">Parent test</h3>
<pre><code class="language-tsx">import { render, screen } from &quot;@testing-library/react&quot;;
import { test, vi, expect } from &quot;vitest&quot;;
import ParentComponent from &quot;./parent.component&quot;;
import useCustomHook from &quot;./useCustomHook&quot;;
import &quot;@testing-library/jest-dom&quot;;

// Mock the custom hook
vi.mock(&quot;./useCustomHook&quot;, async () =&gt; {
  return {
    default: vi.fn(),
  };
});

test(&quot;shows loading state initially&quot;, () =&gt; {
  // Mock the custom hook's return value for loading state
  vi.mocked(useCustomHook).mockReturnValue({
    data: null,
    isLoading: true,
  });

  render(&lt;ParentComponent /&gt;);

  // Assert the loading state is rendered
  expect(screen.getByText(&quot;Loading...&quot;)).toBeInTheDocument();
});

test(&quot;shows data when available&quot;, () =&gt; {
  // Mock the custom hook's return value for data state
  vi.mocked(useCustomHook).mockReturnValue({
    data: &quot;Hello, World!&quot;,
    isLoading: false,
  });

  render(&lt;ParentComponent /&gt;);

  // Assert the data is rendered
  expect(screen.getByText(&quot;Data: Hello, World!&quot;)).toBeInTheDocument();
});

test(&quot;shows no data message when data is null&quot;, () =&gt; {
  // Mock the custom hook's return value for no data state
  vi.mocked(useCustomHook).mockReturnValue({
    data: null,
    isLoading: false,
  });

  render(&lt;ParentComponent /&gt;);

  // Assert the &quot;No Data Available&quot; message is rendered
  expect(screen.getByText(&quot;No Data Available&quot;)).toBeInTheDocument();
});

</code></pre>
<h2 id="sources">Sources</h2>
<ul>
<li><a href="https://github.com/ypyl/react-vitest-samples/tree/master/vite-project/src/components">Samples</a></li>
<li><a href="https://vitest.dev/guide/mocking">Mocking | Guide | Vitest</a></li>
<li><a href="https://testing-library.com/docs/react-testing-library/example-intro">Example | Testing Library</a></li>
</ul>

"""""
),
            ["""2017-01-09-English-minute"""] = (new Dictionary<string, string> { ["path"]="English",["""title"""] =
"""""
 English minute
""""",
["""date"""] =
"""""
 2017-01-09
""""",
["""tags"""] =
"""""
 english
""""",
["""categories"""] =
"""""
 learning
""""",
 },
"""""
<h3 id="crime-stuff">Crime stuff</h3>
<ul>
<li>proximity</li>
</ul>
<blockquote>
<p>The state, quality, sense, or fact of being near or next; closeness: &quot;Swift's major writings have a proximity and a relevance that is splendidly invigorating&quot; (M.D. Aeschliman).</p>
</blockquote>
<ul>
<li>robbery</li>
</ul>
<blockquote>
<p>The act or an instance of unlawfully taking the property of another by the use of violence or intimidation. &quot;He committed dozens of armed robberies.&quot;</p>
</blockquote>
<ul>
<li>burglary</li>
</ul>
<blockquote>
<p>The act of entering another's premises without authorization in order to commit a crime, such as theft. An instance of this: There were 10 burglaries in the area last month.</p>
</blockquote>
<ul>
<li>fraud</li>
</ul>
<blockquote>
<p>A deception practiced in order to induce another to give up possession of property or surrender a right. A piece of trickery; a trick.</p>
</blockquote>
<ul>
<li>get away with something</li>
</ul>
<blockquote>
<p>escape without any penalty</p>
</blockquote>
<ul>
<li>caught</li>
</ul>
<blockquote>
<p>arrested</p>
</blockquote>
<ul>
<li>aftermath</li>
</ul>
<blockquote>
<p>after-effect</p>
</blockquote>
<ul>
<li>sinister</li>
</ul>
<blockquote>
<p>Suggesting or threatening harm or evil: a sinister smile.</p>
</blockquote>
<ul>
<li>seeping</li>
</ul>
<blockquote>
<p>To pass slowly through small openings or pores; ooze: Water is seeping into the basement.</p>
</blockquote>
<ul>
<li>obsessed</li>
</ul>
<blockquote>
<p>Can't stop thinking about.</p>
</blockquote>
<ul>
<li>inning</li>
</ul>
<blockquote>
<p>3 strike outs in a row
OMFG, I can't believe he did a whole inning.</p>
</blockquote>

"""""
),
            ["""2018-09-01-Proverbs"""] = (new Dictionary<string, string> { ["path"]="English",["""title"""] =
"""""
 Proverbs
""""",
["""date"""] =
"""""
 2018-09-01
""""",
["""tags"""] =
"""""
 english
""""",
["""categories"""] =
"""""
 learning
""""",
 },
"""""
<ol>
<li>&quot;Two wrongs don't make a right.&quot;
Смысл: Когда кто-нибудь вам сделал плохо что-то, попытка отомсить может сделать только хуже.
Дословный перевод: Два заблуждения – еще не правда
Русский аналог: Минус на минус – не всегда плюс.</li>
</ol>
<hr />
<ol start="2">
<li>&quot;The pen is mightier than the sword.&quot;
Смысл: Попытка убедить людей, что идеи и слова эффективнее чем попытка заставить силой делать людей что вам нужно.
Дословный перевод: Ручка (перо) могущественее меча.
Русский аналог: Что написано пером — не вырубить топором. Злые языки страшнее пистолета.</li>
</ol>
<hr />
<ol start="3">
<li>&quot;When in Rome, do as the Romans.&quot;
Смысл: Действовать так как действуют окружающие. Эту поговорку используют часто заграницей, когда иностранные привычки и нравы отличаются от собственных.
Дословный перевод: Находясь в Риме, веди себя как римлянин.
Русский аналог: Со своим самоваром в гости не ходят.</li>
</ol>
<hr />
<ol start="4">
<li>&quot;The squeaky wheel gets the grease.&quot;
Смысл: Вы можете получить более лучшее обслуживание, если пожалуйтесь на него. Если вы будете прост терпеть неудобства то никто вам не поможет. Надо что-то делать, чтоб что-то изменилось!
Дословный перевод: Смазывают прежде колесо, которое скрипит.
Русский аналог: Под лежачий камень вода не течет. Хочешь жить, умей вертеться.</li>
</ol>
<hr />
<ol start="5">
<li>&quot;When the going gets tough, the tough get going.&quot;
Смысл: Сильные люди не сдаются когда наступают трудности. Они начинаю работать больше!
Дословный перевод: ...
Русский аналог: - Близко - да склизко, далеко - да легко.</li>
</ol>
<hr />
<ol start="6">
<li>&quot;No man is an island.&quot;
Смысл: Никто не может быть полностью независимым. Каждому нужна помощь окружающих.
Дословный перевод: Человек — не остров.
Русский аналог: Один в поле не воин.</li>
</ol>
<hr />
<ol start="7">
<li>&quot;Fortune favors the bold.&quot;
Смысл: Люди которые смело не боятся трудностей более успешнее чем те кто пытается постоянно находится в безопасности.
Дословный перевод: Судьба благоприятствует смелым
Русский аналог: Смелым сопутствует удача. Смелость города берёт.</li>
</ol>
<hr />
<ol start="8">
<li>&quot;People who live in glass houses should not throw stones.&quot;
Смысл:Не критикуй людей когда сам не совершенен.
Дословный перевод: Живущий в стеклянном доме не должен бросать в других камни
Русский аналог: В чужом глазу соринку видим, в своем бревно не замечаем.</li>
</ol>
<hr />
<ol start="9">
<li>&quot;Hope for the best, but prepare for the worst.&quot;
Смысл: Плохое случается, так, что будь готов к этому.
Дословный перевод: Надейся на лучшее, но будь готов и к худшему
Русский аналог:Надейся на лучшее, но будь готов и к худшему.</li>
</ol>
<hr />
<ol start="10">
<li>&quot;Better late than never.&quot;
Смысл: Лучше конечно сделать что-то вовремя. Но если не получается вовремя, все равно сделайте это хоть и с опозданием.
Дословный перевод: Лучше поздно чем никогда.
Русский аналог: Лучше поздно чем никогда.</li>
</ol>
<hr />
<ol start="11">
<li>&quot;Birds of a feather flock together.&quot;
Смысл: Люди любят проводит время с теми кто на них похоже.
Дословный перевод: Птицы одного оперения собираются вместе
Русский аналог: Рыбак рыбака видит издалека.</li>
</ol>
<hr />
<ol start="12">
<li>&quot;Keep your friends close and your enemies closer.&quot;
Смысл: Если у вас есть враг, то притворитесь ему другом вместо прямой вражды. Таким образом вы сможете понять его слабые стороны и что  он планирует.
Дословный перевод: Держи своих друзей близко,а врагов ещё ближе.
Русский аналог: Держи своих друзей близко,а врагов ещё ближе.</li>
</ol>
<hr />
<ol start="13">
<li>&quot;A picture is worth a thousand words.&quot;
Смысл: Фотографии передают эмоции сильнее чем текст или голос.
Дословный перевод: Картинка стоит тысячи слов.
Русский аналог: Лучше один раз увидеть, чем сто раз услышать.</li>
</ol>
<hr />
<ol start="14">
<li>&quot;There's no such thing as a free lunch.&quot;
Смысл: Бесплатные вещи всегда имеют скрытую цену.
Дословный перевод: Не бывает бесплатных обедов.
Русский аналог: Бесплатный сыр бывает только в мышеловке.</li>
</ol>
<hr />
<ol start="15">
<li>&quot;There's no place like home.&quot;
Смысл: Ваш собственный дом самое комфортное место.
Дословный перевод: Нет ничего лучше дома (из песни &quot;Home, sweet home&quot;)
Русский аналог: В гостях хорошо, а дома лучше.</li>
</ol>
<hr />
<ol start="16">
<li>&quot;Discretion is the greater part of valour.&quot;
Смысл: Иногда важно знать когда остановится и двигаться дальше, вместо того чтобы продолжать бессмысленный бой и только затягивать неблагоприятный исход.
Дословный перевод: Осторожность — лучшая часть отваги.
Русский аналог: Поспешишь, людей насмешишь. Не зная броду, не суйся в воду.</li>
</ol>
<hr />
<ol start="17">
<li>&quot;The early bird catches the worm.&quot;
Смысл: Надо вставать рано утром, чтобы добиться успеха.
Дословный перевод: Ранняя пташка ловить всех червей
Русский аналог:Кто рано встает,тому Бог подает.</li>
</ol>
<hr />
<ol start="18">
<li>&quot;Never look a gift horse in the mouth.&quot;
Смысл: Когда вам что-нибудь дарят, не задавайте лишних вопросов о подарке.
Дословный перевод: Дарёному коню в зубы не смотрят.
Русский аналог: Дарёному коню в зубы не смотрят.</li>
</ol>
<hr />
<ol start="19">
<li>&quot;You can't make an omelet without breaking a few eggs.&quot;
Смысл: Когда вы стремитесь что-то сделать, возможно найдутся несколько людей которых это будет злить и раздражать. Не обращайте внимание - сфокусируйтесь на результате.
Дословный перевод: Нельзя приготовить омлет не разбив яйца
Русский аналог:Нельзя приготовить омлет не разбив яйца.</li>
</ol>
<hr />
<ol start="20">
<li>&quot;God helps those who help themselves.&quot;
Смысл: Не ждите, что хорошее случится само по себе. Работайте усердно для достижений своих целей.
Дословный перевод: Бог помогает тем, кто помогает себе.
Русский аналог: На Бога надейся, а сам не плошай. Бережёного Бог бережёт.</li>
</ol>
<hr />
<ol start="21">
<li>&quot;You can't always get what you want.&quot;
Смысл:Не стоит плакать и жаловаться если вы не получили того чего ожидали(хотели).
Дословный перевод: Ты не можешь всегда получать того чего хочешь
Русский аналог: Не всегда коту Масленица.</li>
</ol>
<hr />
<ol start="22">
<li>&quot;Cleanliness is next to godliness.&quot;
Смысл: Будь чист.
Дословный перевод: Чистота следует за набожностью
Русский аналог: В здоровом теле здоровый дух.</li>
</ol>
<hr />
<ol start="23">
<li>&quot;A watched pot never boils.&quot;
Смысл: Если что-то должно вот-вот свершиться не надо об этом думать ибо может показаться что это займет вечность.
Дословный перевод: Пока смотришь на чайник, он не закипит.
Русский аналог: Кто над чайником стоит, у того он не кипит. За которым горшком наблюдают, тот последним вскипает.</li>
</ol>
<hr />
<ol start="24">
<li>&quot;Beggars can't be choosers.&quot;
Смысл: Если вы что-то просите у кого-то, то надо брать что-бы не предлагали.
Дословный перевод: Нищие не выбирают.
Русский аналог: Нищим выбирать не приходится.</li>
</ol>
<hr />
<ol start="25">
<li>&quot;Actions speak louder than words.&quot;
Смысл: Просто говорить что ты сделаешь что-то ничего не значит. Настоящее ”делание” куда сложнее чем в думается.
Дословный перевод: Дела звучат громче слов.
Русский аналог:Дела говорят сами за себя.</li>
</ol>
<hr />
<ol start="26">
<li>&quot;If it ain't broke, don't fix it.&quot;
Смысл: Не пытайтесь исправить, что и так работает хорошо.
Дословный перевод: Если это не сломано, не чини его.
Русский аналог: От добра добра не ищут.</li>
</ol>
<hr />
<ol start="27">
<li>&quot;Practice makes perfect.&quot;
Смысл: Вы должны практиковаться, чтобы стать лучше в своем деле.
Дословный перевод: Практика приводит к совершенству.
Русский аналог:Повторенье — мать ученья.</li>
</ol>
<hr />
<ol start="28">
<li>&quot;Too many cooks spoil the broth.&quot;
Смысл: Когда слишком много людей пытаются командовать это дает плохие результаты.
Дословный перевод: Слишком много поваров испортят бульон.
Русский аналог: У семи нянек дитя без глазу.</li>
</ol>
<hr />
<ol start="29">
<li>&quot;Easy come, easy go.&quot;
Смысл: Деньги что достались легким путем так же легко и исчезают.
Дословный перевод: Легко пришло — легко ушло.
Русский аналог: Легко нашёл — легко потерял. Бог дал, бог и взял.</li>
</ol>
<hr />
<ol start="30">
<li>&quot;Don't bite the hand that feeds you.&quot;
Смысл: Если вам кто-то помогает , будте осторожны чтобы не сказать что то плохое и не разозлить доброжелателя.
Дословный перевод: Не кусай руку, кормящую тебя.
Русский аналог: Не пили сук, на котором сидишь., Не плюй в колодец, — пригодится воды напиться.</li>
</ol>
<hr />
<ol start="31">
<li>&quot;All good things must come to an end.&quot;
Смысл: Вам не может способствовать удача бесконечно, когда-нибудь это прекратится.
Дословный перевод: Все хорошое кончается.
Русский аналог: Все хорошое кончается.</li>
</ol>
<hr />
<ol start="32">
<li>&quot;If you can't beat 'em, join 'em.&quot;
Смысл: Может не сработать попытка изменить кого-то,возможно придется изменится самому.
Дословный перевод: Не можешь победить — присоединяйся.
Русский аналог: Не можешь бороться, тогда возглавь.</li>
</ol>
<hr />
<ol start="33">
<li>&quot;One man's trash is another man's treasure.&quot;
Смысл: Разные люди имеют разные ценности.
Дословный перевод: Мусор для одного человека — это сокровище для другого.
Русский аналог:Что русскому хорошо, то немцу смерть.</li>
</ol>
<hr />
<ol start="34">
<li>&quot;There's no time like the present.&quot;
Смысл: Если вы хотите что-то сделать, не ждите - делайте!
Дословный перевод: Второго сегодня не будет.
Русский аналог: Дважды в ту же реку не войдешь.</li>
</ol>
<hr />
<ol start="35">
<li>&quot;Beauty is in the eye of the beholder.&quot;
Смысл: Разные люди имеют разные представления о красоте.
Дословный перевод: Красота в глазах того, кто смотрит
Русский аналог: На вкус и цвет товарища нет.</li>
</ol>
<hr />
<ol start="36">
<li>&quot;Necessity is the mother of invention.&quot;
Смысл: Когда ты действительно в нужде, тогда ищется креативное решение.
Дословный перевод: Нужда — мать изобретательства.
Русский аналог: Голь на выдумки хитра.</li>
</ol>
<hr />
<ol start="37">
<li>&quot;A penny saved is a penny earned.&quot;
Смысл: Экономия денег это как зарабатывание их.
Дословный перевод: Сэкономленное пенни — заработанное пенни.
Русский аналог: Копейка рубль бережет.</li>
</ol>
<hr />
<ol start="38">
<li>&quot;Familiarity breeds contempt.&quot;
Смысл:Когда кто-то возле вас находится назойливо долго, устаешь от него.
Дословный перевод: Familiarity breeds contempt
Русский аналог:</li>
</ol>
<hr />
<ol start="39">
<li>&quot;You can't judge a book by its cover.&quot;
Смысл: Многие вещи выглядят хуже чем он есть на самом деле (и наоборот).
Дословный перевод: Не суди о книге по обложке.
Русский аналог: Встречают по одежке, провожают по уму.</li>
</ol>
<hr />
<ol start="40">
<li>&quot;Good things come to those who wait.&quot;
Смысл: Будь терпелив.
Дословный перевод: Хорошее приходит к тому кто ждет.
Русский аналог:</li>
</ol>
<hr />
<ol start="41">
<li>&quot;Don't put all your eggs in one basket.&quot;
Смысл: Имейте запасной план.
Дословный перевод: Не клади все яйца в одну корзину.
Русский аналог: Не клади все яйца в одну корзину.</li>
</ol>
<hr />
<ol start="42">
<li>&quot;Two heads are better than one.&quot;
Смысл: Когда два человека сотрудничают, вероятность появления хорошей идеи увеличивается.
Дословный перевод: Одна голова — хорошо, а две лучше.
Русский аналог: Одна голова — хорошо, а две лучше.</li>
</ol>
<hr />
<ol start="43">
<li>&quot;The grass is always greener on the other side of the hill.&quot;
Смысл: Людям свойственно хотеть то чего не имеют.
Дословный перевод: Трава всегда зеленее на другой стороне холма.
Русский аналог: Хорошо там, где нас нет.</li>
</ol>
<hr />
<ol start="44">
<li>&quot;Do unto others as you would have them do unto you.&quot;
Смысл: Не делай зла людям.
Дословный перевод: Поступай с другими так, как ты бы хотел, чтобы они поступали с тобой.
Русский аналог: Как аукнется — так и откликнется.</li>
</ol>
<hr />
<ol start="45">
<li>&quot;A chain is only as strong as its weakest link.&quot;
Смысл: Если кто-то показывает плохие результаты то вся команда под угрозой.
Дословный перевод: Цепь так же крепка как и её самое слабое звено.
Русский аналог: Где тонко — там и рвётся.</li>
</ol>
<hr />
<ol start="46">
<li>&quot;Honesty is the best policy.&quot;
Смысл:Не лги.
Честность- лучшая политика.
Русский аналог: Хлеб-соль ешь, а правду режь.</li>
</ol>
<hr />
<ol start="47">
<li>&quot;Absence makes the heart grow fonder.&quot;
Смысл: Иногда хорошо быть далеко от любимой(ого) чтоб испытать вновь радость встречи.
Дословный перевод: Разлука укрепляет чувства
Русский аналог: Разлука для любви, что ветер для искры: маленькую затушит, а большую сделает еще сильнее.</li>
</ol>
<hr />
<ol start="48">
<li>&quot;You can lead a horse to water, but you can't make him drink.&quot;
Смысл: Если вы пытаетесь кому-то помочь а он нив какую,бросьте это. Вы не можете силой заставить принять свою помощь.
Дословный перевод: Можно отвести лошадь на водопой, но невозможно заставить ее пить.
Русский аналог:</li>
</ol>
<hr />
<ol start="49">
<li>&quot;Don't count your chickens before they hatch.&quot;
Смысл:Дождитесь успеха прежде чем планировать следующий результат.
Дословный перевод: Не считай цыплят, пока они не вылупились.
Русский аналог: Цыплят по осени считают., Не делите шкуру неубитого медведя.</li>
</ol>
<hr />
<ol start="50">
<li>&quot;If you want something done right, you have to do it yourself.&quot;
Смысл: Не доверяйте другим делать важные вещи за вас.
Дословный перевод: Если хочешь что-то сделать хорошо, сделай это сам.
Русский аналог: Если хочешь что-то сделать хорошо, сделай это сам.</li>
</ol>

"""""
),
            ["""2024-01-19-Diplomatic-Grammar"""] = (new Dictionary<string, string> { ["path"]="English",["""title"""] =
"""""
 Diplomatic Grammar
""""",
["""categories"""] =
"""""
 english
""""",
["""tags"""] =
"""""
 english polite diplomatic
""""",
["""date"""] =
"""""
2024-1-19
""""",
 },
"""""
<h3 id="modal-verbs-softening-certainty">Modal Verbs: Softening Certainty</h3>
<p>Use modal verbs like 'would,' 'could,' 'may,' and 'might' to reduce certainty and appear more cooperative.</p>
<ul>
<li>&quot;This is a problem&quot; becomes &quot;This could be a challenge.&quot;</li>
<li>&quot;This idea will not work&quot; transforms into &quot;This idea might not work.&quot;</li>
<li>&quot;You should complete the task&quot; softens to &quot;You could consider completing the task.&quot;</li>
</ul>
<h3 id="alternatives-to-cant-and-wont-navigating-disagreements">Alternatives to Can't and Won't: Navigating Disagreements</h3>
<p>Avoid phrases like 'can't' and 'won't' in negotiations. Opt for alternatives such as 'be unable' or 'not in a position to' for a more diplomatic tone.</p>
<ul>
<li>&quot;We won't accept a deadline of two weeks&quot; changes to &quot;We are not in a position to accept a deadline of two weeks.&quot;</li>
<li>&quot;I can't support your proposal&quot; becomes &quot;I am unable to fully support your proposal.&quot;</li>
<li>&quot;We can't meet your request&quot; transforms into &quot;Regrettably, we are unable to meet your request.&quot;</li>
</ul>
<h3 id="the-passive-eliminating-blame">The Passive: Eliminating Blame</h3>
<p>Utilize passive constructions to eliminate blame and focus on the issue.</p>
<ul>
<li>&quot;You made a mistake in the calculations&quot; becomes &quot;A mistake was made in the calculations.&quot;</li>
<li>&quot;They must address the issue&quot; changes to &quot;The issue must be addressed by them.&quot;</li>
<li>&quot;You should complete the report&quot; transforms into &quot;The report should be completed.&quot;</li>
</ul>
<h3 id="passive-phrases-creating-distance">Passive Phrases: Creating Distance</h3>
<p>Use passive phrases such as 'it was said,' 'it was thought,' 'it was understood,' and 'it is assumed' to avoid direct blame.</p>
<ul>
<li>&quot;You said the product was ready for release&quot; changes to &quot;It was said that the product was ready for release.&quot;</li>
<li>&quot;They thought the project would be completed by now&quot; becomes &quot;It was thought that the project would be completed by now.&quot;</li>
<li>&quot;You understood the requirements&quot; transforms into &quot;It was understood that the requirements were clear.&quot;</li>
</ul>
<h3 id="the-continuous-form-softening-messages">The Continuous Form: Softening Messages</h3>
<p>Use the continuous form to soften messages and suggest ongoing hope or opportunity.</p>
<ul>
<li>&quot;We hoped to sign the contract today&quot; becomes &quot;We were hoping to sign the contract today.&quot;</li>
<li>&quot;I thought of a different approach&quot; changes to &quot;I was thinking of a different approach.&quot;</li>
<li>&quot;We expected a response by now&quot; transforms into &quot;We were expecting a response by now.&quot;</li>
</ul>
<h3 id="polite-conditionals-inviting-cooperation">Polite Conditionals: Inviting Cooperation</h3>
<p>Transform imperative statements into polite conditionals to invite cooperation.</p>
<ul>
<li>&quot;Send it back as soon as possible&quot; becomes &quot;I would appreciate it if you sent it back as soon as possible.&quot;</li>
<li>&quot;Complete the task by Friday&quot; changes to &quot;I would be grateful if you could complete the task by Friday.&quot;</li>
<li>&quot;Please provide the information promptly&quot; transforms into &quot;I would appreciate it if you could provide the information promptly.&quot;</li>
</ul>

"""""
),
            ["""2024-01-21-Diplomatic-Questions"""] = (new Dictionary<string, string> { ["path"]="English",["""title"""] =
"""""
 Diplomatic Questions
""""",
["""categories"""] =
"""""
 english
""""",
["""tags"""] =
"""""
 english polite diplomatic
""""",
["""date"""] =
"""""
2024-1-21
""""",
 },
"""""
<h2 id="indirect-questions">Indirect Questions</h2>
<p>Indirect questions serve as a polite and diplomatic way to seek information or make requests. Using introductory phrases is crucial for constructing these questions. Consider the following examples:</p>
<ol>
<li><p><strong>Could you tell me what you need to get this task done?</strong></p>
<ul>
<li><em>Introductory phrase + question word + positive sentence</em></li>
<li>This example demonstrates how to politely ask a colleague about the requirements for completing a task.</li>
</ul>
</li>
<li><p><strong>Do you happen to know where the meeting room is?</strong></p>
<ul>
<li><em>Introductory phrase + positive sentence</em></li>
<li>By using an introductory phrase, this question becomes more polite and less direct, suitable for asking directions.</li>
</ul>
</li>
<li><p><strong>I wonder if we could move the release date.</strong></p>
<ul>
<li><em>Introductory phrase + if/whether + positive sentence</em></li>
<li>In this case, an indirect question is employed to suggest a possible change in plans diplomatically.</li>
</ul>
</li>
</ol>
<h3 id="introductory-phrases">Introductory phrases:</h3>
<ul>
<li>Do you know …</li>
<li>I wonder / was wondering ….</li>
<li>Can / Could you tell me …</li>
<li>Do you happen to know ...</li>
<li>Do you have any idea ...</li>
<li>Would you mind telling me…</li>
<li>May I ask…</li>
<li>I'd like to know …</li>
</ul>
<h2 id="negative-questions">Negative Questions</h2>
<p>Negative questions provide a diplomatic way to express concerns or opinions without sounding too direct. Consider the following examples:</p>
<ol>
<li><p><strong>Wouldn’t we be taking a huge risk?</strong></p>
<ul>
<li><em>Negative auxiliary + subject + positive sentence</em></li>
<li>This example transforms a statement about a risk into a diplomatic question, inviting others to participate in the decision-making process.</li>
</ul>
</li>
<li><p><strong>Wouldn’t it be better to discuss this proposal with other team members?</strong></p>
<ul>
<li><em>Negative auxiliary + subject + positive sentence</em></li>
<li>By framing the suggestion as a negative question, the speaker encourages agreement and maintains a more indirect tone.</li>
</ul>
</li>
<li><p><strong>They can’t both be right, can they?</strong></p>
<ul>
<li><em>Negative auxiliary + positive sentence</em></li>
<li>This question tag allows room for discussion and persuasiveness, particularly useful in negotiation scenarios.</li>
</ul>
</li>
</ol>
<p>Negative questions can be formed using negative auxiliaries like 'shouldn’t,' 'wouldn’t,' 'don’t,' or 'won’t,' creating a more diplomatic tone and leaving room for discussion.</p>
<h2 id="question-tags">Question Tags</h2>
<p>Question tags contribute to politeness and interaction in both statements and suggestions. Here are examples:</p>
<ol>
<li><p><strong>The reports are ready, aren't they?</strong></p>
<ul>
<li><em>Positive verb + negative tag</em></li>
<li>By adding a question tag, this statement becomes an invitation for agreement, fostering interaction.</li>
</ul>
</li>
<li><p><strong>We are meeting next week, aren't we?</strong></p>
<ul>
<li><em>Positive verb + negative tag</em></li>
<li>Question tags, as demonstrated here, can maintain engagement and politeness in various situations.</li>
</ul>
</li>
<li><p><strong>Let's start the meeting, shall we?</strong></p>
<ul>
<li><em>Positive verb + positive tag</em></li>
<li>Using a tag softens the suggestion, making it more polite and encouraging participation.</li>
</ul>
</li>
</ol>
<h3 id="exceptions">EXCEPTIONS</h3>
<ol>
<li>After ‘I am’ the tag is ‘aren't’, e.g.</li>
</ol>
<ul>
<li>I am late, aren't I?</li>
<li>BUT: I am not late, am I?</li>
</ul>
<ol start="2">
<li>After ‘let’s’ the tag is ‘shall’, e.g.</li>
</ol>
<ul>
<li>Let's go to the beach, shall we?</li>
</ul>

"""""
),
            ["""2024-01-21-Diplomatic-Saying-No"""] = (new Dictionary<string, string> { ["path"]="English",["""title"""] =
"""""
 Diplomatic Saying No
""""",
["""categories"""] =
"""""
 english
""""",
["""tags"""] =
"""""
 english polite diplomatic
""""",
["""date"""] =
"""""
2024-1-21
""""",
 },
"""""
<h2 id="no-in-small-talks">No in Small Talks</h2>
<p>Instead of delivering a blunt &quot;NO,&quot; incorporating alternative phrases can maintain a friendly tone and foster smoother communication.</p>
<h3 id="softening-alternatives">Softening Alternatives:</h3>
<p>Rather than a direct &quot;No,&quot; consider using alternatives such as:</p>
<ul>
<li>&quot;Not really&quot;</li>
<li>&quot;Not exactly&quot;</li>
<li>&quot;Not especially&quot;</li>
<li>&quot;Not yet&quot;</li>
<li>&quot;Not any more&quot;</li>
<li>&quot;Not at the moment&quot;</li>
<li>&quot;Not as far as I know&quot;</li>
</ul>
<h3 id="further-softening-phrases">Further Softening Phrases:</h3>
<p>Enhance your rejection message by incorporating phrases like:</p>
<ul>
<li>&quot;Actually, not yet&quot;</li>
<li>&quot;As a matter of fact, not any more&quot;</li>
</ul>
<p>These additions serve to soften the negative message, creating an atmosphere conducive to continued conversation.</p>
<h3 id="examples-in-action">Examples in Action:</h3>
<ul>
<li>Instead of a straightforward &quot;No,&quot; try: &quot;Not really interested in that at the moment.&quot;</li>
<li>Transform a direct negative response to a more nuanced one: &quot;Not exactly what I had in mind.&quot;</li>
<li>Soften a refusal by saying: &quot;Actually, not yet, but I appreciate the suggestion.&quot;</li>
</ul>
<hr />
<h2 id="saying-no-in-meetings">Saying 'No' in meetings</h2>
<p>Let's explore a framework that can guide you through this delicate process.</p>
<h3 id="checking-understanding">1. Checking Understanding</h3>
<p>Before declining a request or suggestion, it's crucial to ensure that you fully grasp what is being asked. Use phrases like:</p>
<ul>
<li>&quot;Let me see if I’ve understood you correctly.&quot;</li>
<li>&quot;You mean…&quot;</li>
</ul>
<h3 id="expressing-doubt-and-asking-for-details">2. Expressing Doubt and Asking for Details</h3>
<p>Introduce an element of uncertainty to soften the refusal. Seek more information with phrases such as:</p>
<ul>
<li>&quot;I’m not so sure about this.&quot;</li>
<li>&quot;Could you give me some more details on…&quot;</li>
</ul>
<h3 id="showing-support">3. Showing Support</h3>
<p>Even when you are inclined to decline, acknowledge the other person's perspective to convey support:</p>
<ul>
<li>&quot;I hear what you are saying, but…&quot;</li>
</ul>
<h3 id="saying-no-and-explaining-why">4. Saying 'No' and Explaining Why</h3>
<p>Deliver the refusal with clarity and transparency, providing a valid reason:</p>
<ul>
<li>&quot;I’m afraid we are not able to… at this stage because…&quot;</li>
</ul>
<h3 id="offering-an-alternative">5. Offering an Alternative</h3>
<p>To maintain a positive tone and show willingness to collaborate, suggest an alternative solution:</p>
<ul>
<li>&quot;Why don’t we…&quot;</li>
</ul>

"""""
),
            ["""2024-01-21-Diplomatic-Vocabulary"""] = (new Dictionary<string, string> { ["path"]="English",["""title"""] =
"""""
 Diplomatic Vocabulary
""""",
["""categories"""] =
"""""
 english
""""",
["""tags"""] =
"""""
 english polite diplomatic
""""",
["""date"""] =
"""""
2024-1-21
""""",
 },
"""""
<h3 id="rephrasing-negative-sentences">Rephrasing Negative Sentences</h3>
<p>In professional settings, expressing disapproval requires finesse to avoid sounding unfriendly. Rephrasing negative sentences can add a positive tone. For instance, instead of saying, &quot;I am unhappy with the progress,&quot; you can say, &quot;I am not entirely happy with the progress.&quot; By substituting negative words with positive alternatives, such as &quot;up to standard,&quot; negativity is softened.</p>
<ul>
<li>&quot;The outcome is bad.&quot; becomes &quot;The outcome is not quite up to our expectations.&quot;</li>
<li>&quot;I'm dissatisfied with the proposal.&quot; becomes &quot;I'm not entirely satisfied with the proposal.&quot;</li>
<li>&quot;His response was poor.&quot; becomes &quot;His response was not quite up to the expected standard.&quot;</li>
</ul>
<h3 id="softeners">Softeners</h3>
<p>Softeners are phrases that precede conveying potentially bad news, introducing a sense of apology or regret. Starting messages with expressions like &quot;Unfortunately&quot; or &quot;I'm afraid&quot; softens the impact of negative information, fostering a more understanding response.</p>
<ul>
<li>&quot;I haven't finished the task.&quot; becomes &quot;I'm afraid I haven't finished the task.&quot;</li>
<li>&quot;We have to cancel the trip.&quot; becomes &quot;I am sorry, but we have to cancel the trip.&quot;</li>
<li>&quot;The project is delayed.&quot; becomes &quot;Unfortunately, the project is experiencing some delays.&quot;</li>
</ul>
<h2 id="restrictive-phrases">Restrictive Phrases</h2>
<p>Incorporating restrictive phrases adds optimism and suggests potential positive outcomes despite current challenges. Words like &quot;yet,&quot; &quot;at this stage,&quot; or &quot;so far&quot; imply an ongoing process and openness to improvement.</p>
<ul>
<li>&quot;I don’t know the answer.&quot; becomes &quot;Unfortunately, I don’t know the answer at the moment.&quot;</li>
<li>&quot;The task is incomplete.&quot; becomes &quot;I'm afraid the task hasn’t been completed yet.&quot;</li>
<li>&quot;We lack information.&quot; becomes &quot;At this stage, we lack the necessary information.&quot;</li>
</ul>
<h3 id="minimizing-words">Minimizing Words</h3>
<p>Minimizing words, such as 'a little' or 'somewhat,' temper the severity of a situation. These words convey a sense that the issue is not as significant as it may initially seem.</p>
<ul>
<li>&quot;His presentation was long.&quot; becomes &quot;His presentation was a bit long.&quot;</li>
<li>&quot;The delay is substantial.&quot; becomes &quot;The delay is somewhat substantial.&quot;</li>
<li>&quot;The error is significant.&quot; becomes &quot;The error is a little significant.&quot;</li>
</ul>
<h3 id="opinion-phrases">Opinion Phrases</h3>
<p>Including opinion phrases emphasizes subjectivity, providing room for discussion and differing viewpoints. Using expressions like &quot;in my opinion&quot; or &quot;from my perspective&quot; signals that the statement is based on personal judgment.</p>
<ul>
<li>&quot;The candidate's technical skills are below average.&quot; becomes &quot;Overall, I feel that the candidate's technical skills are below average.&quot;</li>
<li>&quot;The approach is incorrect.&quot; becomes &quot;From my perspective, the approach seems incorrect.&quot;</li>
<li>&quot;The decision is wrong.&quot; becomes &quot;In my opinion, the decision appears to be wrong.&quot;</li>
</ul>
<h3 id="tentative-verbs">Tentative Verbs</h3>
<p>Tentative verbs, such as 'seems' or 'appears,' introduce a level of uncertainty, making statements less direct and more courteous.</p>
<ul>
<li>&quot;Mark has difficulties in building rapport.&quot; becomes &quot;Mark seems to have some difficulties in building rapport.&quot;</li>
<li>&quot;The outcome is certain.&quot; becomes &quot;It appears that the outcome is certain.&quot;</li>
<li>&quot;She lacks experience.&quot; becomes &quot;It seems she may lack some experience.&quot;</li>
</ul>

"""""
),
            ["""2024-01-28-Diplomatic-Meaning-Clear"""] = (new Dictionary<string, string> { ["path"]="English",["""title"""] =
"""""
 Diplomatic Meaning Clear
""""",
["""categories"""] =
"""""
 english
""""",
["""tags"""] =
"""""
 english polite diplomatic
""""",
["""date"""] =
"""""
2024-1-28
""""",
 },
"""""
<h3 id="meaning-clear-mastering-the-l.i.s.t.e.n.model"><strong>Meaning Clear: Mastering the L.I.S.T.E.N. Model</strong></h3>
<p>Communication is the cornerstone of our professional interactions, encompassing daily updates, customer requirements, and product discussions. However, true communication extends beyond mere information exchange; it involves a nuanced, two-way process of speaking and listening. In this blog, we delve into the L.I.S.T.E.N. model, a comprehensive approach to making your meaning clear and avoiding misunderstandings.</p>
<h4 id="look-and-sound-interested-l"><strong>1. Look and sound interested (L)</strong></h4>
<p>Ensure your engagement during conversations by making eye contact in face-to-face meetings or by offering short, polite comments in virtual settings. Examples include expressions like:</p>
<ul>
<li>Right</li>
<li>I see</li>
<li>I understand</li>
<li>Yes</li>
<li>Of course</li>
<li>Really?</li>
<li>Oh, that's interesting</li>
<li>Uh huh</li>
</ul>
<h4 id="inquire-i"><strong>2. Inquire (I)</strong></h4>
<p>To gain a deeper understanding, ask for more information using phrases such as:</p>
<ul>
<li>What exactly do you mean by [word]?</li>
<li>Could you clarify what you mean by...?</li>
<li>Could you say a little more about?</li>
<li>Could you run through that again, please?</li>
</ul>
<h4 id="summarize-s"><strong>3. Summarize (S)</strong></h4>
<p>Summarizing is crucial for clarifying ideas. Use expressions like:</p>
<ul>
<li>I mean</li>
<li>What I mean is</li>
<li>What I am trying to say is</li>
<li>What I’m saying is…</li>
<li>In other words</li>
<li>Ok, let me put it another way</li>
</ul>
<h4 id="test-if-you-understand-t"><strong>4. Test if you understand (T)</strong></h4>
<p>Verify comprehension by paraphrasing what the other person has said in your own words:</p>
<ul>
<li>So, what you are saying is…</li>
<li>So, just to be clear…</li>
<li>Sorry, are you saying that…?</li>
<li>So, what you mean is…</li>
</ul>
<h4 id="encourage-e"><strong>5. Encourage (E)</strong></h4>
<p>Foster effective communication by encouraging questions and engagement:</p>
<ul>
<li>Do you have any questions?</li>
<li>Is everything clear so far?</li>
<li>Do you see what I mean?</li>
<li>Did that make sense?</li>
</ul>
<h4 id="neutralize-n"><strong>6. Neutralize (N)</strong></h4>
<p>Address misunderstandings politely without blame:</p>
<ul>
<li>Perhaps I've misunderstood...</li>
<li>I'm afraid I don’t follow...</li>
<li>Sorry, I don’t quite see what you mean…</li>
</ul>
<p>In conclusion, the L.I.S.T.E.N. model comprises six strategies, each playing a crucial role in ensuring clear and meaningful communication. While strategies like Summarize and Encourage are vital when speaking, Inquire and Test if you understand are key when listening. Notably, Look and sound interested and Neutralize can be applied effectively in both speaking and listening scenarios. Mastering these strategies enhances your communication skills and fosters a more productive professional environment.</p>

"""""
),
            ["""2024-01-28-Diplomatic-Typical-Mistakes"""] = (new Dictionary<string, string> { ["path"]="English",["""title"""] =
"""""
 Diplomatic Typical Mistakes
""""",
["""categories"""] =
"""""
 english
""""",
["""tags"""] =
"""""
 english polite diplomatic
""""",
["""date"""] =
"""""
2024-1-28
""""",
 },
"""""
<h3 id="typical-mistakes-in-business-communication">Typical Mistakes in Business Communication</h3>
<p>Effective communication in a business setting is crucial for success, and avoiding common mistakes can significantly enhance professional interactions. In this article, we'll explore some typical mistakes and provide insights on how to navigate through them.</p>
<h4 id="no-small-talk">1. NO Small Talk</h4>
<p>Small talk plays a vital role in setting a positive tone before diving into business discussions. Awkward silence can be easily alleviated with a few simple questions, such as:</p>
<ul>
<li>How are you today?/ How have you been?</li>
<li>How has your week been so far?</li>
<li>How was your weekend?</li>
<li>Any plans for the weekend?</li>
<li>What’s the weather like in your location?</li>
</ul>
<p>Engaging in small talk helps break the ice and creates a comfortable atmosphere.</p>
<h4 id="no-smooth-transition-from-small-talk-to-business-talk">2. No Smooth Transition from Small Talk to Business Talk</h4>
<p>Moving seamlessly from small talk to business talk is an art that can enhance the flow of communication. Employ expressions like:</p>
<ul>
<li>Right, we’ve got a lot to get through, so let’s get down to business, shall we?</li>
<li>Well, it’s been great to chat, but perhaps we should get started, if you don’t mind.</li>
<li>Okay, we don’t have a lot of time, so I guess it’s time to begin, don’t you think?</li>
</ul>
<p>Follow this formula of signaling the end of small talk, suggesting the transition, and softening the suggestion.</p>
<h4 id="interrupting-politely">3. Interrupting Politely</h4>
<p>Interruptions, when done rudely, can disrupt the flow of conversation. Instead of a direct interruption, use diplomatic alternatives like:</p>
<ul>
<li>May I interrupt for a moment?</li>
<li>Could I just come in here?</li>
<li>Sorry to interrupt, but…</li>
</ul>
<p>These phrases, incorporating modal verbs and politeness, make interruptions smoother.</p>
<h4 id="avoiding-blame-in-communication">4. Avoiding Blame in Communication</h4>
<p>In tense situations, avoid directly blaming the other party. Rather than saying &quot;YOU didn’t give us...&quot; or &quot;YOU should understand…,&quot; adopt a more diplomatic approach:</p>
<ul>
<li>Sorry, it seems we didn’t receive…</li>
<li>Perhaps, I wasn't very clear.</li>
</ul>
<p>Shifting the focus from 'YOU' to 'I' or 'WE' helps diffuse tension.</p>
<h4 id="inappropriate-response-to-criticism">5. Inappropriate Response to Criticism</h4>
<p>When faced with criticism, responding defensively doesn't encourage cooperation. Instead, inquire about specific examples:</p>
<ul>
<li>Could you give us a few examples of what doesn’t meet your expectations?</li>
</ul>
<p>This approach keeps the communication diplomatic and opens a dialogue based on customer expectations.</p>
<h4 id="asking-non-accusatory-questions">6. Asking Non-Accusatory Questions</h4>
<p>Avoid accusatory questions that can strain relationships. Opt for more polite alternatives:</p>
<ul>
<li>What do you think?</li>
<li>What’s your take on this?</li>
</ul>
<p>For questions like &quot;WHY aren’t you doing this?,&quot; rephrase to a constructive inquiry:</p>
<ul>
<li>What stops us from this?</li>
<li>What are the obstacles/blockers?</li>
</ul>
<p>By softening questions, you encourage a more cooperative relationship and effective communication. These strategies contribute to a positive and productive business communication environment, promoting understanding and collaboration.</p>

"""""
),
            ["""2024-02-07-Disengage"""] = (new Dictionary<string, string> { ["path"]="English",["""title"""] =
"""""
 Disengage
""""",
["""categories"""] =
"""""
 english
""""",
["""tags"""] =
"""""
 english word vocabluary
""""",
["""date"""] =
"""""
2024-2-7
""""",
 },
"""""
<h3 id="meaning">Meaning</h3>
<p>&quot;Disengage&quot; is a verb that signifies the act of withdrawing, separating, or disconnecting oneself or something from a particular situation, commitment, or engagement. It implies a deliberate action to detach or release oneself from involvement, whether physical, emotional, or mental.</p>
<h3 id="usage">Usage:</h3>
<h4 id="physical-disengagement">1. Physical Disengagement:</h4>
<ul>
<li>Example: &quot;He quickly disengaged from the conversation to attend to an urgent matter.&quot;</li>
<li>In this context, &quot;disengage&quot; indicates physically withdrawing oneself from a conversation or interaction.</li>
</ul>
<h4 id="emotional-disengagement">2. Emotional Disengagement:</h4>
<ul>
<li>Example: &quot;She found it necessary to disengage from toxic relationships for her well-being.&quot;</li>
<li>Here, &quot;disengage&quot; conveys the emotional act of distancing oneself from harmful or draining relationships.</li>
</ul>
<h4 id="mechanical-disengagement">3. Mechanical Disengagement:</h4>
<ul>
<li>Example: &quot;The safety feature automatically disengages the machinery in case of overheating.&quot;</li>
<li>This demonstrates the mechanical sense of &quot;disengage,&quot; referring to the separation or release of mechanical components.</li>
</ul>
<h4 id="cognitive-disengagement">4. Cognitive Disengagement:</h4>
<ul>
<li>Example: &quot;Students tend to disengage when the material does not captivate their interest.&quot;</li>
<li>In this instance, &quot;disengage&quot; pertains to mental detachment or withdrawal from a task or subject.</li>
</ul>
<h4 id="social-disengagement">5. Social Disengagement:</h4>
<ul>
<li>Example: &quot;The diplomat decided to disengage from the negotiations temporarily to reassess their strategy.&quot;</li>
<li>This usage indicates the temporary withdrawal from social interactions or engagements for strategic purposes.</li>
</ul>
<h3 id="when-to-use-disengage">When to Use &quot;Disengage&quot;:</h3>
<p>&quot;Disengage&quot; is appropriate in various contexts where there is a need to convey the act of separation, withdrawal, or detachment. It can be employed in personal, professional, mechanical, or social scenarios where disconnection or release is required or desired. Whether it's stepping back from a conversation, detaching emotionally from a situation, or releasing a mechanical component, &quot;disengage&quot; succinctly encapsulates the action.</p>

"""""
),
            ["""2018-09-05-Serializing-and-versioning"""] = (new Dictionary<string, string> { ["path"]="High-loaded-applications",["""title"""] =
"""""
 Serializing and versioning
""""",
["""date"""] =
"""""
 2018-09-05
""""",
["""tags"""] =
"""""
 high-load
""""",
["""categories"""] =
"""""
 learning
""""",
 },
"""""
<p>Encoding format affects not only efficiency of the application, but also, what is more important, the architecture of the application which are using them.</p>
<p>In particular, many services require support for incremental deployment of a new version. So new version will be deployed only to a few nodes at one time, not to all nodes. Incremental deployment allows to release new versions of services without forced system inactivity (thereby encouraging frequent small releases rather than rarely performed large ones) and reduce deployment risk (through detection and rollback failed releases before they affect a large number of users). It is extremely beneficial for development — simplicity changes of the application.</p>
<p>In the case of incremental deployment, it is good to allow the possibility to have different versions of the application at the different nodes. Therefore, it is important to encode all DTO with backward compatibility support (new version of appication could read 'old' data objects) and direct compatibility (old could read new).</p>
<p>There are several encoding formats:</p>
<ul>
<li>Language-specific coding formats are limited to this language and often cannot provide the reverse and direct compatibility.</li>
<li>Text formats like JSON, XML and CSV are common, and their compatibility depends on how they are used. They also have optional additional schemas. In these formats, data types are sometimes quite vague, so it's required to work carefully with entities like numbers and binary lines.</li>
<li>Binary schema-based formats such as Thrift, Protocol Buffers and Avro, allow you to perform compressed and efficient coding with clearly certain semantics of backward and forward compatibility. Their schemes can be useful for documenting and generating code in programming languages with static typing. However, they have a drawback: the data needs to be decoded so that people can read it.</li>
</ul>
<p>There are several modes of data flow movement, where a data encoding format plays an important role:</p>
<ul>
<li>databases where the writing process encodes the data and the reading process from it — decodes;</li>
<li>RPC and REST APIs in which the client encodes a request, the server decodes the request and encodes a response, and finally, the client decodes the response;</li>
<li>asynchronous messaging (using message brokers or actors), where nodes communicate by sending each other messages: encoded by sender and decoded by receiver.</li>
</ul>
<p>Thanks.</p>

"""""
),
            ["""2018-09-07-Partitioning"""] = (new Dictionary<string, string> { ["path"]="High-loaded-applications",["""title"""] =
"""""
 Partitioning
""""",
["""date"""] =
"""""
 2018-09-07
""""",
["""tags"""] =
"""""
 high-load
""""",
["""categories"""] =
"""""
 learning
""""",
 },
"""""
<p>Partitioning is needed when there is too much data to save it at one physical machine.</p>
<p>The goal of partitioning is sharing load between servers and to avoid bottlenecks. It is required to select approproate partitioning scheme and section rebalance during adding or deleting nodes from the cluster.</p>
<p>There are two main approaches in doing partitioning:</p>
<ul>
<li>Partitioning by key value range, where keys are sorted and the partition contains all keys from the certain minimum to the certain maximum. The advantage of the sorting is the ability to perform efficient range queries, but there is to create hot spots if the application accesses to the keys located close frequently. This approach usually follows dynamic rebalancing partitioning using splitting the range in two sub-bands in the case when the section's getting too big.</li>
<li>Hash partitioning, where the hash function is calculated for each key and each partition has a specific range of hashes. This method breaks the order of the keys, making the queries range inefficient, but allows to distribute the load more evenly.</li>
<li>Hash partitioning often creates a fixed number of partitions in advance, several for each node. Entire partitions are often moved between nodes when any node is added or removed. In this case dynamic partitioning is also used sometimes.</li>
</ul>
<p>Hybrid approaches are also possible, e.g. with a composite key: using one part of the key to identify the partition and the other part to determine the sort order.</p>
<p>There is also connection between partitioning and secondary indexes. Secondary indexes should be also partitioned and there are two methods to do that:</p>
<ul>
<li>Index partitioning by documents (local indexes). Secondary indexes are stored in the same partition with the primary key and value. This means that a write operation only needs to update one partition, but reading a secondary index requires fragmented reading across all partitions.</li>
<li>Term-based index partitioning (global indexes), in which secondary indexes are partitioned separately, using indexed values. An element of this secondary index can include records from all primary key partitions. It is required to update multiple partitions of the secondary index during recording a document, but it is possible to read the result from a single partition.</li>
</ul>
<p>There are also different methods for routing queries to the corresponding section, starting with a simple, tailored to the section of the load balancer to complex parallel mechanisms for querying.</p>
<p>All partitions intentionally operate almost independently - this allows to scale a partitioned database across multiple machines.</p>
<p>Thanks.</p>

"""""
),
            ["""2018-09-15-Storage-systems"""] = (new Dictionary<string, string> { ["path"]="High-loaded-applications",["""title"""] =
"""""
 Storage systems
""""",
["""date"""] =
"""""
 2018-09-15
""""",
["""tags"""] =
"""""
 high-load
""""",
["""categories"""] =
"""""
 learning
""""",
 },
"""""
<p>Storage systems are divided into two broad categories:</p>
<ul>
<li>optimized for transaction processing (OLTP)</li>
<li>optimized for analytics (OLAP)</li>
</ul>
<p>There are big differences between access approaches in these scenarios.</p>
<ul>
<li>OLTP systems are usually aimed to working with end users. It means that there is huge potential number of requests to this system from an application. Typically only a small amount of rows in each request is queried to cope with such a load. Applications request records using a specific key, so the storage system is able to use the index to search for specific data. The bottleneck is usually the time which is required to find data at the disk.</li>
<li>OLAP systems are less well known, because they are primarily used by business analysts rather than end users. OLAP handles a much smaller number of requests, than OLTP-systems, but all requests are usually very resource-intensive and require checking millions of records in a short time. The bottleneck here is usually disk throughput (not the time to find required data). Columnar oriented databases are quite popular choice for this kind of tasks.</li>
</ul>
<p>There are two ways of saving data in OLTP:</p>
<ul>
<li>Journaled approach that allows only appending data to files and deleting outdated files rather than updating recorded files. E.g. Bitcask, SS tables, LSM trees, LevelDB, HBase, Lucene and others.</li>
<li>In-place upgrade approach in which the disk is treated as a set pages of a specified size that can be overwritten. Largest representative of this philosophy is B-trees which are used in almost all popular relational and non-relational databases.</li>
</ul>
<p>Journaling storage systems is a relatively recent invention. Their main idea is in systematic transforming of inconsistent writing to disk into sequential writing, which provides higher throughput ability to record due to performance characteristics of hard drives.</p>
<p>Also there are some storage systems which store all data in RAM.</p>
<p>As for OLAP systems, indexes are not playing big role for them as it is needed to look through the big amount of data. The most important is saving data in compact way at the disk, so the volume of data, which will be read from the disk, will be small. Column-oriented databases help to solve this kind of problems.</p>
<p>Thanks.</p>

"""""
),
            ["""2023-10-03-Overview"""] = (new Dictionary<string, string> { ["path"]="Investing",["""title"""] =
"""""
 Overview
""""",
["""date"""] =
"""""
 2023-10-03
""""",
["""categories"""] =
"""""
 investing
""""",
["""tags"""] =
"""""
 stocks overview chatgpt
""""",
 },
"""""
<h1 id="getting-started-with-investing-an-overview">Getting Started with Investing: An Overview</h1>
<p>Investing in the stock market can be risky, and there's no guarantee of making money. However, think of it like a game of skill, similar to poker. In this game, the best players often come out on top by making smart choices.</p>
<h2 id="a-quick-look-at-choosing-stocks">A Quick Look at Choosing Stocks</h2>
<p>When you're beginning to invest, it's a good idea to start with companies you're familiar with.</p>
<p>Before you buy stocks in a particular company, try to answer these questions:</p>
<ul>
<li>What makes this company special compared to others?</li>
<li>Are the stocks affordable or high-priced?</li>
<li>Does the company have a well-known brand or reputation (good or bad)?</li>
</ul>
<p>By considering these factors, you'll feel more confident in selecting stocks that suit your preferences.</p>
<h2 id="examining-ratios">Examining Ratios</h2>
<p>When it comes to choosing the right stocks, there are many ratios and indicators to consider. However, two primary ratios are commonly checked to answer the question, &quot;Is the price I'm paying for a stock reasonable compared to another stock?&quot;:</p>
<ul>
<li>Price/Earnings (P/E) Ratio (lower is better, under 25 is good)</li>
<li>Price/Sales (P/S) Ratio (lower is better, under 2.0 is good)</li>
</ul>
<p>These ratios provide valuable insights into a stock's value.</p>
<h2 id="technical-analysis-predicting-short-term-price-trends">Technical Analysis: Predicting Short-Term Price Trends</h2>
<p>Technical analysis focuses solely on historical price and volume data to predict short-term price movements in the stock market. Traders look for recurring patterns, like head and shoulders or double tops, in price charts to make predictions. This approach is ideal for short-term trading and requires continuous learning and risk management. Moving averages, along with various indicators, play a crucial role in technical analysis.</p>
<h2 id="financial-tools">Financial Tools</h2>
<ul>
<li><a href="https://finance.yahoo.com">Yahoo Finance</a> provides real-time stock quotes, financial news, and portfolio tracking.</li>
<li><a href="https://investing.com">Investing.com</a> offers real-time financial data, news, and customizable charts for global markets.</li>
<li><a href="https://finviz.com">Finviz</a> is known for its powerful stock screener tool, allowing users to filter stocks based on various criteria.</li>
<li><a href="https://marketwatch.com">MarketWatch's mutual fund comparison</a> tool helps investors evaluate and compare different mutual funds.</li>
<li><a href="https://utifm.com">UTI Mutual Fund's</a> website provides information on their mutual fund offerings in the Indian market.</li>
</ul>

"""""
),
            ["""2023-10-07-Investment-instruments"""] = (new Dictionary<string, string> { ["path"]="Investing",["""title"""] =
"""""
 Investment instruments
""""",
["""date"""] =
"""""
 2023-10-07
""""",
["""categories"""] =
"""""
 investing
""""",
["""tags"""] =
"""""
 stocks overview portfolio chatgpt
""""",
 },
"""""
<h1 id="investment-instruments">Investment instruments</h1>
<p><img src="./images/investment-instruments.png" alt="Investment instruments" /></p>
<h2 id="cash">Cash</h2>
<p>Cash is often considered one of the safest investment options because it is highly liquid and not subject to market fluctuations. It's not affected by stock market volatility or economic downturns. This makes it a low-risk option, as the value of your cash holdings is relatively stable.</p>
<p>However, the trade-off for this safety is that cash typically provides relatively low returns compared to other investment options. When you hold your money in cash, whether in a savings account or as physical currency, it doesn't generate much income on its own. In most cases, the interest or return you earn on cash is lower than what you could potentially earn by investing in other assets like stocks, bonds, or real estate.</p>
<h2 id="bonds">Bonds</h2>
<p>Bonds are often considered a moderate-risk investment option. When you invest in bonds, you're essentially lending money to a government or corporation in exchange for periodic interest payments and the return of your principal amount at maturity. The risk associated with bonds comes from the potential for the issuer to default on these payments. However, compared to stocks or other higher-risk assets, bonds are generally less volatile and have a more predictable income stream. This makes them an option with average risk.</p>
<p>Bonds typically provide investors with a relatively stable and predictable source of income through periodic interest payments (coupon payments). The return on bonds is often considered average because it falls between the low returns of cash and the potentially higher returns of stocks. The exact return on a bond depends on factors such as its coupon rate, maturity date, and prevailing interest rates in the market. Generally, investors can expect to earn a return that is modestly higher than what they might earn from holding cash.</p>
<h2 id="property-or-real-estate">Property or Real Estate</h2>
<p>Real estate investments can carry a higher level of risk compared to some other investment options. This risk can come from various factors, including market volatility, economic conditions, location-specific risks, and property management challenges. Real estate markets can experience fluctuations, and property values may not always appreciate as expected. Additionally, property investments may require ongoing maintenance and management, adding to the potential risks.</p>
<p>Despite the higher risk, real estate has the potential to offer better returns compared to lower-risk assets like bonds or cash. Real estate investors can generate income through rental payments, and property values can appreciate over time, providing capital gains. In some cases, real estate investments can outperform traditional assets over the long term, especially in growing or high-demand markets.</p>
<h2 id="shares-or-equity-stocks">Shares or Equity Stocks</h2>
<p>Investing in shares or equity stocks is often associated with much higher risk compared to other investment options. Several factors contribute to this increased risk, including market volatility, economic conditions, and company-specific factors. Stock prices can fluctuate significantly in response to market feeling, news, and events, leading to potential short-term losses. Additionally, individual companies can face financial challenges or even go bankrupt, resulting in a complete loss of investment in that stock.</p>
<p>The trade-off for the higher risk associated with stocks is the potential for much better returns. Historically, stocks have delivered some of the highest long-term returns among various asset classes. Over time, stock markets tend to appreciate, and investors can benefit from capital gains as stock prices increase. Furthermore, many companies distribute dividends to shareholders, providing an additional source of income. Over the long term, the combination of price appreciation and dividends can result in substantial returns.</p>
<h2 id="alternatives-or-cryptocurrencies">Alternatives or Cryptocurrencies</h2>
<p>Investing in alternatives, particularly cryptocurrencies like Bitcoin and Ethereum, is associated with very high levels of risk. This heightened risk is due to several factors. Cryptocurrencies are highly volatile, and their prices can experience extreme fluctuations over short periods. Regulatory uncertainty in many countries adds to the risk, as governments may impose restrictions or regulations on the use and trading of cryptocurrencies. Additionally, the lack of a centralized authority means there's no recourse for investors in case of fraud, hacking, or loss of access to digital wallets.</p>
<p>The attraction of cryptocurrencies lies in their potential for very high returns. Historically, some cryptocurrencies have witnessed astonishing price growth, leading to substantial profits for early investors. The decentralized nature of cryptocurrencies and their limited supply contribute to the perception of scarcity, which can drive up prices when demand surges. Investors who entered the cryptocurrency market during its early stages have seen significant returns on their investments.</p>
<h1 id="types-of-portfolio">Types of portfolio</h1>
<h2 id="income-portfolio">Income Portfolio</h2>
<p>An income portfolio is tailored for investors seeking a balance between steady returns and minimal risk. It primarily consists of dividend-paying stocks and coupon-yielding bonds, making it suitable for those with a short- to midrange investment horizon.</p>
<h3 id="key-characteristics">Key Characteristics</h3>
<ul>
<li><p>Asset Allocation: Income portfolios are typically composed of a significant allocation to bonds, often 100% bonds, or a mix of stocks and bonds, such as 20% stocks and 80% bonds or 30% stocks and 70% bonds.</p>
</li>
<li><p>Risk Tolerance: Investors comfortable with minimal risk find income portfolios appealing. This approach prioritizes stability and income generation.</p>
</li>
<li><p>Tax Considerations: It's important to note that depending on the specific account, the dividends and returns from an income portfolio can be taxable, which is a factor to consider when assessing the overall return.</p>
</li>
</ul>
<h2 id="balanced-portfolio">Balanced Portfolio</h2>
<p>A balanced portfolio strikes a middle ground between risk and potential return by investing in both stocks and bonds. This approach is suitable for investors who can tolerate short-term price fluctuations, seek moderate growth, and have a mid- to long-range investment horizon.</p>
<h3 id="key-characteristics-1">Key Characteristics</h3>
<ul>
<li><p>Asset Allocation: Balanced portfolios typically consist of a combination of stocks and bonds, with various allocation ratios. Common allocations include 40% stocks and 60% bonds, 50% stocks and 50% bonds, or 60% stocks and 40% bonds.</p>
</li>
<li><p>Risk Tolerance: Investors seeking a balanced portfolio are comfortable with some degree of risk and are willing to weather short-term market volatility in exchange for the potential for moderate growth over time.</p>
</li>
</ul>
<h2 id="growth-portfolio">Growth Portfolio</h2>
<p>A growth portfolio is designed for investors seeking significant long-term capital appreciation. It primarily consists of stocks expected to appreciate over time, but it also comes with the potential for substantial short-term price fluctuations. Investors in a growth portfolio typically have a high risk tolerance and a long-term investment horizon, with generating current income as a secondary objective.</p>
<h3 id="key-characteristics-2">Key Characteristics</h3>
<ul>
<li><p>Asset Allocation: Growth portfolios are heavily weighted toward stocks, with minimal exposure to bonds. Common allocations include 70% stocks and 30% bonds, 80% stocks and 20% bonds, or even 100% stocks.</p>
</li>
<li><p>Risk Tolerance: Investors in a growth portfolio are comfortable with high levels of risk and are willing to withstand significant short-term market volatility. They prioritize long-term wealth accumulation over current income.</p>
</li>
</ul>
<h2 id="references">References</h2>
<p><a href="https://investor.vanguard.com/investor-resources-education/education/model-portfolio-allocation">Vanguard portfolio allocation models</a></p>

"""""
),
            ["""2023-10-22-Stock-quote"""] = (new Dictionary<string, string> { ["path"]="Investing",["""title"""] =
"""""
 Stock quote
""""",
["""date"""] =
"""""
 2023-10-22
""""",
["""categories"""] =
"""""
 investing
""""",
["""tags"""] =
"""""
 stocks overview chatgpt
""""",
 },
"""""
<h1 id="stock-quote">Stock quote</h1>
<p><img src="./images/dH8SRAsgP9.png" alt="microsoft" /></p>
<p><a href="https://finance.yahoo.com/quote/MSFT?p=MSFT&amp;.tsrc=fin-srch">Source</a></p>
<h2 id="previous-close">Previous close</h2>
<p>It refers to the price at which a stock traded at the end of the previous trading day. This figure is a crucial reference point for investors, helping them assess how the stock has performed in relation to its closing price from the previous day.</p>
<h2 id="open">Open</h2>
<p>Open price refers to the initial price at which a stock starts trading at the beginning of the trading day. This figure is a foundational reference point for the day's trading activities and influences investor perceptions of the stock's performance.</p>
<h2 id="bid">Bid</h2>
<p>Bid price represents the highest price that potential buyers are willing to offer for a specific stock. This figure provides valuable insights into market sentiment and the current demand for the stock. When you see a bid value like &quot;326.84 x 800,&quot; it's meant to provide two essential details. The &quot;326.84&quot; represents the highest price potential buyers are willing to pay for the stock, and &quot;x 800&quot; indicates that there are 800 shares or contracts available at this price. This format efficiently conveys both the price and quantity of the bid.</p>
<h2 id="ask">Ask</h2>
<p>It signifies the absolute lowest price at which a seller is open to relinquishing their stock. Essentially, the ask is the gateway for potential buyers who are eyeing shares of a specific company. This figure is a pivotal element within a stock quote, offering critical insights into the market dynamics. When you encounter a value like &quot;327.05 x 1400,&quot; it indicates that there are 1,400 shares available for sale, with each share priced at 327.05. This format efficiently conveys both the price and quantity of the ask.</p>
<h2 id="days-range">Day's range</h2>
<p>The &quot;day's range&quot; signifies the price range between the lowest and highest points at which the stock traded during a single trading day. This data is of great significance to investors as it unveils the stock's intraday price fluctuations, providing essential insights for decision-making regarding buying or selling.</p>
<h2 id="week-range">52 week range</h2>
<p>The &quot;52-week range&quot; signifies the price range between the lowest and highest values at which the stock has been traded over the past 52 weeks. This data is of utmost importance to investors, offering a comprehensive view of the stock's performance and trends over a more extended period, aiding in informed decision-making.</p>
<h2 id="volume">Volume</h2>
<p>&quot;Volume&quot; signifies the immediate number of transactions occurring for a specific stock. This metric is of paramount importance as it serves as a direct indicator of market interest and the intensity of trading activity centered on that stock, providing crucial insights for investors.</p>
<h2 id="avg.volume">Avg. volume</h2>
<p>&quot;Average volume&quot; signifies the standard number of daily transactions for a specific stock. This metric is of great importance as it provides investors with a clear understanding of the typical level of trading activity associated with that stock, aiding them in making informed decisions.</p>
<h2 id="market-cup">Market cup</h2>
<p>&quot;Market capitalization,&quot; or market cap, signifies the size of a company as perceived by the stock market. This metric is of utmost importance, as it directly reflects the company's total value in the eyes of investors, providing essential insights for decision-making in the world of finance.</p>
<h2 id="beta-5y-monthly">Beta (5Y Monthly)</h2>
<p>&quot;Beta (5Y monthly)&quot; stands as a pivotal measure of a stock's risk:</p>
<ul>
<li>A beta value of 1.0 signifies that the stock moves in lockstep with the broader market, mirroring its price movements.</li>
<li>If the beta exceeds 1.0, it indicates that the stock swings more dramatically in price than the market, underscoring its higher volatility.</li>
<li>Conversely, a beta below 1.0 signals that the stock experiences less turbulent price movements than the market.</li>
</ul>
<p>Understanding beta provides investors with critical insights into a stock's risk profile and how it behaves relative to the broader market.</p>
<h2 id="pe-ratio-ttm">PE Ratio (TTM)</h2>
<p>The PE ratio (TTM) emerges as a pivotal financial metric. Representing the Price to Earnings ratio over the trailing twelve months, it delves into the correlation between a company's stock price and its earnings per share during the past year. This ratio serves as a potent gauge, helping investors determine whether a stock is perceived as overvalued or undervalued by the market. Understanding the PE ratio (TTM) is essential for assessing a company's valuation and making informed investment decisions.</p>
<h2 id="eps-ttm">EPS (TTM)</h2>
<p>EPS (TTM) takes center stage as a vital financial metric. Representing Earnings Per Share on a trailing twelve-month basis, it unveils the earnings portion allocated to each outstanding share of common stock over the past year. For investors, this metric is of utmost importance, providing valuable insights into a company's profitability on a per-share basis. Understanding EPS (TTM) is essential for evaluating a company's financial performance and making informed investment decisions.</p>
<h2 id="earning-date">Earning Date</h2>
<p>The earnings date is a significant event. It designates the scheduled reporting date for a company's financial results, unveiling essential insights into how the company is performing. Investors eagerly await this event to gauge the company's revenue, profit, and various financial metrics, making it a crucial moment in the world of finance.</p>
<h2 id="forward-divident-yield">Forward Divident &amp; Yield</h2>
<p>&quot;Forward dividend &amp; yield&quot; stands as a pivotal metric. It uncovers how much a company pays per share as a dividend, providing valuable insights into the company's dividend policy and what shareholders can anticipate in terms of dividend income. Understanding forward dividend &amp; yield is essential for investors looking to assess potential income from their investments.</p>
<h2 id="ex-divident-date">Ex-Divident Date</h2>
<p>&quot;Ex-Dividend Date&quot; denotes when the company will distribute the next dividend to eligible shareholders. Understanding this date is essential for investors looking to manage their dividend income and make informed investment decisions.</p>
<h2 id="y-target-est">1y Target Est</h2>
<p>&quot;1y Target Est&quot; is a pivotal metric. It abbreviates the one-year target estimate, encapsulating the expected price of a stock one year from now as projected by financial analysts. This metric provides investors with valuable insights into the market's collective forecast of the stock's future worth, aiding them in making informed investment decisions.</p>

"""""
),
            ["""2023-10-30-Stock-diversification"""] = (new Dictionary<string, string> { ["path"]="Investing",["""title"""] =
"""""
 Stock diversification
""""",
["""date"""] =
"""""
 2023-10-22
""""",
["""categories"""] =
"""""
 investing
""""",
["""tags"""] =
"""""
 stocks portfolio diversification chatgpt
""""",
 },
"""""
<h1 id="stock-diversification">Stock diversification</h1>
<p>Stock diversification options involve strategies to spread investments across various stocks, reducing risk and potentially boosting returns.</p>
<h2 id="company-size-diversification">Company Size Diversification</h2>
<p>Balance investments among large-cap, mid-cap, and small-cap companies to manage size-related risks. It's calculated by multiplying the current stock price by the total number of outstanding shares. This straightforward equation offers valuable insights into a company's scale and standing in the financial markets.</p>
<p>Companies are typically categorized into three general cap ranges based on their market cap values:</p>
<ul>
<li><p>Large Cap ($10 Billion+): These are the industry giants, with market capitalizations exceeding $10 billion. Large-cap companies are often well-established, financially robust, and widely recognized. They tend to offer stability and lower risk, making them appealing to conservative investors.</p>
</li>
<li><p>Mid Cap ($2-10 Billion): Falling in the middle of the spectrum, mid-cap companies have market caps ranging from $2 billion to $10 billion. They offer a balance between growth potential and stability. Investors interested in moderate risk and return profiles often consider mid-cap stocks for diversification.</p>
</li>
<li><p>Small Cap (&lt;$2 Billion): Small-cap companies, with market caps under $2 billion, are often characterized by their growth prospects and higher volatility. Investing in small caps can be riskier but offers the potential for substantial returns. They are typically considered by investors seeking a more aggressive investment approach.</p>
</li>
</ul>
<h2 id="stock-diversification-by-type">Stock diversification by Type</h2>
<p>Diversification means spreading your investments across different types of stocks, which can help manage risk and boost returns. There are three stock types in the context of a diversification: growth stocks, income stocks, and value stocks.</p>
<h3 id="growth-stocks">Growth stocks</h3>
<p>Growth stocks stand out as a distinctive category. These stocks are prized for their dynamic attributes, attracting investors seeking robust returns. There are characteristics of growth stocks:</p>
<ul>
<li><p><strong>High-Fliers That Keep Climbing</strong>: Growth stocks are often hailed as &quot;high-fliers&quot; because of their consistent upward trajectory in stock prices. These companies are firmly on a path of substantial expansion.</p>
</li>
<li><p><strong>Earnings Growing Faster Than Industry and Market</strong>: The standout feature of growth stocks is their earnings growth, which not only outpaces industry averages but also outshines the broader market. This exceptional performance is primarily driven by their ability to generate robust revenue and cash flow. And it means:</p>
<ul>
<li><p><strong>Robust Revenue and/or Cash Flow</strong>: Growth stocks are known for their capacity to generate substantial revenue and cash flow. This financial strength empowers them to make strategic investments in further expansion and innovation.</p>
</li>
<li><p><strong>Higher Price-to-Earnings (P/E) Ratio</strong>: One pivotal metric that sets growth stocks apart is their elevated Price-to-Earnings (P/E) ratio. This ratio reflects the market's unwavering confidence in their future earnings potential. Investors are willing to pay a premium for these stocks, fueled by their anticipation of substantial growth.</p>
</li>
<li><p><strong>Higher Price-to-Sales Ratio</strong>: Another indicator of their growth potential is the elevated Price-to-Sales (P/S) ratio. This metric underscores their ability to convert revenue into tangible shareholder value. A higher P/S ratio signals investors' willingness to invest more for each dollar of sales.</p>
</li>
</ul>
</li>
<li><p><strong>No Dividends, Focus on Reinvestment</strong>: Distinguishing them from other stocks, growth stocks typically refrain from offering dividends. Instead, they channel their earnings back into the business. This strategic approach is aimed at expediting their growth and expanding their market footprint.</p>
</li>
</ul>
<p>In summary, growth stocks are all about harnessing the momentum of rapidly expanding companies. Their unwavering ascent, remarkable earnings growth, and commitment to reinvestment make them an enticing option for investors seeking superior returns. Embrace the allure of growth stocks in your investment portfolio and ride the wave of prosperity.</p>
<h3 id="income-stocks">Income stocks</h3>
<p>When it comes to crafting a well-rounded investment portfolio, income stocks stand out as a compelling option. These stocks are distinguished by their consistent payment of dividends and the dual pursuit of income and growth. Let's explore the world of income stocks in greater detail:</p>
<h4 id="the-income-aspect">The Income Aspect</h4>
<p>Income stocks are characterized by their unwavering commitment to paying dividends. Unlike their more growth-oriented counterparts, income stocks regularly distribute a portion of their earnings to shareholders. Picture these dividends as reliable, clockwork payments that investors can count on, typically arriving every quarter. This predictable income stream appeals to a wide range of investors, from those relying on investments to cover living expenses to those who simply appreciate the stability of returns.</p>
<h4 id="the-quest-for-growth">The Quest for Growth</h4>
<p>Income stock investors are not content with income alone; they also seek avenues for growth within their investment portfolios. This quest for growth takes two main forms:</p>
<ul>
<li><p><strong>Price Appreciation</strong>: While income stocks might not offer the explosive price surges seen with high-growth stocks, they have a track record of delivering solid returns through gradual price appreciation. Over time, the share prices of income stocks tend to rise, contributing to the overall profitability of the investment.</p>
</li>
<li><p><strong>Dividend Growth</strong>: One distinctive feature of income stocks is their potential for increasing dividends. As the companies they represent thrive and generate higher profits, they frequently reward their shareholders with larger dividend payouts. This means that the income you receive from these stocks can grow over time, serving as a strategic countermeasure against the eroding effects of inflation and potentially amplifying your real returns.</p>
</li>
</ul>
<h4 id="a-real-world-illustration">A Real-World Illustration</h4>
<p>Imagine a well-established utility company that has maintained its status as an income stock for years. This company has consistently distributed dividends to its shareholders, providing them not only with a steady income source but also delivering increases in dividends as the company's profits have expanded. Furthermore, the company's share price has exhibited stable, albeit gradual, growth. This dual benefit of income and capital appreciation exemplifies the power of income stocks in an investment portfolio.</p>
<h4 id="summary">Summary</h4>
<p>By incorporating income stocks into your investment strategy, you can secure a dependable income source while also tapping into the potential for both price appreciation and expanding dividends. This choice is strategic and well-suited for investors who value stability and long-term financial growth.</p>
<h3 id="value-stocks">Value stocks</h3>
<p>Value stocks have a unique allure, characterized by several defining features:</p>
<ul>
<li><p><strong>Lower Price Relative to Fundamentals</strong>: Value stocks are like hidden treasures in the stock market. They trade at a lower price than their actual intrinsic value, effectively presenting investors with a discount. It's akin to walking into a store and finding your favorite product on a clearance sale.</p>
</li>
<li><p><strong>'Bargain Hunting'</strong>: Investing in value stocks is akin to going on a bargain hunt in the market. It's the thrill of discovering companies that are temporarily undervalued. This undervaluation can occur due to various factors, such as market sentiment, economic conditions, or even industry trends. It's an adventure for investors with an eye for opportunity.</p>
</li>
<li><p><strong>Great Companies at Discounted Rates</strong>: What truly makes value stocks shine is the opportunity to own shares in outstanding companies at discounted rates. These companies often boast a stellar track record, robust financials, and a history of resilience. Investing in them is like acquiring a premium product at a fraction of the price.</p>
</li>
<li><p><strong>Higher Long-Term Gain</strong>: Value stocks are the unsung heroes of long-term investing. Patient investors who choose to hold onto these stocks may witness significant gains over time. The market tends to correct the undervaluation, leading to substantial returns. It's an investment that's like a fine wine, getting better with age.</p>
</li>
<li><p><strong>Greater Risk</strong>: However, this potential for higher returns doesn't come without its share of risks. Value stocks can remain undervalued for an extended period, and there's no guarantee that the market will swiftly correct itself. Investors need nerves of steel to weather the ups and downs.</p>
</li>
<li><p><strong>May Just Be a Dog and Never Recover</strong>: It's crucial to recognize that not every value stock becomes a success story. Some may remain underperformers, never truly recovering from their undervalued status. For investors, it's a reminder to diversify and manage risks wisely.</p>
</li>
</ul>
<h2 id="stock-diversification-by-sector">Stock diversification by Sector</h2>
<h3 id="the-essence-of-stock-sectors">The Essence of Stock Sectors</h3>
<p>Stock sectors act like the chapters in a complex economic novel. They provide a structured way to group companies with similar business interests. These sectors simplify the intricate world of the stock market, making it more accessible to investors.</p>
<h3 id="the-economys-building-blocks">The Economy's Building Blocks</h3>
<p>Stock sectors are not just arbitrary categories; they are the building blocks of the economy. They represent the different facets of economic activity. For example, the technology sector is all about innovation and tech-related products and services, while the healthcare sector focuses on pharmaceuticals and healthcare services. Understanding these core business activities helps investors navigate the market with confidence.</p>
<h3 id="the-power-of-ratios">The Power of Ratios</h3>
<p>Financial ratios, such as the price-to-earnings (P/E) ratio and the debt-to-equity ratio, are like the compass for investors. They guide you in assessing a company's financial health and performance. When comparing companies within the same sector, these ratios provide a level playing field for evaluation. A lower P/E ratio, for instance, might indicate that a stock is undervalued, offering a potential investment opportunity.</p>

"""""
),
            ["""2023-11-06-Individual-Stocks"""] = (new Dictionary<string, string> { ["path"]="Investing",["""title"""] =
"""""
 Individual stocks
""""",
["""date"""] =
"""""
 2023-10-22
""""",
["""categories"""] =
"""""
 investing
""""",
["""tags"""] =
"""""
 stocks individual chatgpt
""""",
 },
"""""
<h1 id="individual-stocks">Individual stocks</h1>
<p>Investing in individual stocks involves purchasing shares of specific companies, effectively becoming a partial owner of those companies. Unlike other investment options like mutual funds or exchange-traded funds (ETFs), where you own a basket of various stocks, individual stock investment is more focused. When you invest in individual stocks, you're betting on the success and growth of a particular company. This type of investment grants you the autonomy to choose which companies you want to invest in and allows you to directly benefit from their performance in the stock market.</p>
<p>Let's explore the pros and cons of individual stock investments:</p>
<p>Advantages:</p>
<ul>
<li><p><strong>Control</strong>: Individual stocks offer more control. You can decide when to buy and sell, allowing you to adapt to market conditions as needed.</p>
</li>
<li><p><strong>Tax Efficiency</strong>: They can be tax-efficient since you have the freedom to time your sales for tax optimization.</p>
</li>
<li><p><strong>Targeted Approach</strong>: You can take a precise approach by selecting companies that align with your goals and values.</p>
</li>
</ul>
<p>Drawbacks:</p>
<ul>
<li><p><strong>Less Diversification</strong>: Individual stocks are inherently less diversified, which means your portfolio's performance is closely tied to individual company performance.</p>
</li>
<li><p><strong>Hands-On Approach</strong>: Managing individual stocks requires a hands-on approach. Extensive research and continuous monitoring are essential.</p>
</li>
</ul>
<h2 id="diversification">Diversification</h2>
<p>To diversify your portfolio when investing in individual stocks, consider holding 20-30 different stocks. However, it's crucial to diversify thoughtfully:</p>
<p>Achieve greater diversification by considering:</p>
<ul>
<li><p><strong>Industry</strong>: Invest in various industries to reduce sector-specific risks.</p>
</li>
<li><p><strong>Size</strong>: Diversify by company size, including large-cap, mid-cap, and small-cap stocks.</p>
</li>
<li><p><strong>Style</strong>: Explore different investment styles, such as growth, value, or income-focused companies, to create a well-rounded portfolio.</p>
</li>
</ul>
<p>Find out <a href="./2023-10-30-Stock-diversification">more information about diversification</a>.</p>
<h1 id="finding-the-right-balance-how-many-individual-stocks-should-you-own">Finding the Right Balance: How Many Individual Stocks Should You Own?</h1>
<p>One of the critical decisions investors face is determining the number of individual stocks to include in their portfolio. Striking the right balance is crucial to achieving optimal diversification, managing risk, and maximizing potential rewards. In this part, we will explore the pitfalls of having too few or too many individual stocks and delve into strategies to find the sweet spot for a well-rounded portfolio.</p>
<h2 id="the-dangers-of-too-few-stocks">The Dangers of Too Few Stocks</h2>
<ol>
<li>Lack of Diversification:</li>
</ol>
<p>When you hold too few stocks, your portfolio becomes vulnerable to the fluctuations of a particular company or industry. A single negative event can have a significant impact on your overall investment.</p>
<ol start="2">
<li>Increased Downside Risk:</li>
</ol>
<p>Limited diversification amplifies the downside risk. A poor-performing stock can drag down the entire portfolio, leading to substantial losses.</p>
<h2 id="the-pitfalls-of-too-many-stocks">The Pitfalls of Too Many Stocks</h2>
<ol>
<li>Over Diversification:</li>
</ol>
<p>While diversification is essential, overdoing it can dilute the impact of your successful investments. It might lead to performance that closely resembles the broader market, hindering the potential for outperformance.</p>
<ol start="2">
<li>Tracking Challenges:</li>
</ol>
<p>Managing a large number of individual stocks can become overwhelming. Tracking each stock's performance, news, and market trends can be time-consuming and may lead to missed opportunities or delayed reactions.</p>
<ol start="3">
<li>Reduced Potential Reward:</li>
</ol>
<p>With an excessively large portfolio, the potential for substantial gains from individual outperformers diminishes. Profits from winners may be diluted by the overall size of the portfolio.</p>
<h2 id="striking-the-right-balance">Striking the Right Balance</h2>
<ol>
<li>The Traditional Approach:</li>
</ol>
<p>Many experts suggest holding between 20 to 30 individual stocks. This range provides a reasonable balance between diversification and manageability.</p>
<ol start="2">
<li>Optimal Diversification Range:</li>
</ol>
<p>Studies indicate that a portfolio containing 12 to 18 stocks can provide about 90% of the maximum benefits of diversification. This range allows for risk mitigation without sacrificing potential returns.</p>
<ol start="3">
<li>Position Sizing:</li>
</ol>
<p>To further manage risk, consider limiting the exposure to each stock. Some recommend not holding more than 5% of your total capital in a single stock, ensuring that no single investment dominates the portfolio.</p>
<ul>
<li><p>Example: With $10,000 invested, limit each stock position to $500 (5% of $10,000).</p>
</li>
<li><p>Alternatively, a more conservative approach is to limit each stock position to 2% of your total capital.</p>
</li>
<li><p>Example: With $10,000 invested, limit each stock position to $200 (2% of $10,000).</p>
</li>
</ul>
<ol start="4">
<li>Sector and Industry Diversification:</li>
</ol>
<p>Diversify your holdings across sectors and industries to reduce concentration risk. Consider a mix of stable sectors like healthcare, growth industries like technology, and traditional sectors like banking. It was mentioned earlier in this article.</p>
<ol start="5">
<li>Leveraging ETFs and Mutual Funds:</li>
</ol>
<p>For instant diversification, consider incorporating Exchange-Traded Funds (ETFs) or Mutual Funds into your portfolio. These funds provide exposure to a broad range of assets, reducing the risk associated with individual stock selection.</p>
<ol start="6">
<li>Core Holdings:</li>
</ol>
<p>Building a core portfolio with a few key holdings and adding individual stocks around it can provide stability while allowing for opportunistic investments.</p>
<h2 id="summary">Summary</h2>
<p>Finding the right number of individual stocks for your portfolio involves striking a delicate balance between diversification and manageability. Remember, the key is to align your investment strategy with your risk tolerance, financial goals, and time horizon for a successful and sustainable investment journey.</p>

"""""
),
            ["""2023-11-14-Mutual-Fund-or-EFT-Core"""] = (new Dictionary<string, string> { ["path"]="Investing",["""title"""] =
"""""
 Building a Solid Investment Foundation. The Core of Mutual Funds and ETFs
""""",
["""date"""] =
"""""
 2023-11-14
""""",
["""categories"""] =
"""""
 investing
""""",
["""tags"""] =
"""""
 mutual eft funds chatgpt
""""",
 },
"""""
<p>Investing can be a daunting task, but it doesn't have to be complicated. One strategy that many investors find effective is building a solid core portfolio using <a href="./2023-12-08-Mutual-Funds">mutual funds</a> or exchange-traded funds (ETFs). In this article, we'll explore the benefits of allocating 80% or more of your investment portfolio to core funds, specifically focusing on total stock market, S&amp;P 500, and international funds. Additionally, we'll delve into the advantages of complementing your core with individual stocks for those seeking extra returns, diversified holdings, and strategic tax planning.</p>
<h1 id="the-80-rule-core-mutual-funds">The 80% Rule: Core Mutual Funds</h1>
<h2 id="total-stock-market-funds">Total Stock Market Funds:</h2>
<p>Total stock market funds provide investors with exposure to the entire stock market, capturing a broad spectrum of companies, from large-cap to small-cap. This diversification helps mitigate risk by spreading investments across various sectors and industries. These funds are an excellent foundation for long-term growth, aligning with the principle of &quot;don't put all your eggs in one basket.&quot;</p>
<h2 id="sp-500-funds">S&amp;P 500 Funds:</h2>
<p>S&amp;P 500 funds track the performance of the 500 largest publicly traded companies in the U.S. These blue-chip stocks are known for stability and consistent growth over time. Investing in S&amp;P 500 funds allows you to participate in the overall health of the U.S. economy and benefit from the growth potential of leading companies.</p>
<h2 id="international-funds">International Funds:</h2>
<p>Diversification isn't limited to domestic markets. International funds broaden your investment horizon by including companies from around the world. This provides exposure to different economic cycles and can act as a hedge against downturns in specific regions. Including international funds in your core portfolio adds an extra layer of risk mitigation.</p>
<h1 id="beyond-the-core-adding-individual-stocks">Beyond the Core: Adding Individual Stocks</h1>
<p>While a robust core is crucial, there are compelling reasons to consider adding individual stocks to your portfolio.</p>
<h2 id="pulling-out-extra-returns">Pulling Out Extra Returns</h2>
<p>Individual stocks offer the potential for outsized returns compared to the broader market. Savvy investors can identify undervalued stocks or those with significant growth potential, leading to higher returns than what might be achieved through core funds alone.</p>
<h2 id="varied-holdings">Varied Holdings</h2>
<p>Adding individual stocks allows you to tailor your portfolio to your specific investment goals and beliefs. Whether you're interested in tech innovation, sustainable energy, or other niche sectors, individual stock selection gives you the freedom to shape your portfolio according to your preferences.</p>
<h2 id="tax-planning">Tax Planning</h2>
<p>Tax efficiency is a crucial consideration in any investment strategy. Individual stocks provide greater control over your capital gains and losses, allowing for strategic tax planning. Unlike mutual funds, which may distribute capital gains to all investors, holding individual stocks enables you to manage your tax liability more effectively.</p>
<h2 id="the-challenge-and-fun-of-stock-picking">The Challenge and Fun of Stock Picking</h2>
<p>Investing can be both challenging and enjoyable. While the core of your portfolio provides stability, the excitement of researching and selecting individual stocks adds an element of challenge and engagement. Remember, in the world of investing, sometimes &quot;boring&quot; wins in the long run.</p>
<h1 id="conclusion">Conclusion</h1>
<p>Building a successful investment portfolio doesn't have to be complex. By allocating a significant portion to core mutual funds or ETFs and strategically complementing them with individual stocks, investors can achieve a balanced approach that combines stability and growth potential. Remember, the key is to align your investment strategy with your financial goals and risk tolerance, creating a path to financial success that suits your unique needs.</p>

"""""
),
            ["""2023-12-08-Mutual-Funds"""] = (new Dictionary<string, string> { ["path"]="Investing",["""title"""] =
"""""
 Understanding Mutual Funds. A Simple Guide to Smart Investing
""""",
["""date"""] =
"""""
 2023-12-08
""""",
["""categories"""] =
"""""
 investing
""""",
["""tags"""] =
"""""
 mutual funds chatgpt
""""",
 },
"""""
<p>Investing can be a daunting task for many, but mutual funds offer a simple and effective way for individuals to participate in the financial markets. In this article, we'll explore the key aspects of mutual funds, breaking down complex concepts into straightforward ideas that anyone can grasp.</p>
<ol>
<li><p><strong>Pool of Investors: Sharing Risk and Reward</strong></p>
<p>Mutual funds operate by pooling money from a large number of investors, creating a collective investment vehicle. This pooling mechanism enables investors to share both risks and rewards associated with the financial markets. By diversifying across various assets, mutual funds help spread the risk, reducing the impact of poor performance in any single investment on the overall portfolio. This shared approach makes mutual funds an excellent option for those who may not have the time or expertise to manage their investments actively.</p>
</li>
<li><p><strong>Diversified Holdings: Sometimes Across Asset Classes</strong></p>
<p>One of the significant advantages of mutual funds is their ability to offer diversified holdings. This diversification involves spreading investments across different asset classes, such as stocks, bonds, and sometimes even real estate or commodities. By doing so, mutual funds aim to balance the portfolio, mitigating the impact of poor performance in one sector with positive returns in another. Diversification is a fundamental risk management strategy that can help investors navigate the unpredictable nature of financial markets.</p>
</li>
<li><p><strong>Professional Management: Active vs. Index Funds</strong></p>
<p>Mutual funds are managed by financial professionals who make investment decisions on behalf of the investors. There are two main types of mutual funds: actively managed and index funds.</p>
<ul>
<li><p><strong>Active Management:</strong> Fund managers actively buy and sell securities with the goal of outperforming the market. This approach involves in-depth research, market analysis, and decision-making based on the manager's expertise.</p>
</li>
<li><p><strong>Index Funds:</strong> These funds aim to replicate the performance of a specific market index, such as the S&amp;P 500. Index funds offer a passive investment strategy, as they do not involve constant buying and selling. Instead, they provide a low-cost way for investors to gain exposure to the broader market.</p>
</li>
</ul>
</li>
<li><p><strong>Liquidity: Easy to Buy and Sell</strong></p>
<p>Liquidity refers to how easily an investment can be bought or sold in the market without significantly affecting its price. Mutual funds are known for their high liquidity, allowing investors to buy or sell shares on any business day. This flexibility is crucial for investors who may need to access their money quickly or take advantage of new investment opportunities.</p>
</li>
</ol>
<h2 id="conclusion">Conclusion</h2>
<p>Mutual funds simplify the complexities of investing by offering a collective, diversified, professionally managed, and liquid approach to the financial markets. Whether you're a seasoned investor or just starting, understanding these fundamental aspects can empower you to make informed decisions and build a more secure financial future. Remember, while mutual funds offer many benefits, it's essential to assess your financial goals and risk tolerance before choosing the right funds for your investment portfolio.</p>

"""""
),
            ["""2023-12-11-Active-vs-Index-funds"""] = (new Dictionary<string, string> { ["path"]="Investing",["""title"""] =
"""""
 Demystifying Investment Choices. Active vs. Index Funds
""""",
["""date"""] =
"""""
 2023-12-11
""""",
["""categories"""] =
"""""
 investing
""""",
["""tags"""] =
"""""
 stocks funds chatgpt
""""",
 },
"""""
<h1 id="demystifying-investment-choices-active-vs.index-funds">Demystifying Investment Choices: Active vs. Index Funds</h1>
<p>When it comes to investing, one crucial decision investors face is whether to opt for active or index funds. Each approach has its own set of characteristics and considerations, and understanding the nuances can significantly impact your investment strategy.</p>
<h2 id="understanding-index-funds"><strong>Understanding Index Funds</strong></h2>
<p>An index fund is essentially a passive investment vehicle designed to replicate the performance of a specific market index, such as the S&amp;P 500. This means that instead of relying on a fund manager's stock-picking skills, the goal is to mirror the market's overall movements.</p>
<h3 id="advantages-of-index-funds"><strong>Advantages of Index Funds</strong></h3>
<h4 id="lower-cost">1. <strong>Lower Cost:</strong></h4>
<p>One of the primary benefits of index funds is their cost-effectiveness. With no need for active management decisions, fees are typically lower compared to actively managed funds. This cost efficiency translates to more of your returns staying in your pocket.</p>
<h4 id="potential-for-more-diversification">2. <strong>Potential for More Diversification:</strong></h4>
<p>Index funds often provide a broader level of diversification, capturing a wide range of stocks within a specific index. This diversification helps mitigate the impact of poor-performing individual stocks, fostering a more stable investment portfolio.</p>
<h3 id="disadvantages-of-index-funds"><strong>Disadvantages of Index Funds</strong></h3>
<h4 id="no-fund-manager-with-vested-interest">1. <strong>No Fund Manager with Vested Interest:</strong></h4>
<p>Unlike active funds, index funds lack a fund manager making active decisions. While this absence of human intervention reduces costs, it also means there is no one steering the ship based on changing market conditions or opportunities.</p>
<h4 id="index-down-as-a-whole">2. <strong>Index Down as a Whole:</strong></h4>
<p>Since index funds aim to replicate the performance of an entire market index, they are susceptible to downturns when the index itself experiences losses. This lack of flexibility to move away from underperforming sectors can be a drawback during market downturns.</p>
<h4 id="less-diversified-in-some-cases">3. <strong>Less Diversified in Some Cases:</strong></h4>
<p>While index funds generally provide broad market exposure, they can be less diversified in specific sectors or regions, depending on the index being tracked. This can expose investors to risks associated with concentrated positions.</p>
<h4 id="heavy-weighting-in-a-few-positions">4. <strong>Heavy Weighting in a Few Positions:</strong></h4>
<p>Notably, certain indices may be heavily weighted in a few positions. For instance, the S&amp;P 500 is dominated by a handful of large-cap stocks. If these few stocks perform poorly, the entire index—and consequently, the index fund—can be adversely affected.</p>
<h2 id="choosing-between-active-and-index-funds"><strong>Choosing Between Active and Index Funds</strong></h2>
<p>Active funds may be suitable for those seeking potentially higher returns and active management expertise, while index funds are favored by those prioritizing cost efficiency and a more hands-off approach.</p>

"""""
),
            ["""2023-12-13-Mutual-Funds-Expenses"""] = (new Dictionary<string, string> { ["path"]="Investing",["""title"""] =
"""""
 Navigating Mutual Fund Expenses. A Simplified Guide to Investment Costs
""""",
["""date"""] =
"""""
 2023-12-13
""""",
["""categories"""] =
"""""
 investing
""""",
["""tags"""] =
"""""
 mutual funds chatgpt
""""",
 },
"""""
<h1 id="navigating-mutual-fund-expenses-a-simplified-guide-to-investment-costs">Navigating Mutual Fund Expenses: A Simplified Guide to Investment Costs</h1>
<p>It's crucial for investors to understand the various expenses associated with mutual funds. In this article, we will break down the key components of mutual fund expenses, shedding light on sales charges, expense ratios, miscellaneous charges, redemption fees, and useful online resources for investors.</p>
<h2 id="sales-charges-load">Sales Charges (Load)</h2>
<p>Sales charges, commonly referred to as loads, are fees investors pay when buying or selling mutual fund shares. There are two main types: front-end loads and back-end loads.</p>
<ol>
<li><p>Front-end loads: These charges are levied at the time of purchase and can range from 3 dollars or more. Investors should be aware that a portion of their initial investment is deducted as a sales charge.</p>
</li>
<li><p>Back-end loads: Unlike front-end loads, back-end loads are charged when investors sell their mutual fund shares. This fee is often assessed on a sliding scale, decreasing over time, encouraging long-term investment.</p>
</li>
</ol>
<h2 id="expense-ratio">Expense Ratio</h2>
<p>The expense ratio is a critical metric that represents the annual cost of managing a mutual fund relative to its assets. On average, investors can expect an expense ratio around 1%. This ratio encompasses two main components:</p>
<ol>
<li><p>Operating Expenses: These include management fees, administrative costs, and other operational expenses associated with running the mutual fund.</p>
</li>
<li><p>12b-1 Marketing Fee (typically 0.25%): This fee covers marketing and distribution expenses. Investors should pay attention to 12b-1 fees, as they contribute to the overall cost of owning the fund.</p>
</li>
</ol>
<h2 id="miscellaneous-charges-not-in-expense-ratio">Miscellaneous Charges (Not in Expense Ratio)</h2>
<p>Apart from the expense ratio, investors may encounter additional charges that are not included in the stated expense ratio. These can include:</p>
<ol>
<li><p>Custodial Fees: Some funds charge custodial fees, often around $10, to cover the safekeeping of assets. Investors should check the fund's prospectus for details on custodial fees.</p>
</li>
<li><p>Hidden Fees: While rare, investors should be vigilant for any undisclosed or hidden fees. Reading the fund's prospectus thoroughly can help uncover any unexpected charges.</p>
</li>
</ol>
<h2 id="redemption-fee-typically-1">Redemption Fee (typically 1%)</h2>
<p>A redemption fee is imposed when investors sell their mutual fund shares within a specified time frame, discouraging short-term trading and market timing. Investors should be aware of these fees and the associated time frames outlined in the fund's prospectus.</p>
<h1 id="online-resources">Online Resources</h1>
<p>For investors looking to explore mutual funds and their associated expenses, online resources can provide valuable insights. Two reputable platforms include:</p>
<ol>
<li><p><a href="https://investor.vanguard.com">Vanguard Investor</a>: Vanguard is known for its low-cost index funds. The site offers detailed information on various mutual funds, including expense ratios and fund profiles.</p>
</li>
<li><p><a href="https://www.google.com/finance/">Google Finance</a>: Google Finance provides a comprehensive overview of mutual funds, allowing investors to track fund performance, access historical data, and analyze key financial metrics.</p>
</li>
</ol>
<h1 id="conclusion">Conclusion</h1>
<p>Understanding mutual fund expenses is crucial for investors seeking to maximize their returns. By grasping the intricacies of sales charges, expense ratios, miscellaneous fees, and redemption charges, investors can make informed decisions that align with their financial goals. Additionally, utilizing reliable online resources can empower investors with the knowledge needed to navigate the complex landscape of mutual fund investing.</p>

"""""
),
            ["""2023-12-16-ETF-Funds"""] = (new Dictionary<string, string> { ["path"]="Investing",["""title"""] =
"""""
 ETF Exchange-Traded Funds
""""",
["""date"""] =
"""""
 2023-12-13
""""",
["""categories"""] =
"""""
 investing
""""",
["""tags"""] =
"""""
 mutual funds chatgpt
""""",
 },
"""""
<h1 id="unlocking-the-power-of-etfs-your-guide-to-exchange-traded-funds">Unlocking the Power of ETFs: Your Guide to Exchange-Traded Funds</h1>
<p>Exchange-Traded Funds (ETFs) emerge as a beacon of simplicity and accessibility. In this article, we'll explore the key aspects of ETFs, breaking down their structure and advantages in a straightforward manner.</p>
<h2 id="hold-basket-of-underlying-assets">Hold Basket of Underlying Assets</h2>
<p>At the heart of ETFs lies a diversified basket of underlying assets. This means that when you invest in an ETF, you're not putting all your eggs in one basket. Instead, your money is spread across a range of securities, providing instant diversification and reducing the impact of a poor-performing asset on your overall investment.</p>
<h2 id="typically-track-an-index">Typically Track an Index</h2>
<p>ETFs often track a specific index, such as the S&amp;P 500. This means that rather than trying to beat the market, ETFs aim to replicate the performance of the index they follow. This passive investment approach not only simplifies decision-making but also tends to result in lower management fees compared to actively managed funds.</p>
<h2 id="low-expense-ratio">Low Expense Ratio</h2>
<p>One of the standout features of ETFs is their cost-effectiveness. Thanks to their passive management style, ETFs usually boast a low expense ratio, which represents the percentage of assets deducted annually to cover fund expenses. This cost efficiency is a key factor in their growing popularity among investors.</p>
<h2 id="trade-on-market-like-a-stock">Trade on Market Like a Stock</h2>
<p>ETFs offer the flexibility of trading on the open market throughout the day, just like individual stocks. This real-time trading ability empowers investors to react swiftly to market developments, whether it's seizing an opportunity or adjusting their portfolio in response to changing economic conditions.</p>
<h2 id="price-changes-during-the-day">Price Changes During the Day</h2>
<p>Unlike mutual funds, whose prices are determined at the end of the trading day, ETF prices fluctuate throughout the day. This intraday pricing reflects the constantly changing values of the underlying assets, providing investors with more control and transparency.</p>
<h2 id="liquidity-like-a-stock">Liquidity Like a Stock</h2>
<p>ETFs combine the best of both worlds by offering the diversification benefits of a mutual fund with the liquidity of a stock. The ability to buy and sell shares at market prices ensures that investors can easily enter or exit their positions without the concern of impacting the market price.</p>
<h2 id="pay-commission-to-a-broker">Pay Commission to a Broker</h2>
<p>Similar to stock trading, buying and selling ETFs on the market typically incurs a commission fee. It's essential for investors to be aware of these fees and factor them into their overall cost considerations. However, the cost efficiency of ETFs often outweighs these transaction fees, especially for long-term investors.</p>
<h2 id="can-buy-1-share">Can Buy 1 Share</h2>
<p>Perhaps one of the most democratizing aspects of ETFs is the ability to buy as little as a single share. This accessibility allows investors with limited capital to participate in a broad range of markets and industries, fostering inclusivity in the world of investing.</p>
<p>In conclusion, Exchange-Traded Funds offer a straightforward and cost-effective way for investors to access a diversified portfolio. With low expense ratios, intraday trading capabilities, and the ability to buy in small increments, ETFs have become a popular choice for both novice and experienced investors looking to build a well-balanced and diversified investment portfolio.</p>

"""""
),
            ["""2023-12-29-Buy-and-Hold-vs-Active-trading"""] = (new Dictionary<string, string> { ["path"]="Investing",["""title"""] =
"""""
 Buy and Hold vs Active trading
""""",
["""date"""] =
"""""
 2023-12-29
""""",
["""categories"""] =
"""""
 investing
""""",
["""tags"""] =
"""""
 investing stocks
""""",
 },
"""""
<h1 id="navigating-investment-strategies-buy-and-hold-vs-active-trading">Navigating Investment Strategies: Buy and Hold vs Active Trading</h1>
<p>Two popular approaches are &quot;Buy and Hold&quot; and &quot;Active Trading.&quot; In this article, we will explore the advantages and disadvantages of each, helping you make informed decisions tailored to your financial goals.</p>
<h1 id="buy-and-hold">Buy and Hold:</h1>
<h2 id="advantages">Advantages:</h2>
<h3 id="simplicity-in-management">1. Simplicity in Management:</h3>
<p>One of the key benefits of the buy-and-hold strategy is its simplicity. Investors who adopt this approach purchase assets with a long-term perspective, reducing the need for constant monitoring and decision-making.</p>
<h3 id="reduced-transition-fees">2. Reduced Transition Fees:</h3>
<p>Buy and hold minimizes the frequency of buying and selling, leading to lower transaction costs. This can be particularly advantageous for investors who prefer a more hands-off approach to managing their portfolios.</p>
<h3 id="better-tax-efficiency">3. Better Tax Efficiency:</h3>
<p>By holding onto investments for an extended period, investors may benefit from more favorable tax treatment, as long-term capital gains are often taxed at a lower rate than short-term gains.</p>
<h3 id="timing-the-market-is-challenging">4. Timing the Market Is Challenging:</h3>
<p>Attempting to time the market accurately is notoriously difficult. Buy-and-hold investors acknowledge this challenge and focus on the long-term growth potential of their chosen assets, rather than trying to predict short-term market movements.</p>
<h2 id="disadvantages">Disadvantages:</h2>
<h3 id="missed-opportunities">1. Missed Opportunities:</h3>
<p>While buy and hold is a conservative strategy, it comes with the risk of missing out on potential gains that active traders might capture during shorter-term market fluctuations.</p>
<h3 id="reluctance-to-sell-poor-performers">2. Reluctance to Sell Poor Performers:</h3>
<p>Buy-and-hold investors may face challenges when it comes to selling underperforming assets. Emotional attachments or a belief in a future recovery may lead to reluctance in parting with investments that are dragging down overall portfolio performance.</p>
<h1 id="active-trading">Active Trading:</h1>
<h2 id="advantages-1">Advantages:</h2>
<h3 id="exploiting-new-opportunities">1. Exploiting New Opportunities:</h3>
<p>Active trading allows investors to capitalize on short-term market opportunities. This flexibility enables them to adjust their portfolios quickly in response to changing market conditions.</p>
<h3 id="shedding-losing-positions">2. Shedding Losing Positions:</h3>
<p>Active traders have the ability to cut losses swiftly by selling underperforming assets. This proactive approach helps preserve capital and avoid significant downturns in portfolio value.</p>
<h3 id="rapid-reallocation-in-volatile-markets">3. Rapid Reallocation in Volatile Markets:</h3>
<p>In times of market volatility, active traders can swiftly reallocate their assets, taking advantage of short-term price fluctuations and potentially minimizing losses.</p>
<h2 id="disadvantages-1">Disadvantages:</h2>
<h3 id="time-intensive">1. Time-Intensive:</h3>
<p>Active trading demands a significant time commitment. Constantly monitoring the markets, conducting research, and making quick decisions can be challenging for individuals with busy schedules.</p>
<h3 id="increased-transaction-fees-and-taxes">2. Increased Transaction Fees and Taxes:</h3>
<p>Frequent buying and selling result in higher transaction costs and potential tax implications. These expenses can erode returns over time, especially when compared to the lower costs associated with a buy-and-hold strategy.</p>
<h3 id="patience-rewarded-with-compounding">3. Patience Rewarded with Compounding:</h3>
<p>While active trading may yield short-term gains, the buy-and-hold strategy is designed to harness the power of compounding over the long term. Patient investors may benefit from the compounding effect, which can lead to substantial growth over time.</p>
<h3 id="typically-underperforms-over-the-long-term">4. Typically Underperforms Over the Long Term:</h3>
<p>Statistically, active trading often underperforms a buy-and-hold strategy over extended periods. This is partly due to transaction costs and the challenges of consistently making profitable short-term trades.</p>

"""""
),
            ["""2024-01-08-Growth-Stock-Investing"""] = (new Dictionary<string, string> { ["path"]="Investing",["""title"""] =
"""""
 A Guide to Growth Stock Investing
""""",
["""date"""] =
"""""
 2024-01-08
""""",
["""categories"""] =
"""""
 investing
""""",
["""tags"""] =
"""""
 investing stocks
""""",
 },
"""""
<h1 id="a-guide-to-growth-stock-investing">A Guide to Growth Stock Investing</h1>
<p>Growth stock investing stands out as a strategy that holds the promise of substantial returns for those who can navigate its nuances. This approach focuses on companies with the potential for rapid expansion, often characterized by soaring stock prices and robust momentum. Let's delve into the key aspects of growth stock investing and uncover valuable tips to help you make informed decisions.</p>
<h2 id="understanding-growth-stock-investing">Understanding Growth Stock Investing</h2>
<p><strong>1. Pricing Dynamics:</strong></p>
<p>Growth stocks are often priced at a premium compared to the broader market. Investors pay a higher price with the expectation that the company's potential for future growth will justify the valuation.</p>
<p><strong>2. Momentum as the Driving Force:</strong></p>
<p>The driving force behind growth stocks is momentum. As positive sentiment and high expectations fuel demand, the stock's price experiences upward momentum, creating opportunities for investors.</p>
<p><strong>3. Profitability Not Always Immediate:</strong></p>
<p>It's essential to note that many growth companies may not be profitable in their early stages. Investors in growth stocks are essentially betting on the future success and profitability of these companies.</p>
<p><strong>4. Ideal for Long-Term Investors:</strong></p>
<p>Growth stock investing is particularly suitable for long-term investors with the patience to weather short-term volatility. This strategy aligns with the philosophy of patiently waiting for the investments to realize their full potential.</p>
<p><strong>5. Weathering Volatility Roller-Coaster:</strong></p>
<p>Volatility is inherent in growth stocks, and investors must be prepared for price fluctuations. Those who can withstand the ups and downs are better positioned to capitalize on the long-term growth trajectory.</p>
<p><strong>6. Protecting Against Downside:</strong></p>
<p>Setting clear exit strategies is crucial. Some investors adopt a rule of thumb, such as selling if a stock drops 20% from its peak, to protect against significant losses.</p>
<h2 id="characteristics-of-ideal-growth-stocks">Characteristics of Ideal Growth Stocks</h2>
<p><strong>1. Fast-Rising Sales and Earnings:</strong></p>
<p>Investors should seek companies with a track record of consistently increasing both sales and earnings. This indicates a robust business model and the potential for sustained growth.</p>
<p><strong>2. Low Debt Levels:</strong></p>
<p>Low debt is a key indicator of financial health. Companies with manageable debt loads are better positioned to reinvest in their operations and fuel future growth.</p>
<h2 id="tips-for-identifying-growth-stocks">Tips for Identifying Growth Stocks</h2>
<p><strong>a. Growing Industry:</strong></p>
<p>Look for companies operating in industries with significant growth potential. Investing in a growing market increases the chances of a company's success.</p>
<p><strong>b. Riding Megatrends:</strong></p>
<p>Identify companies aligned with megatrends - long-term, transformative shifts in technology, demographics, or society. These trends can be powerful drivers of sustained growth.</p>
<p><strong>c. Strong Brand as a Barrier to Entry:</strong></p>
<p>Companies with a strong brand often have a competitive advantage that acts as a barrier to entry for potential competitors. This can contribute to long-term success.</p>
<p><strong>d. Insider Buying:</strong></p>
<p>Monitor insider activity. If company insiders, such as executives or board members, are buying shares, it may signal confidence in the company's future prospects.</p>
<p><strong>e. Fundamental Metrics:</strong></p>
<p>Assess fundamental metrics such as sales growth, earnings growth, decreasing debt, and a return on equity (ROE) of 10% or higher. These indicators provide valuable insights into a company's financial health.</p>
<p>In conclusion, growth stock investing requires a strategic approach, a long-term mindset, and a keen eye for identifying companies with the potential for significant expansion. By understanding the dynamics of growth stocks and considering key characteristics, investors can position themselves for success in the ever-evolving world of the stock market.</p>
<p>Remember, while the potential for higher returns exists, growth stock investing comes with its share of risks. Diversification and thorough research are essential elements of any successful investment strategy.</p>

"""""
),
            ["""2024-01-08-Income-Dividend-Stock-Investing"""] = (new Dictionary<string, string> { ["path"]="Investing",["""title"""] =
"""""
 A Guide to Income-Dividend Stock Investing
""""",
["""date"""] =
"""""
 2024-01-13
""""",
["""categories"""] =
"""""
 investing
""""",
["""tags"""] =
"""""
 investing stocks
""""",
 },
"""""
<h1 id="a-guide-to-income-dividend-stock-investing">A Guide to Income-Dividend Stock Investing</h1>
<p>Investing in income-dividend stocks can be a lucrative strategy for those seeking a combination of price growth and a steady stream of income. In this article, we will delve into the key aspects of income-dividend stock investing, why it's an attractive option for certain investors, and essential tips to navigate this investment avenue.</p>
<h2 id="understanding-income-dividend-stock-investing">Understanding Income-Dividend Stock Investing</h2>
<p><strong>1. Seeking Price Growth:</strong></p>
<p>Income-dividend stock investors aim for the best of both worlds - capital appreciation and regular income. While the primary focus is on dividend income, these investors also want their stock values to increase over time.</p>
<p><strong>2. Income from Dividends:</strong></p>
<p>The cornerstone of income-dividend stock investing is the consistent stream of dividends. Companies paying regular dividends are often financially stable and mature, making them an appealing choice for investors.</p>
<p><strong>3. Ideal for Various Scenarios:</strong></p>
<p>Income-dividend stocks are particularly beneficial for retirees relying on regular income, investors navigating a low-interest-rate environment, and those with a more risk-averse investment approach.</p>
<p><strong>4. Typically Large Cap:</strong></p>
<p>Companies with a history of stable dividend payments are often found among large-cap stocks. These well-established, financially sound corporations tend to weather economic downturns better than smaller companies.</p>
<p><strong>5. Consistent Dividend Payouts:</strong></p>
<p>Investors in income-dividend stocks prioritize consistency. Reliable dividend payouts indicate financial stability, a key criterion for those relying on these investments for regular income.</p>
<h3 id="tips-for-successful-income-dividend-stock-investing">Tips for Successful Income-Dividend Stock Investing</h3>
<p><strong>1. Company Stability:</strong></p>
<p>Stability is paramount when selecting income-dividend stocks. Look for companies with a proven track record of financial strength, robust cash flows, and a history of consistent dividend payments.</p>
<p><strong>2. Sector Stability:</strong></p>
<p>Diversification across sectors is crucial to mitigate risks. Invest in income-dividend stocks from sectors known for stability, even in challenging economic conditions.</p>
<p><strong>3. Fundamental Analysis and Ratios:</strong></p>
<p>Apply the same rigorous fundamental analysis and ratios used for any investment. Factors like earnings per share (EPS), price-to-earnings (P/E) ratio, and debt levels should be thoroughly assessed.</p>
<p><strong>4. Key Metrics to Focus On:</strong></p>
<ul>
<li><strong>Dividend Yield (%):</strong></li>
</ul>
<p>This represents the annual dividend income as a percentage of the stock's current price. A higher yield may indicate a more attractive investment, but be cautious of excessively high yields.</p>
<ul>
<li><strong>Dividend Growth Rate:</strong></li>
</ul>
<p>Look for companies with a history of increasing dividend payouts. This indicates financial health and confidence in future earnings.</p>
<ul>
<li><strong>Consistent Dividends:</strong></li>
</ul>
<p>Steady dividend payments over several years demonstrate a company's commitment to rewarding shareholders.</p>
<ul>
<li><strong>Dividend Payout Ratio:</strong>
This ratio reveals the proportion of earnings paid out as dividends. A ratio between 50-70% is generally considered healthy, while a ratio exceeding 80% may raise concerns about sustainability.</li>
</ul>
<p>In conclusion, income-dividend stock investing offers a balanced approach for investors seeking both income and potential capital appreciation. By focusing on stable companies, diverse sectors, and key financial metrics, investors can navigate this strategy successfully.</p>

"""""
),
            ["""2024-06-04-Status"""] = (new Dictionary<string, string> { ["path"]="Investing",["""title"""] =
"""""
 Status
""""",
["""date"""] =
"""""
 2024-06-04
""""",
["""tags"""] =
"""""
 investing stocks
""""",
["""categories"""] =
"""""
 investing
""""",
 },
"""""
<h3 id="long-term-investment-recommendations">Long-Term Investment Recommendations:</h3>
<h4 id="buy">Buy:</h4>
<ol>
<li><p><strong>ConocoPhillips (COP)</strong>:</p>
<ul>
<li><strong>Reason</strong>: Recently acquired Marathon Oil in a $17 billion all-stock deal, indicating strong financial health and strategic growth through consolidation.</li>
</ul>
</li>
<li><p><strong>Chevron Corporation (CVX)</strong>:</p>
<ul>
<li><strong>Reason</strong>: Approved for a $53 billion takeover of Hess, enhancing its portfolio and expanding its market presence, especially in lucrative areas like the Permian Basin and the Gulf of Mexico.</li>
</ul>
</li>
<li><p><strong>Exxon Mobil Corporation (XOM)</strong>:</p>
<ul>
<li><strong>Reason</strong>: Continues to pursue strategic acquisitions and is contesting Chevron’s deal over Guyana oil rights, aiming to solidify its position in the global oil market.</li>
</ul>
</li>
<li><p><strong>Microsoft Corporation (MSFT)</strong>:</p>
<ul>
<li><strong>Reason</strong>: Partnering with OpenAI in a significant content-licensing deal, reflecting strong growth potential in AI and innovation sectors, bolstering its technological edge.</li>
</ul>
</li>
<li><p><strong>Apple Inc. (AAPL)</strong>:</p>
<ul>
<li><strong>Reason</strong>: Achieved a 52% surge in iPhone shipments in China, demonstrating market resilience and effective recovery strategies, likely to boost long-term sales growth.</li>
</ul>
</li>
</ol>
<h4 id="sell">Sell:</h4>
<ol>
<li><p><strong>ByteDance (not publicly traded, but impacts related investments)</strong>:</p>
<ul>
<li><strong>Reason</strong>: Facing significant legal and regulatory challenges in the US, with a law requiring the divestment of TikTok’s US assets by January 2025, creating uncertainty and potential financial strain.</li>
</ul>
</li>
<li><p><strong>Tesla, Inc. (TSLA)</strong>:</p>
<ul>
<li><strong>Reason</strong>: Shareholders are confronting issues with Elon Musk’s $56 billion compensation package, which could indicate potential governance challenges and investor dissatisfaction, possibly affecting stock performance.</li>
</ul>
</li>
</ol>

"""""
),
            ["""2024-06-08-Navigating-Market-Twists-Top-Long-Term-Stock-Picks-and-Risks"""] = (new Dictionary<string, string> { ["path"]="Investing",["""title"""] =
"""""
 Navigating Market Twists Top Long-Term Stock Picks and Risks
""""",
["""date"""] =
"""""
 2024-06-08
""""",
["""tags"""] =
"""""
 stocks
""""",
["""categories"""] =
"""""
 investing
""""",
 },
"""""
<h3 id="long-term-investment-recommendations">Long-Term Investment Recommendations:</h3>
<h3 id="buy">Buy:</h3>
<ol>
<li><p><strong>Paramount (PARA)</strong></p>
<ul>
<li><strong>Reason</strong>: Paramount is currently undervalued, down 16.6% year-to-date despite positive news surrounding its acquisition by Skydance Media. The $8 billion deal and strategic backing by RedBird Capital Partners and KKR suggest strong future potential and stability. Additionally, Shari Redstone's preference for keeping the company whole indicates confidence in its long-term prospects.</li>
</ul>
</li>
<li><p><strong>Broadcom (AVGO)</strong></p>
<ul>
<li><strong>Reason</strong>: Broadcom has a strong track record of performance and is expected to release its earnings report next week. The company's consistent growth in the semiconductor industry, coupled with its recent acquisitions and partnerships, make it a solid long-term investment. The upcoming earnings report may also provide positive catalysts for the stock.</li>
</ul>
</li>
</ol>
<h3 id="sell">Sell:</h3>
<ol>
<li><p><strong>GameStop (GME)</strong></p>
<ul>
<li><strong>Reason</strong>: Despite the recent surge in GameStop's share price due to Keith Gill's (Roaring Kitty) involvement, the stock remains highly volatile and speculative. The potential for market manipulation and the ongoing investigations by regulatory bodies add significant risk. For long-term investors seeking stability, this stock is not advisable.</li>
</ul>
</li>
<li><p><strong>Boeing (BA)</strong></p>
<ul>
<li><strong>Reason</strong>: Boeing's stock has faced a rough year, down almost 25% due to ongoing technical issues, regulatory investigations, and other operational setbacks. Although the successful Starliner mission is a positive development, the overall risk and uncertainty surrounding the company make it a less attractive long-term investment at this time.</li>
</ul>
</li>
</ol>

"""""
),
            ["""2024-06-15-Navigating-Market-Twists-Top-Long-Term-Stock-Picks-and-Risks"""] = (new Dictionary<string, string> { ["path"]="Investing",["""title"""] =
"""""
 Navigating Market Twists Top Long-Term Stock Picks and Risks
""""",
["""date"""] =
"""""
 2024-06-15
""""",
["""tags"""] =
"""""
 stocks
""""",
["""categories"""] =
"""""
 investing
""""",
 },
"""""
<h4 id="long-term-investment-recommendations">Long-Term Investment Recommendations:</h4>
<p><strong>Buy:</strong></p>
<p><strong>Meta Platforms Inc. (META)</strong></p>
<p><strong>Reason:</strong> Meta has shown remarkable resilience and growth, surging over 450% since its 2022 low. The company is considered a prime candidate for a stock split, which can make shares more accessible to everyday investors and potentially lead to further stock appreciation. Meta's ongoing investments in AI and robust financial performance make it a strong long-term investment.</p>
<p><strong>Apple Inc. (AAPL)</strong></p>
<p><strong>Reason:</strong> Despite a slight dip post-AI announcement, Apple's stock had a significant rally leading up to its developer conference. The introduction of &quot;Apple Intelligence&quot; and other innovative features positions Apple well in the competitive AI landscape. With a market valuation of over $3 trillion and a history of strong financial performance, Apple remains a solid choice for long-term investors.</p>
<p><strong>Nvidia Corp. (NVDA)</strong></p>
<p><strong>Reason:</strong> Nvidia's recent 10-for-1 stock split and subsequent 28% gain highlight its strong market position and growth potential. The company's leadership in AI and semiconductor technology continues to drive its success. Nvidia's strategic moves and robust financial health make it a compelling long-term investment.</p>
<p><strong>Sell:</strong></p>
<p><strong>Paramount Global (PARA)</strong></p>
<p><strong>Reason:</strong> The collapse of the merger with Skydance Media creates uncertainty around Paramount's future. The breakdown of negotiations and the resulting strain on their partnership highlight potential operational and strategic challenges. The media industry's volatility and Paramount's current instability make it a less attractive long-term investment.</p>
<p><strong>Intel Corp. (INTC)</strong></p>
<p><strong>Reason:</strong> Intel's decision to slow down its $25 billion chip-manufacturing plant project in Israel and its cost-saving measures indicate potential financial strain and strategic redirection. The sale of a significant stake in its Irish plant further suggests challenges in managing its global investments. Given these uncertainties, Intel may pose higher risks for long-term investors seeking stability.</p>
<h4 id="summary">Summary:</h4>
<p>These recommendations reflect the potential for growth and stability in companies like Meta, Apple, and Nvidia, driven by their strategic initiatives and market positions. Conversely, Paramount and Intel face significant challenges that may impact their long-term performance, making them less favorable for investors focused on long-term gains. Always consider your financial situation and seek professional advice before making investment decisions.</p>

"""""
),
            ["""2024-06-21-Navigating-Market-Twists-Top-Long-Term-Stock-Picks-and-Risks"""] = (new Dictionary<string, string> { ["path"]="Investing",["""title"""] =
"""""
 Navigating Market Twists Top Long-Term Stock Picks and Risks
""""",
["""date"""] =
"""""
 2024-06-21
""""",
["""tags"""] =
"""""
 stocks
""""",
["""categories"""] =
"""""
 investing
""""",
 },
"""""
<h3 id="long-term-investment-recommendations">Long-Term Investment Recommendations:</h3>
<h4 id="buy">Buy:</h4>
<ol>
<li><p><strong>Nvidia Corporation (NVDA)</strong>:</p>
<ul>
<li><strong>Reason</strong>: Nvidia has become the most valuable company in the world, driven by the AI revolution and its dominance in the AI chip market. With projections to potentially reach a market value of $5 trillion, Nvidia's consistent outperformance and growth potential make it a strong buy.</li>
</ul>
</li>
<li><p><strong>General Electric Company (GE)</strong>:</p>
<ul>
<li><strong>Reason</strong>: GE Aerospace is developing a hybrid-electric engine aimed at reducing the aviation industry's carbon emissions. This innovation aligns with the global push for net-zero emissions by 2050, positioning GE as a leader in sustainable aviation technology.</li>
</ul>
</li>
<li><p><strong>Microsoft Corporation (MSFT)</strong>:</p>
<ul>
<li><strong>Reason</strong>: Despite being surpassed by Nvidia, Microsoft's robust position in cloud computing, AI, and productivity software continues to make it a solid long-term investment. Its strategic acquisitions and innovation in AI keep it competitive and growing.</li>
</ul>
</li>
<li><p><strong>Apple Inc. (AAPL)</strong>:</p>
<ul>
<li><strong>Reason</strong>: As one of the world's leading technology companies, Apple's continuous innovation in consumer electronics and services ensures its strong market position. Despite Nvidia's recent ascent, Apple remains a key player with significant growth potential.</li>
</ul>
</li>
<li><p><strong>The Walt Disney Company (DIS)</strong>:</p>
<ul>
<li><strong>Reason</strong>: Disney and Pixar's recent box office success with &quot;Inside Out 2&quot; demonstrates the company's strong content creation capabilities and market appeal. Continued success in entertainment and strategic expansions in streaming services make Disney a worthwhile investment.</li>
</ul>
</li>
</ol>
<h4 id="sell">Sell:</h4>
<ol>
<li><p><strong>Boeing Co. (BA)</strong>:</p>
<ul>
<li><strong>Reason</strong>: Boeing is facing numerous challenges, including technical issues, whistleblower allegations, and scrutiny from regulatory bodies. The negative publicity, combined with significant financial losses and operational setbacks, suggests it might be prudent to reduce exposure to Boeing.</li>
</ul>
</li>
<li><p><strong>Tesla, Inc. (TSLA)</strong>:</p>
<ul>
<li><strong>Reason</strong>: Tesla's recent diversion of AI processors meant for its automotive projects to its social media venture, X, has caused delays and investor concerns. This, coupled with potential governance challenges, suggests caution and possible reduction of holdings in Tesla.</li>
</ul>
</li>
<li><p><strong>Meta Platforms, Inc. (META)</strong>:</p>
<ul>
<li><strong>Reason</strong>: The ongoing lawsuit and criticisms regarding Meta's handling of content and potential biases pose reputational and financial risks. These challenges could affect investor confidence and stock performance, making it a candidate for selling.</li>
</ul>
</li>
<li><p><strong>Amazon.com, Inc. (AMZN)</strong>:</p>
<ul>
<li><strong>Reason</strong>: The alliance between the Amazon Labour Union and the International Brotherhood of Teamsters could lead to increased labor costs and operational disruptions. These potential challenges, coupled with ongoing scrutiny over labor practices, suggest a cautious approach.</li>
</ul>
</li>
<li><p><strong>Nike, Inc. (NKE)</strong>:</p>
<ul>
<li><strong>Reason</strong>: With earnings reports expected soon, any negative surprises or underperformance could lead to a dip in stock price. Recent market conditions and consumer behavior trends might pose risks, making it a candidate for reducing exposure ahead of the report.</li>
</ul>
</li>
</ol>

"""""
),
            ["""2024-06-28-Navigating-Market-Twists-Top-Long-Term-Stock-Picks-and-Risks"""] = (new Dictionary<string, string> { ["path"]="Investing",["""title"""] =
"""""
 Navigating Market Twists Top Long-Term Stock Picks and Risks
""""",
["""date"""] =
"""""
 2024-06-28
""""",
["""tags"""] =
"""""
 stocks
""""",
["""categories"""] =
"""""
 investing
""""",
 },
"""""
<h3 id="big-tech-apple-and-microsoft">Big Tech: Apple and Microsoft</h3>
<p><strong>Current Events:</strong></p>
<ul>
<li>The European Commission is cracking down on Big Tech, targeting Apple and Microsoft under the Digital Markets Act (DMA).</li>
<li>Apple could face a fine of up to $38.3 billion for anti-competitive practices, and has delayed some AI features in Europe due to DMA regulations.</li>
<li>Microsoft is being investigated for bundling its Teams app with its Office suite.</li>
</ul>
<p><strong>Stock Impact:</strong></p>
<ul>
<li><strong>Apple</strong>: The potential fines and regulatory scrutiny may lead to short-term stock volatility. However, Apple's strong market position and brand loyalty might mitigate long-term impacts.</li>
<li><strong>Microsoft</strong>: Similar to Apple, regulatory issues might cause some stock turbulence. The company's diverse portfolio and strong financials offer some buffer against these challenges.</li>
</ul>
<p><strong>Action:</strong></p>
<ul>
<li><strong>Hold or Reduce Exposure</strong>: Given the regulatory risks, consider holding your position or slightly reducing exposure to manage risk, particularly if your portfolio is heavily weighted towards these stocks.</li>
</ul>
<h3 id="weight-loss-drug-market-novo-nordisk-and-eli-lilly">Weight-loss Drug Market: Novo Nordisk and Eli Lilly</h3>
<p><strong>Current Events:</strong></p>
<ul>
<li>Novo Nordisk is investing $4.1 billion in a new facility in North Carolina and has secured approval to sell Wegovy in China.</li>
<li>Eli Lilly is investing $5.3 billion in a new facility in Indiana and has raised its annual sales forecast by $2 billion.</li>
</ul>
<p><strong>Stock Impact:</strong></p>
<ul>
<li><strong>Novo Nordisk</strong>: Significant investment and market expansion (particularly in China) indicate strong growth potential.</li>
<li><strong>Eli Lilly</strong>: Similar growth trajectory with substantial investment in production and increased sales forecasts.</li>
</ul>
<p><strong>Action:</strong></p>
<ul>
<li><strong>Buy or Hold</strong>: Both companies show strong growth prospects and expanding market opportunities. Increasing your exposure or holding these stocks could be beneficial, particularly given the booming demand for weight-loss drugs.</li>
</ul>
<h3 id="electric-vehicles-rivian">Electric Vehicles: Rivian</h3>
<p><strong>Current Events:</strong></p>
<ul>
<li>Rivian's stock surged by over 35% after securing a multibillion-dollar deal with Volkswagen (VW), including a strategic investment and software collaboration.</li>
</ul>
<p><strong>Stock Impact:</strong></p>
<ul>
<li><strong>Rivian</strong>: This partnership with VW provides significant financial backing and market confidence, potentially overcoming previous manufacturing and financial hurdles.</li>
</ul>
<p><strong>Action:</strong></p>
<ul>
<li><strong>Buy or Hold</strong>: The deal with VW positions Rivian well for future growth. Consider buying or holding if you have confidence in the EV market.</li>
</ul>
<h3 id="other-notable-stocks-caterpillar-and-carnival-corporation">Other Notable Stocks: Caterpillar and Carnival Corporation</h3>
<p><strong>Caterpillar:</strong></p>
<ul>
<li>Norway’s largest private pension fund divested from Caterpillar due to concerns over human rights issues, causing a nearly 6% drop in stock value over the past month.</li>
</ul>
<p><strong>Action:</strong></p>
<ul>
<li><strong>Sell or Hold with Caution</strong>: The divestment and associated ethical concerns might continue to impact the stock negatively. Consider reducing exposure or holding with caution.</li>
</ul>
<p><strong>Carnival Corporation:</strong></p>
<ul>
<li>Reported a significant surge in net income and record revenues, leading to a 17% stock gain over the past month.</li>
</ul>
<p><strong>Action:</strong></p>
<ul>
<li><strong>Buy or Hold</strong>: Strong financial performance and improved forecasts suggest a positive outlook. Consider buying or holding your position.</li>
</ul>
<h3 id="summary-recommendations">Summary Recommendations:</h3>
<ol>
<li><strong>Apple and Microsoft</strong>: Hold or slightly reduce exposure due to regulatory risks.</li>
<li><strong>Novo Nordisk and Eli Lilly</strong>: Buy or hold, given strong growth prospects in the weight-loss drug market.</li>
<li><strong>Rivian</strong>: Buy or hold, leveraging the positive impact of the VW deal.</li>
<li><strong>Caterpillar</strong>: Sell or hold with caution due to ethical concerns and recent stock decline.</li>
<li><strong>Carnival Corporation</strong>: Buy or hold, supported by strong financial performance and positive future outlook.</li>
</ol>

"""""
),
            ["""2024-07-06-Navigating-Market-Twists-Top-Long-Term-Stock-Picks-and-Risks"""] = (new Dictionary<string, string> { ["path"]="Investing",["""title"""] =
"""""
 Navigating Market Twists Top Long-Term Stock Picks and Risks
""""",
["""date"""] =
"""""
 2024-07-06
""""",
["""tags"""] =
"""""
 stocks
""""",
["""categories"""] =
"""""
 investing
""""",
 },
"""""
<h3 id="ai-and-tech-companies-microsoft-alphabet-adobe-oracle-and-meta">AI and Tech Companies: Microsoft, Alphabet, Adobe, Oracle, and Meta</h3>
<p><strong>Current Events:</strong></p>
<ul>
<li><strong>AI Risks</strong>: Major tech companies including Microsoft, Alphabet (Google), Adobe, Oracle, and Meta have flagged significant AI-related risks in their SEC filings. Concerns range from misinformation, copyright lawsuits, competition failures, to potential negative impacts on human rights and privacy.</li>
<li><strong>Nvidia</strong>: Warned about AI misuse leading to restrictions, a risk materialized when the US tightened chip export controls to China.</li>
</ul>
<p><strong>Stock Impact:</strong></p>
<ul>
<li><strong>Microsoft</strong>: Despite risks, strong in cloud computing and AI innovation.</li>
<li><strong>Alphabet</strong>: Emission concerns and potential regulatory scrutiny but remains a leader in AI.</li>
<li><strong>Adobe</strong>: Concerns over AI impacting creative workforce and software demand.</li>
<li><strong>Oracle</strong>: Fears of AI underperformance against competitors.</li>
<li><strong>Meta</strong>: Risks of AI misinformation and regulatory scrutiny.</li>
</ul>
<p><strong>Action:</strong></p>
<ul>
<li><strong>Microsoft and Alphabet</strong>: Hold due to strong positions and innovation despite regulatory concerns.</li>
<li><strong>Adobe and Oracle</strong>: Consider reducing exposure due to competitive and demand risks.</li>
<li><strong>Meta</strong>: Reduce exposure due to reputational and regulatory risks.</li>
</ul>
<h3 id="media-industry-paramount-and-skydance-media">Media Industry: Paramount and Skydance Media</h3>
<p><strong>Current Events:</strong></p>
<ul>
<li>Paramount and Skydance Media are in renewed merger negotiations after previous failed talks. The outcome of these negotiations could significantly impact Paramount's stock, which has already fallen over 10% in the past month.</li>
</ul>
<p><strong>Stock Impact:</strong></p>
<ul>
<li><strong>Paramount</strong>: Volatility due to ongoing negotiations and investor uncertainty.</li>
</ul>
<p><strong>Action:</strong></p>
<ul>
<li><strong>Hold or Reduce Exposure</strong>: Due to high volatility and uncertainty surrounding the merger.</li>
</ul>
<h3 id="electric-vehicles-tesla">Electric Vehicles: Tesla</h3>
<p><strong>Current Events:</strong></p>
<ul>
<li>Tesla delivered nearly 444,000 vehicles in Q2 2024, a 14% increase from the previous quarter. Despite high borrowing costs and competition, Tesla's stock has gained nearly 40% in the past month.</li>
</ul>
<p><strong>Stock Impact:</strong></p>
<ul>
<li><strong>Tesla</strong>: Positive growth trajectory with increased deliveries and advancements in self-driving technology.</li>
</ul>
<p><strong>Action:</strong></p>
<ul>
<li><strong>Buy or Hold</strong>: The recent performance and growth potential make it a solid long-term investment.</li>
</ul>
<h3 id="notable-companies-apple">Notable Companies: Apple</h3>
<p><strong>Current Events:</strong></p>
<ul>
<li>Apple is integrating ChatGPT into its devices and has secured an observer seat on OpenAI’s board, indicating a significant push into AI technology.</li>
</ul>
<p><strong>Stock Impact:</strong></p>
<ul>
<li><strong>Apple</strong>: Strong position in AI and consumer electronics, with promising growth prospects.</li>
</ul>
<p><strong>Action:</strong></p>
<ul>
<li><strong>Buy or Hold</strong>: Continuous innovation and strategic moves in AI support long-term growth.</li>
</ul>
<h3 id="market-summary-recommendations">Market Summary Recommendations:</h3>
<ol>
<li><strong>Microsoft and Alphabet</strong>: Hold. Strong market positions despite AI-related risks and regulatory scrutiny.</li>
<li><strong>Adobe and Oracle</strong>: Reduce exposure. Competitive pressures and demand uncertainties.</li>
<li><strong>Meta</strong>: Reduce exposure. Reputational risks and regulatory challenges.</li>
<li><strong>Paramount</strong>: Hold or reduce exposure. High volatility due to merger negotiations.</li>
<li><strong>Tesla</strong>: Buy or hold. Positive growth in vehicle deliveries and technology advancements.</li>
<li><strong>Apple</strong>: Buy or hold. Strong AI integration and continuous innovation.</li>
</ol>

"""""
),
            ["""2024-07-16-Navigating-Market-Twists-Top-Long-Term-Stock-Picks-and-Risks"""] = (new Dictionary<string, string> { ["path"]="Investing",["""title"""] =
"""""
 Navigating Market Twists Top Long-Term Stock Picks and Risks
""""",
["""date"""] =
"""""
 2024-07-16
""""",
["""tags"""] =
"""""
 stocks
""""",
["""categories"""] =
"""""
 investing
""""",
 },
"""""
<h3 id="big-tech-amazon-microsoft-and-google">Big Tech: Amazon, Microsoft, and Google</h3>
<p><strong>Current Events:</strong></p>
<ul>
<li><strong>Amazon</strong>: Announced it achieved 100% clean energy for its operations seven years ahead of schedule by investing in over 500 solar and wind projects worldwide. However, critics argue its reliance on renewable energy certificates (RECs) may inflate its environmental achievements.</li>
<li><strong>Microsoft</strong>: Aims to be carbon-negative by 2030 and signed a deal to buy 500,000 metric tonnes of carbon dioxide removal credits over six years.</li>
<li><strong>Google</strong>: Plans to power its Nevada data centers with geothermal energy and aims to operate data centers and office campuses on 24/7 carbon-free energy by 2030.</li>
</ul>
<p><strong>Stock Impact:</strong></p>
<ul>
<li><strong>Amazon</strong>: The move to 100% clean energy is positive for its sustainability image, which might attract ESG-focused investors. However, scrutiny over its use of RECs could lead to some volatility.</li>
<li><strong>Microsoft</strong>: The commitment to carbon-negative goals and investment in carbon removal credits is favorable for long-term sustainability but may face scrutiny regarding actual impact.</li>
<li><strong>Google</strong>: The ambitious plans for 24/7 carbon-free energy and innovative use of geothermal energy reflect strong environmental leadership, potentially attracting more ESG investments.</li>
</ul>
<p><strong>Action:</strong></p>
<ul>
<li><strong>Hold</strong>: Given the long-term commitments and potential scrutiny over environmental claims, maintaining current positions while monitoring developments is advisable.</li>
</ul>
<h3 id="pharmaceutical-sector-eli-lilly">Pharmaceutical Sector: Eli Lilly</h3>
<p><strong>Current Events:</strong></p>
<ul>
<li>The Federal Trade Commission (FTC) released a critical report on Pharmacy Benefit Managers (PBMs) for price hikes and squeezing out local pharmacies.</li>
<li>Eli Lilly announced its acquisition of Morphic Holding for $3.2 billion, which includes Morphic’s experimental medication for inflammatory bowel disease.</li>
</ul>
<p><strong>Stock Impact:</strong></p>
<ul>
<li><strong>Eli Lilly</strong>: The FTC report on PBMs might create some regulatory risk, but the acquisition of Morphic Holding indicates strong growth potential in new therapeutic areas.</li>
</ul>
<p><strong>Action:</strong></p>
<ul>
<li><strong>Buy or Hold</strong>: The acquisition and growth in new medication areas support a positive outlook. Regulatory risks from the FTC report should be monitored.</li>
</ul>
<h3 id="electric-vehicles-tesla">Electric Vehicles: Tesla</h3>
<p><strong>Current Events:</strong></p>
<ul>
<li>Tesla’s EV market share in the US slipped below 50% for the first time in Q2, with competitors gaining traction.</li>
<li>Despite the market share drop, Tesla’s stock price has gained roughly 52% in the past month.</li>
</ul>
<p><strong>Stock Impact:</strong></p>
<ul>
<li><strong>Tesla</strong>: The drop in market share signals increased competition in the EV market. However, the significant stock price gain suggests investor confidence in Tesla’s long-term growth.</li>
</ul>
<p><strong>Action:</strong></p>
<ul>
<li><strong>Hold or Slightly Reduce Exposure</strong>: Considering the increased competition, it might be wise to hold or slightly reduce exposure to manage risk.</li>
</ul>
<h3 id="aerospace-boeing">Aerospace: Boeing</h3>
<p><strong>Current Events:</strong></p>
<ul>
<li>Boeing is navigating talks with the US Department of Defense after agreeing to a guilty plea for a criminal fraud conspiracy charge related to the 737 MAX crashes.</li>
</ul>
<p><strong>Stock Impact:</strong></p>
<ul>
<li><strong>Boeing</strong>: The guilty plea and potential impact on government contracts present significant risks. The stock is down roughly 27% this year.</li>
</ul>
<p><strong>Action:</strong></p>
<ul>
<li><strong>Sell or Hold with Caution</strong>: Given the legal issues and stock decline, reducing exposure or holding with caution is recommended.</li>
</ul>
<h3 id="summary-recommendations">Summary Recommendations:</h3>
<ol>
<li><strong>Amazon, Microsoft, and Google</strong>: Hold due to strong sustainability commitments but monitor for potential scrutiny and regulatory changes.</li>
<li><strong>Eli Lilly</strong>: Buy or hold, given the positive growth potential from new acquisitions and strong market position.</li>
<li><strong>Tesla</strong>: Hold or slightly reduce exposure due to increased competition despite recent stock gains.</li>
<li><strong>Boeing</strong>: Sell or hold with caution due to ongoing legal issues and stock performance concerns.</li>
</ol>

"""""
),
            ["""2024-07-19-Navigating-Market-Twists-Top-Long-Term-Stock-Picks-and-Risks"""] = (new Dictionary<string, string> { ["path"]="Investing",["""title"""] =
"""""
 Navigating Market Twists Top Long-Term Stock Picks and Risks
""""",
["""date"""] =
"""""
 2024-07-19
""""",
["""tags"""] =
"""""
 stocks
""""",
["""categories"""] =
"""""
 investing
""""",
 },
"""""
<h3 id="tech-and-media-stocks-google-nvidia-apple-microsoft-alphabet">Tech and Media Stocks: Google, Nvidia, Apple, Microsoft, Alphabet</h3>
<p><strong>Current Events:</strong></p>
<ul>
<li><strong>Google</strong>: Alphabet, Google's parent company, is in advanced talks to acquire cybersecurity startup Wiz for around $23 billion. This would be Alphabet’s largest acquisition ever.</li>
<li><strong>Nvidia, Apple, Microsoft</strong>: The US is considering stricter trade restrictions against China, which has caused a significant sell-off in microchip stocks, impacting the &quot;Magnificent 7&quot; tech giants, including Nvidia, Apple, and Microsoft.</li>
</ul>
<p><strong>Stock Impact:</strong></p>
<ul>
<li><strong>Google (Alphabet)</strong>: The potential acquisition of Wiz could bolster Alphabet's cloud computing efforts and enhance its cybersecurity capabilities. However, antitrust scrutiny remains a risk.</li>
<li><strong>Nvidia, Apple, Microsoft</strong>: The potential US trade restrictions against China have led to stock volatility. This could result in further declines if restrictions are implemented, but these companies have robust long-term growth prospects.</li>
</ul>
<p><strong>Action:</strong></p>
<ul>
<li><strong>Google (Alphabet)</strong>: <strong>Buy or Hold</strong>. The acquisition of Wiz could provide significant growth in the cybersecurity space. Monitor antitrust developments.</li>
<li><strong>Nvidia, Apple, Microsoft</strong>: <strong>Hold or Reduce Exposure</strong>. Due to potential regulatory impacts and current market volatility, consider holding or slightly reducing exposure to manage risk.</li>
</ul>
<h3 id="cryptocurrency-and-energy-stocks-crypto-stocks-oil-majors">Cryptocurrency and Energy Stocks: Crypto Stocks, Oil Majors</h3>
<p><strong>Current Events:</strong></p>
<ul>
<li>Increased support for a Trump 2.0 presidency has led to a rise in stocks aligned with Trump’s policies, including cryptocurrency and the energy sector.</li>
<li>Elon Musk is backing Trump with substantial financial support.</li>
</ul>
<p><strong>Stock Impact:</strong></p>
<ul>
<li><strong>Crypto Stocks</strong>: The optimism surrounding a potential Trump presidency has led to a surge in crypto stocks.</li>
<li><strong>Oil Majors</strong>: Similarly, the energy sector, particularly oil majors, have seen positive impacts due to expectations of deregulation and increased drilling under Trump 2.0.</li>
</ul>
<p><strong>Action:</strong></p>
<ul>
<li><strong>Crypto Stocks</strong>: <strong>Buy or Hold</strong>. The political support and potential deregulation under a Trump presidency could provide significant upside.</li>
<li><strong>Oil Majors</strong>: <strong>Buy or Hold</strong>. Increased oil drilling and reduced regulation could drive growth in this sector.</li>
</ul>
<h3 id="semiconductor-stocks-general-sector">Semiconductor Stocks: General Sector</h3>
<p><strong>Current Events:</strong></p>
<ul>
<li>The US might impose stricter trade restrictions on China regarding semiconductor technology, leading to a significant decline in related stocks.</li>
</ul>
<p><strong>Stock Impact:</strong></p>
<ul>
<li><strong>Semiconductor Sector</strong>: The uncertainty surrounding potential trade restrictions has caused market volatility and a steep decline in semiconductor stocks.</li>
</ul>
<p><strong>Action:</strong></p>
<ul>
<li><strong>Hold or Reduce Exposure</strong>. The potential for stricter trade restrictions presents significant risk. Consider holding your current positions or reducing exposure to mitigate potential losses.</li>
</ul>
<h3 id="spacex-and-x-formerly-twitter">SpaceX and X (formerly Twitter)</h3>
<p><strong>Current Events:</strong></p>
<ul>
<li>Elon Musk is relocating the headquarters of SpaceX and X to Texas, citing issues with California's new law.</li>
</ul>
<p><strong>Stock Impact:</strong></p>
<ul>
<li><strong>SpaceX and X</strong>: The move could streamline operations and reduce costs, potentially benefiting both companies.</li>
</ul>
<p><strong>Action:</strong></p>
<ul>
<li><strong>Hold</strong>. The relocation may have positive long-term operational benefits, but there are no immediate impacts requiring action.</li>
</ul>
<h3 id="match-group">Match Group</h3>
<p><strong>Current Events:</strong></p>
<ul>
<li>Activist investor Starboard Value has acquired a 6.5% stake in Match Group, pushing for changes including product innovation and cost cuts.</li>
</ul>
<p><strong>Stock Impact:</strong></p>
<ul>
<li><strong>Match Group</strong>: Shares have gained following Starboard’s involvement, with potential for further growth if proposed changes are implemented.</li>
</ul>
<p><strong>Action:</strong></p>
<ul>
<li><strong>Buy or Hold</strong>. The involvement of an activist investor could lead to positive changes and growth. Consider buying or holding based on the potential for improved performance.</li>
</ul>
<h3 id="summary-recommendations">Summary Recommendations:</h3>
<ol>
<li><strong>Google (Alphabet)</strong>: Buy or hold due to potential growth from the Wiz acquisition.</li>
<li><strong>Nvidia, Apple, Microsoft</strong>: Hold or reduce exposure due to potential regulatory impacts.</li>
<li><strong>Crypto Stocks</strong>: Buy or hold, driven by political support and potential deregulation.</li>
<li><strong>Oil Majors</strong>: Buy or hold, benefiting from potential deregulation and increased drilling.</li>
<li><strong>Semiconductor Sector</strong>: Hold or reduce exposure due to the risk of stricter trade restrictions.</li>
<li><strong>SpaceX and X</strong>: Hold, with potential long-term benefits from relocation.</li>
<li><strong>Match Group</strong>: Buy or hold, with potential growth from activist investor involvement.</li>
</ol>

"""""
),
            ["""2024-07-29-Navigating-Market-Twists-Top-Long-Term-Stock-Picks-and-Risks"""] = (new Dictionary<string, string> { ["path"]="Investing",["""title"""] =
"""""
 Navigating Market Twists Top Long-Term Stock Picks and Risks
""""",
["""date"""] =
"""""
 2024-07-20
""""",
["""tags"""] =
"""""
 stocks
""""",
["""categories"""] =
"""""
 investing
""""",
 },
"""""
<h3 id="analysis-of-your-stock-portfolio-based-on-market-news">Analysis of Your Stock Portfolio Based on Market News</h3>
<h4 id="tesla-inc">1. <strong>Tesla Inc.</strong></h4>
<p><strong>Current Events:</strong></p>
<ul>
<li>Tesla reported a 45% year-on-year drop in Q2 profit.</li>
<li>Operating margin decreased to 6.3%, down from 9.6%.</li>
<li>Struggles with sluggish consumer demand and a price war, leading to reduced profits.</li>
<li>Elon Musk's political endorsements might be alienating Tesla's early customer base.</li>
<li>Delay in unveiling the driverless taxi design from August to October 2024.</li>
</ul>
<p><strong>Stock Impact:</strong></p>
<ul>
<li>The significant drop in profit and operational challenges indicate short-term financial instability.</li>
<li>Political affiliations may negatively affect Tesla's brand perception, particularly among environmentally conscious customers.</li>
<li>The delay in the driverless taxi project could dampen investor enthusiasm, as this is a key growth area.</li>
</ul>
<p><strong>Action:</strong></p>
<ul>
<li><strong>Hold or Reduce Exposure</strong>: Consider holding your position or reducing exposure due to the potential for continued volatility and market uncertainty.</li>
</ul>
<h4 id="crowdstrike">2. <strong>CrowdStrike</strong></h4>
<p><strong>Current Events:</strong></p>
<ul>
<li>A software update caused a major outage, impacting millions of devices and leading to significant operational disruptions worldwide.</li>
<li>The incident has led to a substantial loss in share value, with a more than 33% drop over the past month.</li>
<li>The aftermath of the outage could lead to reputational damage and loss of trust among customers.</li>
</ul>
<p><strong>Stock Impact:</strong></p>
<ul>
<li>The significant operational failure has likely damaged CrowdStrike's reputation and could impact future business prospects.</li>
<li>Potential financial liabilities due to compensation claims and loss of business.</li>
</ul>
<p><strong>Action:</strong></p>
<ul>
<li><strong>Sell or Hold with Caution</strong>: Given the sharp decline in share price and potential long-term impact on the company's reputation, consider selling or holding with caution.</li>
</ul>
<h4 id="spotify">3. <strong>Spotify</strong></h4>
<p><strong>Current Events:</strong></p>
<ul>
<li>Spotify exceeded earnings expectations, reporting a record profit of €1.11 billion for Q2 2024.</li>
<li>The company saw a 45% profit increase and a rise in paying subscribers to 246 million.</li>
</ul>
<p><strong>Stock Impact:</strong></p>
<ul>
<li>The positive earnings report and growth in subscribers indicate strong business performance and growth potential.</li>
</ul>
<p><strong>Action:</strong></p>
<ul>
<li><strong>Buy or Hold</strong>: Consider buying or holding your position, as the company shows strong growth prospects and financial stability.</li>
</ul>
<h4 id="alphabet-google">4. <strong>Alphabet (Google)</strong></h4>
<p><strong>Current Events:</strong></p>
<ul>
<li>Mixed Q2 earnings report: met overall revenue and earnings expectations, but YouTube ad revenue fell short.</li>
<li>Google Cloud outperformed expectations, while YouTube's performance was disappointing.</li>
</ul>
<p><strong>Stock Impact:</strong></p>
<ul>
<li>The mixed results may cause short-term fluctuations in stock price, but the strength in Google Cloud provides a positive long-term outlook.</li>
</ul>
<p><strong>Action:</strong></p>
<ul>
<li><strong>Hold</strong>: Maintain your position, as the company's diverse revenue streams and strong presence in cloud services provide stability.</li>
</ul>
<h4 id="disney">5. <strong>Disney</strong></h4>
<p><strong>Current Events:</strong></p>
<ul>
<li>Success of &quot;Inside Out 2&quot; with record-breaking global ticket sales, becoming the highest-grossing animated film of all time.</li>
</ul>
<p><strong>Stock Impact:</strong></p>
<ul>
<li>The box office success demonstrates Disney's strong brand and potential for revenue growth from its entertainment content.</li>
</ul>
<p><strong>Action:</strong></p>
<ul>
<li><strong>Buy or Hold</strong>: The positive reception of recent releases suggests strong future earnings potential, making Disney a good buy or hold option.</li>
</ul>
<h3 id="summary-recommendations">Summary Recommendations:</h3>
<ol>
<li><strong>Tesla</strong>: Hold or reduce exposure due to profit decline and market uncertainty.</li>
<li><strong>CrowdStrike</strong>: Sell or hold with caution due to operational issues and potential reputational damage.</li>
<li><strong>Spotify</strong>: Buy or hold, supported by strong financial performance and growth in subscribers.</li>
<li><strong>Alphabet</strong>: Hold, given mixed earnings results but strong cloud growth.</li>
<li><strong>Disney</strong>: Buy or hold, supported by successful content releases and strong brand presence.</li>
</ol>

"""""
),
            ["""2024-08-05-Navigating-Market-Twists-Top-Long-Term-Stock-Picks-and-Risks"""] = (new Dictionary<string, string> { ["path"]="Investing",["""title"""] =
"""""
 Navigating Market Twists Top Long-Term Stock Picks and Risks
""""",
["""date"""] =
"""""
 2024-08-05
""""",
["""tags"""] =
"""""
 stocks
""""",
["""categories"""] =
"""""
 investing
""""",
 },
"""""
<h3 id="aviation-industry-boeing-airbus-and-embraer">Aviation Industry: Boeing, Airbus, and Embraer</h3>
<p><strong>Current Events:</strong></p>
<ul>
<li><strong>Boeing</strong>: Recently appointed a new CEO, Kelly Ortberg, as the company struggles with multiple crises, including safety concerns, financial losses, and legal issues. Boeing reported a $1.4 billion loss in Q2 2024, with a 15% drop in revenue year-over-year.</li>
<li><strong>Airbus</strong>: Under criminal investigation in the UK for potential export control violations. Airbus also faced reduced order numbers at the Farnborough Airshow due to supply chain issues.</li>
<li><strong>Embraer</strong>: Outperformed expectations with an 88% increase in Q2 2024 deliveries, and the stock has surged over 74% this year. The company shows strong revenue growth, projected at 28% for the year.</li>
</ul>
<p><strong>Stock Impact:</strong></p>
<ul>
<li><strong>Boeing</strong>: Ongoing challenges and financial losses suggest continued volatility. The negative sentiment may weigh on the stock.</li>
<li><strong>Airbus</strong>: Legal issues could negatively impact stock performance, though specifics are still unfolding.</li>
<li><strong>Embraer</strong>: Strong growth and increasing deliveries position it favorably in the market.</li>
</ul>
<p><strong>Action:</strong></p>
<ul>
<li><strong>Boeing</strong>: <strong>Sell or Hold with Caution</strong>. Given the company’s current challenges, consider reducing exposure.</li>
<li><strong>Airbus</strong>: <strong>Hold with Caution</strong>. Uncertainty around legal issues may cause volatility.</li>
<li><strong>Embraer</strong>: <strong>Buy or Hold</strong>. Strong performance and positive outlook make it a good candidate for continued investment.</li>
</ul>
<h3 id="beverage-industry-diageo">Beverage Industry: Diageo</h3>
<p><strong>Current Events:</strong></p>
<ul>
<li>Diageo reported a decline in organic net sales, the first since the pandemic's onset, primarily due to weakness in Latin America and the Caribbean. However, Guinness saw a 6% increase in sales, with notable growth in its non-alcoholic version.</li>
</ul>
<p><strong>Stock Impact:</strong></p>
<ul>
<li><strong>Diageo</strong>: The overall decline in sales might pressure the stock, but growth in popular brands like Guinness provides a silver lining.</li>
</ul>
<p><strong>Action:</strong></p>
<ul>
<li><strong>Hold or Buy Selectively</strong>: While the general outlook is mixed, investing in Diageo's successful segments like Guinness could be a strategic play.</li>
</ul>
<h3 id="cybersecurity-crowdstrike">Cybersecurity: CrowdStrike</h3>
<p><strong>Current Events:</strong></p>
<ul>
<li>CrowdStrike faces significant challenges, including a nearly 9.7% drop in stock price following legal action from Delta Air Lines over an outage. The stock is down over 40% in the past month.</li>
</ul>
<p><strong>Stock Impact:</strong></p>
<ul>
<li><strong>CrowdStrike</strong>: Ongoing legal issues and financial losses have created significant negative sentiment around the stock.</li>
</ul>
<p><strong>Action:</strong></p>
<ul>
<li><strong>Sell or Hold with Caution</strong>: The current challenges and potential liabilities suggest it may be prudent to reduce exposure.</li>
</ul>
<h3 id="social-media-meta-platforms">Social Media: Meta Platforms</h3>
<p><strong>Current Events:</strong></p>
<ul>
<li>Meta is under federal scrutiny for running ads that lead to illegal drug marketplaces. Despite efforts to control these issues, Meta continues to face regulatory challenges.</li>
</ul>
<p><strong>Stock Impact:</strong></p>
<ul>
<li><strong>Meta</strong>: Ongoing scrutiny and legal issues could contribute to stock volatility.</li>
</ul>
<p><strong>Action:</strong></p>
<ul>
<li><strong>Hold with Caution</strong>: Regulatory risks may impact the stock, but Meta's overall market position remains strong.</li>
</ul>
<h3 id="summary-recommendations">Summary Recommendations:</h3>
<ol>
<li><strong>Boeing</strong>: Sell or hold with caution due to financial and legal challenges.</li>
<li><strong>Airbus</strong>: Hold with caution, considering legal uncertainties.</li>
<li><strong>Embraer</strong>: Buy or hold, benefiting from strong performance and outlook.</li>
<li><strong>Diageo</strong>: Hold or buy selectively, focusing on strong-performing segments.</li>
<li><strong>CrowdStrike</strong>: Sell or hold with caution, given current challenges.</li>
<li><strong>Meta Platforms</strong>: Hold with caution, balancing strong market position with regulatory risks.</li>
</ol>

"""""
),
            ["""2024-08-09-Navigating-Market-Twists-Top-Long-Term-Stock-Picks-and-Risks"""] = (new Dictionary<string, string> { ["path"]="Investing",["""title"""] =
"""""
 Navigating Market Twists Top Long-Term Stock Picks and Risks
""""",
["""date"""] =
"""""
 2024-08-09
""""",
["""tags"""] =
"""""
 stocks
""""",
["""categories"""] =
"""""
 investing
""""",
 },
"""""
<h3 id="stock-analysis-and-recommendations">Stock Analysis and Recommendations</h3>
<h4 id="us-market-general-impact">1. <strong>US Market (General Impact)</strong></h4>
<ul>
<li><p><strong>Current Events:</strong></p>
<ul>
<li>The recent weak US jobs report triggered significant market volatility, leading to a &quot;Manic Monday&quot; where the S&amp;P 500 dropped by 3%. Although there was a partial recovery, uncertainty remains high with upcoming inflation data on 14 August 2024 and another jobs report on 6 September 2024.</li>
<li>The VIX index, a measure of market volatility, hit levels not seen since early in the COVID-19 pandemic and the 2008 financial crisis, indicating heightened fear among investors.</li>
</ul>
</li>
<li><p><strong>Stock Impact:</strong></p>
<ul>
<li><strong>General Market</strong>: High volatility and uncertainty could lead to further market swings. The potential for interest rate cuts might stabilize the market, but there are significant risks tied to upcoming economic data.</li>
</ul>
</li>
<li><p><strong>Action:</strong></p>
<ul>
<li><strong>Hold or Reduce Exposure</strong>: Consider holding your current positions with caution or reducing exposure to manage risk, particularly if your portfolio is heavily weighted in the broader market.</li>
</ul>
</li>
</ul>
<h4 id="google">2. <strong>Google</strong></h4>
<ul>
<li><p><strong>Current Events:</strong></p>
<ul>
<li>Google faces significant legal challenges as a federal judge ruled that it has built an illegal monopoly over online search and advertising. This includes billion-dollar agreements with Apple and Samsung to be the default search engine. Another antitrust trial is set to begin in September 2024 focusing on Google's digital advertising dominance.</li>
</ul>
</li>
<li><p><strong>Stock Impact:</strong></p>
<ul>
<li><strong>Google</strong>: The ongoing legal battles could lead to a prolonged period of uncertainty and potential penalties. A loss in these cases might force Google to alter its business practices significantly, impacting revenue streams.</li>
</ul>
</li>
<li><p><strong>Action:</strong></p>
<ul>
<li><strong>Hold or Reduce Exposure</strong>: Given the legal risks, consider holding your position with caution or reducing exposure to Google, especially if it constitutes a large part of your portfolio.</li>
</ul>
</li>
</ul>
<h4 id="coca-cola">3. <strong>Coca-Cola</strong></h4>
<ul>
<li><p><strong>Current Events:</strong></p>
<ul>
<li>Coca-Cola is under scrutiny from the IRS, facing a potential $16 billion bill in back taxes. This arises from accusations of profit-shifting to low-tax countries, which could significantly impact future profits if the appeal is unsuccessful. The company must pay $6 billion upfront for taxes and interest from 2007 to 2009.</li>
</ul>
</li>
<li><p><strong>Stock Impact:</strong></p>
<ul>
<li><strong>Coca-Cola</strong>: While the immediate impact may be limited, a loss in the appeal could lead to larger tax liabilities, affecting long-term profitability.</li>
</ul>
</li>
<li><p><strong>Action:</strong></p>
<ul>
<li><strong>Hold or Cautiously Monitor</strong>: Continue holding Coca-Cola but closely monitor the legal developments. The stock’s recent performance has been strong, but future risks may warrant reassessment.</li>
</ul>
</li>
</ul>
<h4 id="novo-nordisk">4. <strong>Novo Nordisk</strong></h4>
<ul>
<li><p><strong>Current Events:</strong></p>
<ul>
<li>Novo Nordisk disappointed investors by lowering its profit outlook despite a strong 55% sales increase for its obesity drug Wegovy. The company faces growing competition in the weight-loss drug market.</li>
</ul>
</li>
<li><p><strong>Stock Impact:</strong></p>
<ul>
<li><strong>Novo Nordisk</strong>: The lowered profit outlook and increasing competition have caused a 7% drop in stock value. The company's growth prospects may be more limited than previously expected.</li>
</ul>
</li>
<li><p><strong>Action:</strong></p>
<ul>
<li><strong>Hold or Reduce Exposure</strong>: Given the lowered outlook and competitive pressures, consider holding or reducing exposure to Novo Nordisk, especially if it represents a significant portion of your portfolio.</li>
</ul>
</li>
</ul>
<h3 id="summary-recommendations">Summary Recommendations:</h3>
<ol>
<li><strong>US Market (General)</strong>: Hold or reduce exposure due to high volatility and upcoming economic data risks.</li>
<li><strong>Google</strong>: Hold or reduce exposure due to significant legal risks and potential long-term impact on business practices.</li>
<li><strong>Coca-Cola</strong>: Hold and monitor closely, considering the ongoing tax dispute which could affect future earnings.</li>
<li><strong>Novo Nordisk</strong>: Hold or reduce exposure as the company faces increased competition and a lowered profit outlook.</li>
</ol>

"""""
),
            ["""2024-08-23-Navigating-Market-Twists-Top-Long-Term-Stock-Picks-and-Risks"""] = (new Dictionary<string, string> { ["path"]="Investing",["""title"""] =
"""""
 Navigating Market Twists Top Long-Term Stock Picks and Risks
""""",
["""date"""] =
"""""
 2024-08-23
""""",
["""tags"""] =
"""""
 stocks
""""",
["""categories"""] =
"""""
 investing
""""",
 },
"""""
<h3 id="market-analysis-and-insights">Market Analysis and Insights</h3>
<h4 id="us-market-performance">1. <strong>US Market Performance</strong></h4>
<ul>
<li><p><strong>Current Events:</strong></p>
<ul>
<li>After a sharp downturn on 4 August 2024, dubbed 'Manic Monday,' the US stock market has rebounded impressively. The S&amp;P 500 and Nasdaq have experienced eight consecutive days of gains, recovering losses driven by earlier recession fears and disappointing jobs data.</li>
<li>This recovery has been primarily led by the 'Magnificent Seven' tech stocks, including Apple, Microsoft, and Nvidia, which together added $1.4 trillion in market cap since 5 August 2024.</li>
</ul>
</li>
<li><p><strong>Market Sentiment:</strong></p>
<ul>
<li>Although there is renewed optimism, concerns remain regarding potential overvaluation in the market. Investors are now looking towards the upcoming Jackson Hole speech by Federal Reserve Chair Jerome Powell, with speculation about a possible interest rate cut.</li>
</ul>
</li>
<li><p><strong>Action:</strong></p>
<ul>
<li><strong>Hold with Caution</strong>: While the market is on an upward trajectory, the looming uncertainty over interest rates and potential overvaluation warrants a cautious approach. Consider holding positions, particularly in the tech sector, while closely monitoring Powell’s upcoming speech.</li>
</ul>
</li>
</ul>
<h4 id="target-corporation-tgt">2. <strong>Target Corporation (TGT)</strong></h4>
<ul>
<li><p><strong>Current Events:</strong></p>
<ul>
<li>Target has exceeded expectations with its Q2 2024 earnings report, posting $25.42 billion in revenue and a 40% increase in net income. The company’s cost-cutting measures, including improved inventory management and strategic price reductions, have boosted profitability despite inflationary pressures.</li>
</ul>
</li>
<li><p><strong>Stock Impact:</strong></p>
<ul>
<li><strong>Target</strong>: The positive earnings report has led to a surge in Target's stock price, reflecting investor confidence in the company’s strategy to navigate inflation and attract value-conscious customers.</li>
</ul>
</li>
<li><p><strong>Action:</strong></p>
<ul>
<li><strong>Buy or Hold</strong>: Target’s strong performance and effective cost management suggest potential for continued growth. Consider buying or holding the stock, particularly as the company continues to adapt well to current economic conditions.</li>
</ul>
</li>
</ul>
<h4 id="siriusxm-siri">3. <strong>SiriusXM (SIRI)</strong></h4>
<ul>
<li><p><strong>Current Events:</strong></p>
<ul>
<li>SiriusXM has made a significant move in the podcasting space by signing a $100 million deal with Alex Cooper, host of ‘Call Her Daddy.’ This follows their earlier acquisition of the ‘SmartLess’ podcast, indicating a strategic push to dominate the podcasting market.</li>
</ul>
</li>
<li><p><strong>Stock Impact:</strong></p>
<ul>
<li><strong>SiriusXM</strong>: The deal has generated positive market reaction, with SiriusXM’s stock seeing a notable increase. This investment in exclusive content could drive long-term subscriber growth and enhance the company’s competitive position in the media industry.</li>
</ul>
</li>
<li><p><strong>Action:</strong></p>
<ul>
<li><strong>Buy or Hold</strong>: With the podcasting industry growing rapidly, SiriusXM’s strategic acquisitions could provide significant upside. Consider buying or holding the stock, especially if you are bullish on media and entertainment investments.</li>
</ul>
</li>
</ul>
<h4 id="amd-amd">4. <strong>AMD (AMD)</strong></h4>
<ul>
<li><p><strong>Current Events:</strong></p>
<ul>
<li>AMD has announced plans to acquire ZT Systems for $4.9 billion in a bid to strengthen its AI chip capabilities. This acquisition is part of AMD's strategy to compete more effectively with Nvidia in the booming AI sector.</li>
</ul>
</li>
<li><p><strong>Stock Impact:</strong></p>
<ul>
<li><strong>AMD</strong>: The acquisition is expected to enhance AMD's market share in AI, an area of significant growth potential. The company's continued investment in AI could position it favorably against competitors.</li>
</ul>
</li>
<li><p><strong>Action:</strong></p>
<ul>
<li><strong>Buy or Hold</strong>: AMD’s strategic expansion into AI is promising. Consider buying or holding the stock to capitalize on potential growth in this high-demand sector.</li>
</ul>
</li>
</ul>
<h3 id="summary-recommendations">Summary Recommendations:</h3>
<ol>
<li><strong>US Market (General)</strong>: Hold with caution due to potential overvaluation and uncertainty surrounding interest rate changes.</li>
<li><strong>Target (TGT)</strong>: Buy or hold based on strong earnings performance and effective cost management.</li>
<li><strong>SiriusXM (SIRI)</strong>: Buy or hold as the company expands its podcasting portfolio, potentially boosting subscriber growth.</li>
<li><strong>AMD (AMD)</strong>: Buy or hold to benefit from AMD's strategic moves in the AI sector.</li>
</ol>

"""""
),
            ["""2024-09-24-Navigating-Market-Twists-Top-Long-Term-Stock-Picks-and-Risks"""] = (new Dictionary<string, string> { ["path"]="Investing",["""title"""] =
"""""
 Navigating Market Twists Top Long-Term Stock Picks and Risks
""""",
["""date"""] =
"""""
 2024-09-24
""""",
["""tags"""] =
"""""
 investing stock-market market-analysis tech-sector energy-sector Tesla Meta Intel Chevron AI-sector financial-advice stock-recommendations buy-hold-sell US-economy inflation Federal-Reserve renewable-energy semiconductor-industry electric-vehicles
""""",
["""categories"""] =
"""""
 investing
""""",
 },
"""""
<h3 id="market-analysis-and-insights">Market Analysis and Insights</h3>
<h4 id="global-market-trends">1. <strong>Global Market Trends</strong></h4>
<ul>
<li><p><strong>Current Events:</strong></p>
<ul>
<li>Global markets have shown mixed reactions as concerns about inflation persist across major economies. In the US, inflation is moderating, with the Federal Reserve adopting a wait-and-see approach to future rate cuts. Meanwhile, Europe's manufacturing sector continues to struggle with rising energy costs, hampering recovery efforts.</li>
<li>US unemployment data remains stable, but there are signals of an economic slowdown, particularly in the real estate sector, where demand for new housing has declined in light of higher mortgage rates.</li>
</ul>
</li>
<li><p><strong>Market Sentiment:</strong></p>
<ul>
<li>Investors are balancing optimism in tech and healthcare sectors against uncertainties in real estate and energy. With the Federal Reserve holding rates steady, many are betting on a future rate cut, which could further bolster growth stocks.</li>
</ul>
</li>
<li><p><strong>Action:</strong></p>
<ul>
<li><strong>Hold with Flexibility</strong>: The general market is on uncertain ground, with risks in real estate and energy sectors. Investors should focus on sectors that continue to perform, such as tech and healthcare, while monitoring inflation data and the Fed's next moves.</li>
</ul>
</li>
</ul>
<h4 id="tesla-tsla">2. <strong>Tesla (TSLA)</strong></h4>
<ul>
<li><p><strong>Current Events:</strong></p>
<ul>
<li>Tesla's Q3 2024 results have exceeded analyst expectations, with strong revenue growth driven by demand for its Model Y vehicles. In addition, Tesla's expanding energy division, which focuses on solar products and battery storage, has also contributed to its recent surge.</li>
</ul>
</li>
<li><p><strong>Stock Impact:</strong></p>
<ul>
<li>Tesla’s stock has risen 15% following the announcement of a new battery technology partnership with Panasonic, signaling confidence in its long-term strategy to dominate the electric vehicle (EV) and renewable energy markets.</li>
</ul>
</li>
<li><p><strong>Action:</strong></p>
<ul>
<li><strong>Buy or Hold</strong>: Tesla’s growth in both its EV and energy sectors continues to strengthen its position in the market. Investors bullish on renewable energy and EV should consider buying or holding for further upside potential.</li>
</ul>
</li>
</ul>
<h4 id="meta-platforms-meta">3. <strong>Meta Platforms (META)</strong></h4>
<ul>
<li><p><strong>Current Events:</strong></p>
<ul>
<li>Meta Platforms has rolled out its highly anticipated AI-based advertising tools, boosting ad revenue potential. This development comes after Meta announced that its monthly active users for the Facebook app exceeded 3 billion for the first time in Q3 2024.</li>
</ul>
</li>
<li><p><strong>Stock Impact:</strong></p>
<ul>
<li>Meta's stock has rallied 12% as investors have responded positively to its latest earnings report. However, concerns about regulatory scrutiny over its data privacy practices still loom large.</li>
</ul>
</li>
<li><p><strong>Action:</strong></p>
<ul>
<li><strong>Hold with Caution</strong>: Despite strong growth, Meta faces significant regulatory risk. Investors should remain cautious and monitor any future developments regarding data privacy legislation, especially in the European Union.</li>
</ul>
</li>
</ul>
<h4 id="intel-intc">4. <strong>Intel (INTC)</strong></h4>
<ul>
<li><p><strong>Current Events:</strong></p>
<ul>
<li>Intel has announced the launch of its new line of processors aimed at enhancing AI-driven applications. The company has also confirmed a $20 billion investment in expanding its US semiconductor manufacturing capabilities, aiming to regain its leadership in the chip industry.</li>
</ul>
</li>
<li><p><strong>Stock Impact:</strong></p>
<ul>
<li>Intel’s stock has seen a moderate 7% increase in the wake of these announcements. The company’s renewed focus on AI applications and semiconductor innovation has been well received, although it faces stiff competition from AMD and Nvidia.</li>
</ul>
</li>
<li><p><strong>Action:</strong></p>
<ul>
<li><strong>Buy</strong>: Intel’s investment in AI and semiconductors positions it for long-term growth. Consider buying the stock if you are optimistic about the AI and tech infrastructure sectors.</li>
</ul>
</li>
</ul>
<h4 id="chevron-cvx">5. <strong>Chevron (CVX)</strong></h4>
<ul>
<li><p><strong>Current Events:</strong></p>
<ul>
<li>Chevron has announced a 10% cut in oil production due to declining demand in Europe and Asia. Rising renewable energy adoption and energy efficiency efforts are impacting the company’s fossil fuel business.</li>
</ul>
</li>
<li><p><strong>Stock Impact:</strong></p>
<ul>
<li>Chevron’s stock has been underperforming, with a 6% decline over the past month. Investors are worried about the company’s ability to pivot successfully toward cleaner energy sources.</li>
</ul>
</li>
<li><p><strong>Action:</strong></p>
<ul>
<li><strong>Sell</strong>: Given the declining demand for fossil fuels and Chevron’s struggles to adapt to the renewable energy transition, consider selling if you are looking for more sustainable energy investments.</li>
</ul>
</li>
</ul>
<h3 id="summary-recommendations">Summary Recommendations:</h3>
<ol>
<li><strong>Global Market (General)</strong>: Hold with flexibility as sectors like tech and healthcare outperform, but stay alert to inflation and Fed policies.</li>
<li><strong>Tesla (TSLA)</strong>: Buy or hold based on strong growth in the EV and energy sectors.</li>
<li><strong>Meta Platforms (META)</strong>: Hold with caution due to potential regulatory risks.</li>
<li><strong>Intel (INTC)</strong>: Buy, especially if optimistic about AI and semiconductor innovations.</li>
<li><strong>Chevron (CVX)</strong>: Sell, given challenges in fossil fuel demand and adaptation to renewable energy.</li>
</ol>

"""""
),
            ["""2024-10-13-Navigating-Market-Twists-Top-Long-Term-Stock-Picks-and-Risks"""] = (new Dictionary<string, string> { ["path"]="Investing",["""title"""] =
"""""
 Navigating Market Twists - Market News Highlights and Risks
""""",
["""date"""] =
"""""
 2024-10-13
""""",
["""tags"""] =
"""""
 investing stock-market market-analysis tech-sector labor-market Google Boeing DeepMind labor-strikes monopolies AI-sector financial-advice stock-recommendations buy-hold-sell US-economy tech-monopolies Nobel-Prize Google-Meta
""""",
["""categories"""] =
"""""
 investing
""""",
 },
"""""
<h3 id="market-analysis-and-insights">Market Analysis and Insights</h3>
<h4 id="global-market-trends">1. <strong>Global Market Trends</strong></h4>
<ul>
<li><p><strong>Current Events:</strong></p>
<ul>
<li>The US government intensifies its battle with Big Tech, with the Department of Justice proposing potential remedies to rein in Google’s dominance in the online search space. Potential actions include sharing search data with competitors, blocking agreements like the one with Apple, and even breaking up parts of Google’s business.</li>
<li>Labor disputes weigh heavily on the aerospace sector, with Boeing workers continuing their strike. The company faces mounting financial pressure and a potential downgrade to junk status if the impasse continues.</li>
<li>On a brighter note, AI-driven advancements are recognized globally, with two DeepMind executives winning the Nobel Prize for their work on AlphaFold2.</li>
</ul>
</li>
<li><p><strong>Market Sentiment:</strong></p>
<ul>
<li>Regulatory risks surrounding Big Tech, particularly Google, dominate investor concerns. At the same time, labor strikes in aerospace may have ripple effects on the industry’s financial performance.</li>
<li>Investors are keeping a close watch on AI-driven innovations, which continue to demonstrate significant growth potential.</li>
</ul>
</li>
<li><p><strong>Action:</strong></p>
<ul>
<li><strong>Hold with Caution</strong>: Regulatory challenges for Big Tech, particularly Google, warrant caution. Investors should remain vigilant and monitor the Department of Justice’s next steps, while noting opportunities in AI-related sectors.</li>
</ul>
</li>
</ul>
<h4 id="google-googl">2. <strong>Google (GOOGL)</strong></h4>
<ul>
<li><p><strong>Current Events:</strong></p>
<ul>
<li>The US Department of Justice has laid out potential remedies to curb Google’s search monopoly. The company could face significant structural changes, including a breakup of parts of its operations or an end to deals like its default search engine agreement with Apple.</li>
<li>Despite these challenges, Google’s DeepMind arm has achieved a breakthrough in AI, winning the Nobel Prize in Chemistry for AlphaFold2.</li>
</ul>
</li>
<li><p><strong>Stock Impact:</strong></p>
<ul>
<li>Google's stock is under pressure due to regulatory scrutiny. However, positive news from DeepMind demonstrates the company’s potential in the AI sector, offering some optimism to long-term investors.</li>
</ul>
</li>
<li><p><strong>Action:</strong></p>
<ul>
<li><strong>Hold with Caution</strong>: Regulatory uncertainty presents significant risks to Google’s stock, but AI advancements provide a silver lining. Investors should maintain a cautious stance while keeping an eye on regulatory developments.</li>
</ul>
</li>
</ul>
<h4 id="boeing-ba">3. <strong>Boeing (BA)</strong></h4>
<ul>
<li><p><strong>Current Events:</strong></p>
<ul>
<li>Boeing’s financial struggles continue as its workers strike for higher wages, with demands for a 40% wage increase. Negotiations have stalled, and Boeing’s latest offer was rejected by the union.</li>
<li>The ongoing strike is costing Boeing tens of millions daily, and S&amp;P Global Ratings is considering downgrading the company’s credit to junk status if the situation is not resolved soon.</li>
</ul>
</li>
<li><p><strong>Stock Impact:</strong></p>
<ul>
<li>Boeing’s stock is facing significant downward pressure as the strike drags on. Financial instability, coupled with the threat of a downgrade, may keep investors wary.</li>
</ul>
</li>
<li><p><strong>Action:</strong></p>
<ul>
<li><strong>Sell</strong>: The prolonged strike and potential credit downgrade make Boeing a risky investment at the moment. Consider selling until there is more clarity around labor negotiations and financial recovery.</li>
</ul>
</li>
</ul>
<h4 id="ai-sector-deepmind">4. <strong>AI Sector (DeepMind)</strong></h4>
<ul>
<li><p><strong>Current Events:</strong></p>
<ul>
<li>AI continues to be a bright spot in the tech landscape, with DeepMind's Demis Hassabis and John Jumper winning the Nobel Prize in Chemistry for their work on AlphaFold2. The tool's ability to map human proteins in minutes holds transformative potential for healthcare and pharmaceuticals.</li>
</ul>
</li>
<li><p><strong>Stock Impact:</strong></p>
<ul>
<li>This achievement underscores the growing importance of AI in various industries, particularly in biotech and healthcare, where new breakthroughs could significantly impact long-term growth.</li>
</ul>
</li>
<li><p><strong>Action:</strong></p>
<ul>
<li><strong>Buy or Hold</strong>: Investors bullish on AI should consider opportunities in this sector, as companies like Google (via DeepMind) continue to push the boundaries of what AI can achieve.</li>
</ul>
</li>
</ul>
<h3 id="summary-recommendations">Summary Recommendations:</h3>
<ol>
<li><strong>Global Market (General)</strong>: Hold with caution due to regulatory risks in Big Tech and ongoing labor disputes, but keep an eye on AI-driven sectors for growth opportunities.</li>
<li><strong>Google (GOOGL)</strong>: Hold with caution as regulatory uncertainty continues, but AI advancements offer potential upside in the long run.</li>
<li><strong>Boeing (BA)</strong>: Sell given the ongoing labor strike and potential financial instability.</li>
<li><strong>AI Sector (General)</strong>: Buy or hold, as AI-driven breakthroughs in biotech and other sectors show strong growth potential.</li>
</ol>

"""""
),
            ["""2024-10-23-Navigating-Market-Twists-Top-Long-Term-Stock-Picks-and-Risks"""] = (new Dictionary<string, string> { ["path"]="Investing",["""title"""] =
"""""
 Starbucks Shakeups, Election Influence, and McDonald’s Troubles: Market News Highlights
""""",
["""date"""] =
"""""
 2024-10-23
""""",
["""tags"""] =
"""""
 investing stock-market market-analysis Starbucks McDonalds political-impact consumer-goods financial-recommendations boycott-risks health-crisis
""""",
["""categories"""] =
"""""
 investing
""""",
 },
"""""
<h3 id="market-analysis-and-insights">Market Analysis and Insights</h3>
<h4 id="consumer-goods-and-public-sentiment">1. <strong>Consumer Goods and Public Sentiment</strong></h4>
<ul>
<li><p><strong>Current Events:</strong></p>
<ul>
<li>Starbucks is undergoing a significant shift with a newly appointed CEO, Brian Niccol, calling for a reset in strategy after a fourth-quarter miss on earnings expectations. The brand’s revenue fell 3% year-over-year, and comparable store sales in the US declined by 6%. This dip, coupled with boycotts over perceived political stances in the Middle East, adds complexity to the company’s outlook.</li>
<li>McDonald's is under scrutiny due to an E. coli outbreak linked to onions used in its products, which has raised health concerns and triggered a stock decline of over 6%.</li>
</ul>
</li>
<li><p><strong>Market Sentiment:</strong></p>
<ul>
<li>The response to Starbucks' political associations is impacting its sales across several key markets, with implications for consumer sentiment in the broader sector.</li>
<li>Health-related incidents tied to food safety in fast food, as seen with McDonald's, can severely affect brand trust and sales.</li>
</ul>
</li>
<li><p><strong>Action:</strong></p>
<ul>
<li><strong>Hold for Review</strong>: Both Starbucks and McDonald's face uncertainties that warrant caution. For Starbucks, monitor its response to boycotts and strategic adjustments under Niccol’s leadership. In McDonald's case, food safety concerns could influence its stock in the short term.</li>
</ul>
</li>
</ul>
<h4 id="political-tides-and-business-strategy">2. <strong>Political Tides and Business Strategy</strong></h4>
<ul>
<li><p><strong>Current Events:</strong></p>
<ul>
<li>With Election Day around the corner, major business leaders are making significant contributions to their preferred candidates. Notably, Elon Musk has endorsed Donald Trump with substantial financial support, while Bill Gates has backed Kamala Harris.</li>
<li>Musk’s political support aligns with his interests in deregulation, a possible focus if Trump is re-elected, while Gates’ quiet support reflects a strategic alliance in tech and infrastructure-focused policy areas.</li>
</ul>
</li>
<li><p><strong>Market Sentiment:</strong></p>
<ul>
<li>Increased politicization of tech executives may create volatility, especially where regulatory changes in tech and energy are concerned.</li>
</ul>
</li>
<li><p><strong>Action:</strong></p>
<ul>
<li><strong>Monitor</strong>: The influence of high-profile endorsements could shift market expectations. Investors should watch for regulatory developments post-election, as they could affect sectors like tech, energy, and finance.</li>
</ul>
</li>
</ul>
<h4 id="fast-food-sector-mcdonalds">3. <strong>Fast Food Sector (McDonald's)</strong></h4>
<ul>
<li><p><strong>Current Events:</strong></p>
<ul>
<li>A potential E. coli outbreak associated with McDonald's onions has led to significant health concerns, a blow to the company already navigating controversies tied to recent political events.</li>
</ul>
</li>
<li><p><strong>Stock Impact:</strong></p>
<ul>
<li>Health risks tied to food safety can harm consumer trust, potentially leading to a decline in sales and stock valuation.</li>
</ul>
</li>
<li><p><strong>Action:</strong></p>
<ul>
<li><strong>Sell or Hold for Review</strong>: Given the serious nature of health incidents, consider selling McDonald’s stock or holding with caution. It may take time for consumer trust and sales to stabilize.</li>
</ul>
</li>
</ul>
<h3 id="summary-recommendations">Summary Recommendations:</h3>
<ol>
<li><strong>Consumer Goods (General)</strong>: Hold or review, as market risks from political sentiment and health crises can have complex and lasting effects on brand value.</li>
<li><strong>Tech Sector (Political Influence)</strong>: Monitor regulatory developments in response to endorsements, as this may impact stock in the tech sector, especially for companies aligned with political changes.</li>
<li><strong>McDonald's (MCD)</strong>: Sell or hold due to the current health crisis affecting consumer confidence.</li>
</ol>

"""""
),
            ["""2024-11-08-Navigating-Market-Twists-Top-Long-Term-Stock-Picks-and-Risks"""] = (new Dictionary<string, string> { ["path"]="Investing",["""title"""] =
"""""
 Trump’s Re-election Sparks Market Reactions Highlights and Insights
""""",
["""date"""] =
"""""
 2024-11-08
""""",
["""tags"""] =
"""""
 investing stock-market market-analysis political-impact US-economy tech-sector financial-strategy
""""",
["""categories"""] =
"""""
 investing
""""",
 },
"""""
<h3 id="market-analysis-and-insights">Market Analysis and Insights</h3>
<h4 id="us-markets-and-economic-policy">1. <strong>US Markets and Economic Policy</strong></h4>
<ul>
<li><p><strong>Current Events:</strong></p>
<ul>
<li>With Donald Trump’s re-election, U.S. equity markets surged as the Dow Jones broke records, rising over 1,500 points. The S&amp;P 500 and Nasdaq also hit new highs, showing strong investor optimism and signaling confidence in Trump’s economic and trade policies.</li>
<li>The Russell 2000, focusing on smaller domestic firms, spiked by nearly 6%, as the market anticipates benefits from potential tax cuts and trade protection measures.</li>
</ul>
</li>
<li><p><strong>Market Sentiment:</strong></p>
<ul>
<li>Investor enthusiasm reflects a belief that Trump’s policies could favor economic growth, especially in small and mid-cap U.S.-based companies. However, long-term stability may depend on balancing these policies with broader trade relations and inflation control.</li>
</ul>
</li>
<li><p><strong>Action:</strong></p>
<ul>
<li><strong>Monitor for Mid to Long-Term Opportunities</strong>: Investors should watch for policy specifics on tax cuts and potential trade restrictions, as these could provide investment opportunities in domestic-focused sectors. However, maintain caution regarding volatility tied to regulatory or policy changes.</li>
</ul>
</li>
</ul>
<h4 id="crypto-sector-surge">2. <strong>Crypto Sector Surge</strong></h4>
<ul>
<li><p><strong>Current Events:</strong></p>
<ul>
<li>Trump’s pro-crypto stance and his intention to support a “bitcoin superpower” image boosted Bitcoin to over $75,000, with a total market gain of 7% in crypto assets. Bitcoin-related companies like Coinbase and MicroStrategy saw notable increases, as did other stocks linked to blockchain and cryptocurrency.</li>
</ul>
</li>
<li><p><strong>Market Sentiment:</strong></p>
<ul>
<li>The market anticipates a potentially favorable regulatory environment for cryptocurrency firms, which may stimulate further investment and growth in the sector. Increased interest from institutional investors could also support Bitcoin’s long-term growth trajectory.</li>
</ul>
</li>
<li><p><strong>Action:</strong></p>
<ul>
<li><strong>Watch for Entry Points in Crypto Assets and Related Stocks</strong>: While the crypto market’s volatility remains a risk, Trump’s support may lay a foundation for favorable regulations, potentially benefiting companies like Coinbase and Bitcoin-focused firms.</li>
</ul>
</li>
</ul>
<h4 id="mortgage-industry-prospects">3. <strong>Mortgage Industry Prospects</strong></h4>
<ul>
<li><p><strong>Current Events:</strong></p>
<ul>
<li>Mortgage giants Freddie Mac and Fannie Mae saw nearly 40% and 30% gains, respectively, as Trump’s victory fueled expectations of renewed efforts toward their privatization. This change could align with the GOP’s goal to shift the mortgage giants away from government control, potentially leading to new dynamics in the housing finance sector.</li>
</ul>
</li>
<li><p><strong>Stock Impact:</strong></p>
<ul>
<li>Investors see privatization as an opportunity to streamline the mortgage market, although concerns over affordability in a high-rate environment remain. Market sentiment could hinge on the regulatory framework established for these entities post-privatization.</li>
</ul>
</li>
<li><p><strong>Action:</strong></p>
<ul>
<li><strong>Consider Long-Term Holds in Mortgage Sector</strong>: Investors with a high tolerance for regulatory risk may consider positions in Freddie Mac and Fannie Mae, as privatization could reshape housing finance dynamics. However, the impact on mortgage rates remains a risk for affordability-sensitive sectors.</li>
</ul>
</li>
</ul>
<h3 id="summary-recommendations">Summary Recommendations</h3>
<ol>
<li><strong>Domestic-Focused Equities</strong>: Monitor policy developments regarding trade and tax cuts, which could benefit U.S.-focused companies in the Russell 2000 index.</li>
<li><strong>Crypto and Blockchain</strong>: Explore investment opportunities in cryptocurrency and blockchain technology stocks as a favorable regulatory environment could emerge.</li>
<li><strong>Mortgage Sector</strong>: Consider the mortgage giants as a speculative opportunity, but weigh potential regulatory risks related to affordability and privatization.</li>
</ol>

"""""
),
            ["""2016-09-27-Applying-machine-learning"""] = (new Dictionary<string, string> { ["path"]="Machine-Learning",["""title"""] =
"""""
 Applying machine learning
""""",
["""date"""] =
"""""
 2016-09-27
""""",
["""tags"""] =
"""""
 machine learning
""""",
["""categories"""] =
"""""
 learning
""""",
 },
"""""
<p>Errors in your predictions can be troubleshooted by:</p>
<ul>
<li>Getting more training examples</li>
<li>Trying smaller sets of features</li>
<li>Trying additional features</li>
<li>Trying polynomial features</li>
<li>Increasing or decreasing λ</li>
</ul>
<p>It is good to use test error factor to understand the correctness of our algorithm:</p>
<p><span class="math">\(\[\text{Test Error}= \dfrac{1}{m_{test}} \sum^{m_{test}}_{i=1} err(h_\Theta(x^{(i)}_{test}), y^{(i)}_{test})\]\)</span></p>
<p>and this factor is calculated using completely separate training set (test set).</p>
<p>Using <strong>Cross Validation Set</strong> our test set will give us an accurate, non-optimistic error.</p>
<p>One example way to break down our dataset into the three sets is:</p>
<ul>
<li>Training set: 60%</li>
<li>Cross validation set: 20%</li>
<li>Test set: 20%
We can now calculate three separate error values for the three different sets.</li>
</ul>
<p>With the Validation Set (note: this method presumes we do not also use the CV set for regularization)</p>
<ol>
<li>Optimize the parameters in Θ using the training set for each polynomial degree.</li>
<li>Find the polynomial degree d with the least error using the cross validation set.</li>
<li>Estimate the generalization error using the test set with <span class="math">\(J_{test}(\Theta^{(d)})\)</span>, (d = theta from polynomial with lower error).</li>
</ol>
<h3 id="diagnosing-bias-vs.variance">Diagnosing Bias vs. Variance</h3>
<p>High bias is underfitting and high variance is overfitting.</p>
<p><img src="../images/features-and-polynom-degree.png" alt="image" /></p>
<h2 id="regularization-and-biasvariance">Regularization and Bias/Variance</h2>
<ul>
<li>Large λ: High bias (underfitting)</li>
<li>Small λ: High variance (overfitting)</li>
</ul>
<p><img src="../images/features-and-polynom-degree-fix2.png" alt="image" /></p>
<p>In order to choose the model and the regularization λ, we need:</p>
<ol>
<li>Create a list of lambda (i.e. λ∈{0,0.01,0.02,0.04,0.08,0.16,0.32,0.64,1.28,2.56,5.12,10.24});</li>
<li>Select a lambda to compute;</li>
<li>Create a model set like degree of the polynomial or others;</li>
<li>Select a model to learn Θ;</li>
<li>Learn the parameter Θ for the model selected, using <span class="math">\(J_{train}(\Theta)\)</span> with λ selected (this will learn Θ for the next step);</li>
<li>Compute the train error using the learned Θ (computed with λ ) on the <span class="math">\(J_{train}(\Theta)\)</span> without regularization or λ = 0;</li>
<li>Compute the cross validation error using the learned Θ (computed with λ) on the <span class="math">\(J_{CV}(\Theta)\)</span> without regularization or λ = 0;</li>
<li>Do this for the entire model set and lambdas, then select the best combo that produces the lowest error on the cross validation set;</li>
<li>Now if you need visualize to help you understand your decision, you can plot to the figure like above with: (λ x Cost <span class="math">\(J_{train}(\Theta)\)</span> and (λ x Cost <span class="math">\(J_{CV}(\Theta)\)</span>);</li>
<li>Now using the best combo Θ and λ, apply it on <span class="math">\(J_{test}(\Theta)\)</span> to see if it has a good generalization of the problem.</li>
<li>To help decide the best polynomial degree and λ to use, we can diagnose with the learning curves.</li>
</ol>
<h3 id="learning-curves">Learning Curves</h3>
<p>If a learning algorithm is suffering from high variance, getting more training data is likely to help.
If a learning algorithm is suffering from high bias, getting more training data will not (by itself) help much.</p>
<p><img src="../images/Learning1.png" alt="image" />
<img src="../images/Learning2.png" alt="image" /></p>
<h3 id="deciding-what-to-do-next-revisited">Deciding What to Do Next Revisited</h3>
<p>Decision process can be broken down as follows:</p>
<ol>
<li>Getting more training examples - Fixes high variance</li>
<li>Trying smaller sets of features - Fixes high variance</li>
<li>Adding features - Fixes high bias</li>
<li>Adding polynomial features - Fixes high bias</li>
<li>Decreasing λ - Fixes high bias</li>
<li>Increasing λ - Fixes high variance</li>
</ol>
<h3 id="diagnosing-neural-networks">Diagnosing Neural Networks</h3>
<ul>
<li>A neural network with fewer parameters is prone to underfitting. It is also computationally cheaper.</li>
<li>A large neural network with more parameters is prone to overfitting. It is also computationally expensive. In this case you can use regularization (increase λ) to address the overfitting.</li>
</ul>
<p>Using a single hidden layer is a good starting default. You can train your neural network on a number of hidden layers using your cross validation set.</p>
<h2 id="error-analysis">Error Analysis</h2>
<p>The recommended approach to solving machine learning problems is:</p>
<ul>
<li>Start with a simple algorithm, implement it quickly, and test it early.</li>
<li>Plot learning curves to decide if more data, more features, etc. will help</li>
<li>Error analysis: manually examine the errors on examples in the cross validation set and try to spot a trend.</li>
</ul>
<p>It's important to get error results as a single, numerical value. Otherwise it is difficult to assess your algorithm's performance.</p>
<h3 id="error-metrics-for-skewed-classes">Error Metrics for Skewed Classes</h3>
<p>Precision:</p>
<p><span class="math">\(\[\dfrac{\text{True Positives}}{\text{Total number of predicted positives}} = \dfrac{\text{True Positives}}{\text{True Positives}+\text{False positives}}\]\)</span></p>
<p>Recall:</p>
<p><span class="math">\(\[\dfrac{\text{True Positives}}{\text{Total number of actual positives}}= \dfrac{\text{True Positives}}{\text{True Positives}+\text{False negatives}}\]\)</span></p>
<h3 id="trading-off-precision-and-recall">Trading Off Precision and Recall</h3>
<p>A better way is to compute the F Score (or F1 score):</p>
<p><span class="math">\(\[\text{F Score} = 2\dfrac{PR}{P + R}\]\)</span></p>
<p>In order for the F Score to be large, both precision and recall must be large. We want to train precision and recall on the cross validation set so as not to bias our test set.</p>
<p>More info:
<a href="https://www.coursera.org/learn/machine-learning">https://www.coursera.org/learn/machine-learning</a></p>

"""""
),
            ["""2016-09-27-Clustering"""] = (new Dictionary<string, string> { ["path"]="Machine-Learning",["""title"""] =
"""""
 Clustering
""""",
["""date"""] =
"""""
 2016-09-27
""""",
["""tags"""] =
"""""
 machine learning
""""",
["""categories"""] =
"""""
 learning
""""",
 },
"""""
<p>Unsupervised learning is contrasted from supervised learning because it uses an unlabeled training set rather than a labeled one.</p>
<h3 id="k-means-algorithm">K-Means Algorithm</h3>
<ol>
<li>Randomly initialize two points in the dataset called the cluster centroids.</li>
<li>Cluster assignment: assign all examples into one of two groups based on which cluster centroid the example is closest to.</li>
<li>Move centroid: compute the averages for all the points inside each of the two cluster centroid groups, then move the cluster centroid points to those averages.</li>
<li>Re-run (2) and (3) until we have found our clusters.</li>
</ol>
<pre><code class="language-none">Randomly initialize K cluster centroids mu(1), mu(2), ..., mu(K)
Repeat:
   for i = 1 to m:
      c(i):= index (from 1 to K) of cluster centroid closest to x(i)
   for k = 1 to K:
      mu(k):= average (mean) of points assigned to cluster k
</code></pre>
<p>The first for-loop is the 'Cluster Assignment' step. We make a vector c where c(i) represents the centroid assigned to example x(i).</p>
<p><span class="math">\(\[c^{(i)} = argmin_k\ ||x^{(i)} - \mu_k||^2\]\)</span></p>
<p><span class="math">\(\[||x^{(i)} - \mu_k|| = ||\quad\sqrt{(x_1^i - \mu_{1(k)})^2 + (x_2^i - \mu_{2(k)})^2 + (x_3^i - \mu_{3(k)})^2 + ...}\quad||\]\)</span></p>
<p>The second for-loop is the 'Move Centroid' step where we move each centroid to the average of its group.</p>
<p><span class="math">\(\[\mu_k = \dfrac{1}{n}[x^{(k_1)} + x^{(k_2)} + \dots + x^{(k_n)}] \in \mathbb{R}^n\]\)</span></p>
<p>After a number of iterations the algorithm will converge, where new iterations do not affect the clusters.</p>
<h3 id="optimization-objective">Optimization Objective</h3>
<p>Using these variables we can define our cost function:</p>
<p><span class="math">\(\[J(c^{(i)},\dots,c^{(m)},\mu_1,\dots,\mu_K) = \dfrac{1}{m}\sum_{i=1}^m ||x^{(i)} - \mu_{c^{(i)}}||^2\]\)</span></p>
<p>With k-means, it is not possible for the cost function to sometimes increase. It should always descend.</p>
<h3 id="random-initialization">Random Initialization</h3>
<ol>
<li>Have K&lt;m. That is, make sure the number of your clusters is less than the number of your training examples.</li>
<li>Randomly pick K training examples. (Not mentioned in the lecture, but also be sure the selected examples are unique).</li>
<li>Set μ1,…,μK equal to these K examples.</li>
</ol>
<h3 id="choosing-the-number-of-clusters">Choosing the Number of Clusters</h3>
<p>Choosing K can be quite arbitrary and ambiguous.</p>
<p>A way to choose K is to observe how well k-means performs on a downstream purpose. In other words, you choose K that proves to be most useful for some goal you're trying to achieve from using these clusters.</p>
<h3 id="dimensionality-reduction">Dimensionality Reduction</h3>
<p>Motivation I: Data Compression</p>
<ol>
<li>We may want to reduce the dimension of our features if we have a lot of redundant data.</li>
<li>To do this, we find two highly correlated features, plot them, and make a new line that seems to describe both features accurately. We place all the new features on this single line.</li>
</ol>
<p>Doing dimensionality reduction will reduce the total data we have to store in computer memory and will speed up our learning algorithm.</p>
<p>Motivation II: Visualization</p>
<p>It is not easy to visualize data that is more than three dimensions. We can reduce the dimensions of our data to 3 or less in order to plot it.</p>
<h3 id="principal-component-analysis-problem-formulation">Principal Component Analysis Problem Formulation</h3>
<p>The most popular dimensionality reduction algorithm is Principal Component Analysis (PCA)</p>
<p>Problem formulation</p>
<p>Given two features, x1 and x2, we want to find a single line that effectively describes both features at once. We then map our old features onto this new line to get a new single feature.</p>
<p>The goal of PCA is to reduce the average of all the distances of every feature to the projection line. This is the projection error.</p>
<p><strong>PCA is not linear regression</strong></p>
<ul>
<li>In linear regression, we are minimizing the squared error from every point to our predictor line. These are vertical distances.</li>
<li>In PCA, we are minimizing the shortest distance, or shortest orthogonal distances, to our data points.</li>
</ul>
<h3 id="principal-component-analysis-algorithm">Principal Component Analysis Algorithm</h3>
<ul>
<li>Given training set: x(1),x(2),…,x(m)</li>
<li>Preprocess (feature scaling/mean normalization):</li>
</ul>
<p><span class="math">\(\[\mu_j = \dfrac{1}{m}\sum^m_{i=1}x_j^{(i)}\]\)</span></p>
<ul>
<li>Replace each <span class="math">\(x_j^{(i)}\)</span> with <span class="math">\(x_j^{(i)} - \mu_j\)</span></li>
<li>If different features on different scales (e.g., x1 = size of house, x2 = number of bedrooms), scale features to have comparable range of values.</li>
</ul>
<ol>
<li>Compute &quot;covariance matrix&quot;</li>
</ol>
<p><span class="math">\(\[Sigma = \dfrac{1}{m}\sum^m_{i=1}(x^{(i)})(x^{(i)})^T\]\)</span></p>
<ol start="2">
<li>Compute &quot;eigenvectors&quot; of covariance matrix Σ</li>
</ol>
<pre><code class="language-none">[U,S,V] = svd(Sigma);
</code></pre>
<ol start="3">
<li>Take the first k columns of the U matrix and compute z</li>
</ol>
<p>Summarize:</p>
<pre><code class="language-none">Sigma = (1/m) * X' * X; % compute the covariance matrix
[U,S,V] = svd(Sigma);   % compute our projected directions
Ureduce = U(:,1:k);     % take the first k directions
Z = X * Ureduce;        % compute the projected data points
</code></pre>
<h3 id="reconstruction-from-compressed-representation">Reconstruction from Compressed Representation</h3>
<p><span class="math">\(\[x_{approx}^{(1)} = U_{reduce} \cdot z^{(1)}\]\)</span></p>
<h3 id="choosing-the-number-of-principal-components">Choosing the Number of Principal Components</h3>
<p>Algorithm for choosing k</p>
<ol>
<li>Try PCA with k=1,2,…</li>
<li>Compute <span class="math">\(U_{reduce}, z, x\)</span></li>
<li>Check the formula given above that 99% of the variance is retained. If not, go to step one and increase k.</li>
</ol>
<h3 id="advice-for-applying-pca">Advice for Applying PCA</h3>
<ul>
<li>Compressions</li>
<li>Reduce space of data</li>
<li>Speed up algorithm</li>
<li>Visualization of data</li>
</ul>
<p><strong>Bad use of PCA</strong>: trying to prevent overfitting.</p>
<p>Don't assume you need to do PCA. <strong>Try your full machine learning algorithm without PCA first</strong>. Then use PCA if you find that you need it.</p>
<p>More info:
<a href="https://www.coursera.org/learn/machine-learning">https://www.coursera.org/learn/machine-learning</a></p>

"""""
),
            ["""2016-11-14-Machine-Learning-Init-Linear-Regression-Gradient-Descent"""] = (new Dictionary<string, string> { ["path"]="Machine-Learning",["""title"""] =
"""""
 Machine Learning Init. Linear Regression. Gradient Descent
""""",
["""date"""] =
"""""
 2016-11-14
""""",
["""tags"""] =
"""""
 machine learning
""""",
["""categories"""] =
"""""
 learning
""""",
 },
"""""
<p>The information is from this <a href="https://www.coursera.org/learn/machine-learning/">course</a>.</p>
<p><a href="https://en.wikipedia.org/wiki/Machine_learning">Machine learning</a> is the subfield of computer science that &quot;gives computers the ability to learn without being explicitly programmed&quot; (Arthur Samuel, 1959).</p>
<p>In general, any machine learning problem can be assigned to one of two broad classifications:</p>
<ul>
<li>supervised learning (&quot;regression&quot; and &quot;classification&quot;)</li>
<li>unsupervised learning</li>
</ul>
<p>In supervised learning, we are given a data set and already know what our correct output should look like, having the idea that there is a relationship between the input and the output.</p>
<p>Unsupervised learning, on the other hand, allows us to approach problems with little or no idea what our results should look like. We can derive structure from data where we don't necessarily know the effect of the variables.</p>
<h3 id="linear-regression-with-one-variable"><a href="https://en.wikipedia.org/wiki/Linear_regression">Linear Regression</a> with One Variable</h3>
<p>In statistics, linear regression is an approach for modeling the relationship between a scalar dependent variable y and one or more explanatory variables (or independent variables) denoted X. The case of one explanatory variable is called simple linear regression. For more than one explanatory variable, the process is called multiple linear regression.</p>
<p><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/3/3a/Linear_regression.svg/438px-Linear_regression.svg.png" alt="Linear regression" /></p>
<p>Hypothesis function has the general form:</p>
<p><span class="math">\(\[\hat{y} = h_\theta(x) = \theta_0 + \theta_1 x\]\)</span></p>
<h3 id="cost-function">Cost Function</h3>
<p>We can measure the accuracy of our hypothesis function by using a cost function. This takes an average (actually a fancier version of an average) of all the results of the hypothesis with inputs from x's compared to the actual output y's.</p>
<p><span class="math">\(\[J(\theta_0, \theta_1) = \dfrac {1}{2m} \displaystyle \sum _{i=1}^m \left ( \hat{y}_{i}- y_{i} \right)^2  = \dfrac {1}{2m} \displaystyle \sum _{i=1}^m \left (h_\theta (x_{i}) - y_{i} \right)^2\]\)</span></p>
<p>If we try to think of it in visual terms, our training data set is scattered on the x-y plane. We are trying to make straight line (defined by <span class="math">\(h_\theta(x)\)</span>) which passes through this scattered set of data. Our objective is to get the best possible line. The best possible line will be such so that the average squared vertical distances of the scattered points from the line will be the least. In the best case, the line should pass through all the points of our training data set. In such a case the value of <span class="math">\(J(\theta_0), (\theta_1 )\)</span> will be 0.</p>
<h3 id="gradient-descent">Gradient Descent</h3>
<p>There is hypothesis function and there are a set of {x, y} values, so we need to find <span class="math">\(\theta_0\)</span> and <span class="math">\(\theta_1\)</span>.</p>
<p>The gradient descent algorithm is:</p>
<p><span class="math">\(\[\theta_j := \theta_j - \alpha \frac{\partial}{\partial \theta_j} J(\theta_0, \theta_1)\]\)</span></p>
<h3 id="gradient-descent-for-linear-regression">Gradient Descent for Linear Regression</h3>
<p><span class="math">\(\[\begin{align*} \text{repeat until convergence: } \lbrace &amp; \newline \theta_0 := &amp; \theta_0 - \alpha \frac{1}{m} \sum\limits_{i=1}^{m}(h_\theta(x_{i}) - y_{i}) \newline \theta_1 := &amp; \theta_1 - \alpha \frac{1}{m} \sum\limits_{i=1}^{m}\left((h_\theta(x_{i}) - y_{i}) x_{i}\right) \newline \rbrace&amp; \end{align*}\]\)</span></p>

"""""
),
            ["""2016-11-24-Linear-Regression-with-Multiple-Variables"""] = (new Dictionary<string, string> { ["path"]="Machine-Learning",["""title"""] =
"""""
 Linear Regression with Multiple Variables
""""",
["""date"""] =
"""""
 2016-11-24
""""",
["""tags"""] =
"""""
 machine learning
""""",
["""categories"""] =
"""""
 learning
""""",
 },
"""""
<p>Hypothesis function looks like:</p>
<p><span class="math">\(\[h_\theta (x) = \theta_0 + \theta_1 x_1 + \theta_2 x_2 + \theta_3 x_3 + \cdots + \theta_n x_n\]\)</span></p>
<p>Vectorized version:</p>
<p><span class="math">\(\[h_\theta(X) = X \theta\]\)</span></p>
<p>Vectorized version of cost function:</p>
<p><span class="math">\(\[J(\theta) = \dfrac {1}{2m} (X\theta - \vec{y})^{T} (X\theta - \vec{y})\]\)</span></p>
<p>Gradient descent:</p>
<p><span class="math">\(\[\begin{align*}&amp; \text{repeat until convergence:} \; \lbrace \newline \; &amp; \theta_j := \theta_j - \alpha \frac{1}{m} \sum\limits_{i=1}^{m} (h_\theta(x^{(i)}) - y^{(i)}) \cdot x_j^{(i)} \;  &amp; \text{for j := 0..n}\newline \rbrace\end{align*}\]\)</span></p>
<p>Vectorized version:</p>
<p><span class="math">\(\[theta := \theta - \frac{\alpha}{m} X^{T} (X\theta - \vec{y})\]\)</span></p>
<h3 id="feature-normalization">Feature Normalization</h3>
<p>We can speed up gradient descent by having each of our input values in roughly the same range. This is because θ will descend quickly on small ranges and slowly on large ranges, and so will oscillate inefficiently down to the optimum when the variables are very uneven.</p>
<p>Two techniques to help with this are feature scaling and mean normalization. Feature scaling involves dividing the input values by the range (i.e. the maximum value minus the minimum value) of the input variable, resulting in a new range of just 1. Mean normalization involves subtracting the average value for an input variable from the values for that input variable, resulting in a new average value for the input variable of just zero. To implement both of these techniques, adjust your input values as shown in this formula:</p>
<p><span class="math">\(\[x_i := \dfrac{x_i - \mu_i}{s_i}\]\)</span></p>
<p>Where <span class="math">\(μ_i\)</span> is the average of all the values for feature (i) and <span class="math">\(s_i\)</span> is the range of values (max - min), or <span class="math">\(s_i\)</span> is the standard deviation.</p>
<h3 id="normal-equation">Normal Equation</h3>
<p>The &quot;Normal Equation&quot; is a method of finding the optimum theta without iteration.</p>
<p><span class="math">\(\[\theta = (X^T X)^{-1}X^T y\]\)</span></p>
<p>Basically it means that we are solving the equation to find minimum. Additional info is <a href="http://eli.thegreenplace.net/2014/derivation-of-the-normal-equation-for-linear-regression">here</a>.</p>
<p>More info:
<a href="https://www.coursera.org/learn/machine-learning">https://www.coursera.org/learn/machine-learning</a></p>

"""""
),
            ["""2016-12-05-Logistic-regression"""] = (new Dictionary<string, string> { ["path"]="Machine-Learning",["""title"""] =
"""""
 Logistic regression
""""",
["""date"""] =
"""""
 2016-12-05
""""",
["""tags"""] =
"""""
 machine learning octave
""""",
["""categories"""] =
"""""
 learning
""""",
 },
"""""
<h3 id="binary-classification">Binary Classification</h3>
<p>The range of values is between 0 or 1.</p>
<p>Hypothesis Representation:</p>
<p><span class="math">\(\[\begin{align*}&amp; h_\theta (x) =  g ( \theta^T x ) \newline \newline&amp; z = \theta^T x \newline&amp; g(z) = \dfrac{1}{1 + e^{-z}}\end{align*}\]\)</span></p>
<p><img src="./images/logisticfunction.png" alt="Logistic_hyp" /></p>
<h3 id="decision-boundary">Decision Boundary</h3>
<p><span class="math">\(\[\begin{align*}&amp; h_\theta(x) \geq 0.5 \rightarrow y = 1 \newline&amp; h_\theta(x) &lt; 0.5 \rightarrow y = 0 \newline\end{align*}\]\)</span></p>
<p>The decision boundary is the line that separates the area where y = 0 and where y = 1. It is created by our hypothesis function.</p>
<h3 id="cost-function">Cost Function</h3>
<p><span class="math">\(\[J(\theta) = - \frac{1}{m} \displaystyle \sum_{i=1}^m [y^{(i)}\log (h_\theta (x^{(i)})) + (1 - y^{(i)})\log (1 - h_\theta(x^{(i)}))]\]\)</span></p>
<h3 id="gradient-descent">Gradient Descent</h3>
<p><span class="math">\(\[\begin{align*} &amp; Repeat \; \lbrace \newline &amp; \; \theta_j := \theta_j - \frac{\alpha}{m} \sum_{i=1}^m (h_\theta(x^{(i)}) - y^{(i)}) x_j^{(i)} \newline &amp; \rbrace \end{align*}\]\)</span></p>
<h3 id="regularized-linear-regression">Regularized Linear Regression</h3>
<p><span class="math">\(\[\begin{align*} &amp; \text{Repeat}\ \lbrace \newline &amp; \ \ \ \ \theta_0 := \theta_0 - \alpha\ \frac{1}{m}\ \sum_{i=1}^m (h_\theta(x^{(i)}) - y^{(i)})x_0^{(i)} \newline &amp; \ \ \ \ \theta_j := \theta_j - \alpha\ \left[ \left( \frac{1}{m}\ \sum_{i=1}^m (h_\theta(x^{(i)}) - y^{(i)})x_j^{(i)} \right) + \frac{\lambda}{m}\theta_j \right] &amp;\ \ \ \ \ \ \ \ \ \ j \in \lbrace 1,2...n\rbrace\newline &amp; \rbrace \end{align*}\]\)</span></p>
<h3 id="regularized-logistic-regression">Regularized Logistic Regression</h3>
<p><span class="math">\(\[J(\theta) = - \frac{1}{m} \sum_{i=1}^m \large[ y^{(i)}\ \log (h_\theta (x^{(i)})) + (1 - y^{(i)})\ \log (1 - h_\theta(x^{(i)}))\large] + \frac{\lambda}{2m}\sum_{j=1}^n \theta_j^2\]\)</span></p>
<p>More info:
<a href="https://www.coursera.org/learn/machine-learning">https://www.coursera.org/learn/machine-learning</a></p>

"""""
),
            ["""2016-12-06-Neural-Networks"""] = (new Dictionary<string, string> { ["path"]="Machine-Learning",["""title"""] =
"""""
 Neural Networks
""""",
["""date"""] =
"""""
 2016-12-06
""""",
["""tags"""] =
"""""
 machine learning
""""",
["""categories"""] =
"""""
 learning
""""",
 },
"""""
<p>Neural networks are limited imitations of how our own brains work. They've had a big recent resurgence because of advances in computer hardware.</p>
<p>In neural networks, we use the same logistic function as in classification: <span class="math">\(\frac{1}{1 + e^{-\theta^Tx}}\)</span>. In neural networks however we sometimes call it a sigmoid (logistic) activation function.</p>
<p>Visually, a simplistic representation looks like:</p>
<div class="math">
\[
\begin{bmatrix}x_0 \newline x_1 \newline x_2 \newline x_3\end{bmatrix}\rightarrow\begin{bmatrix}a_1^{(2)} \newline a_2^{(2)} \newline a_3^{(2)} \newline \end{bmatrix}\rightarrow h_\theta(x)
\]</div>
<p>The values for each of the &quot;activation&quot; nodes is obtained as follows:</p>
<div class="math">
\[
\begin{align*} a_1^{(2)} = g(\Theta_{10}^{(1)}x_0 + \Theta_{11}^{(1)}x_1 + \Theta_{12}^{(1)}x_2 + \Theta_{13}^{(1)}x_3) \newline a_2^{(2)} = g(\Theta_{20}^{(1)}x_0 + \Theta_{21}^{(1)}x_1 + \Theta_{22}^{(1)}x_2 + \Theta_{23}^{(1)}x_3) \newline a_3^{(2)} = g(\Theta_{30}^{(1)}x_0 + \Theta_{31}^{(1)}x_1 + \Theta_{32}^{(1)}x_2 + \Theta_{33}^{(1)}x_3) \newline h_\Theta(x) = a_1^{(3)} = g(\Theta_{10}^{(2)}a_0^{(2)} + \Theta_{11}^{(2)}a_1^{(2)} + \Theta_{12}^{(2)}a_2^{(2)} + \Theta_{13}^{(2)}a_3^{(2)}) \newline \end{align*}
\]</div>
<p>Each layer gets its own matrix of weights, <span class="math">\(\Theta^{(j)}\)</span>.</p>
<p>The dimensions of these matrices of weights is determined as follows:</p>
<div class="math">
\[
\text{If network has $s_j$ units in layer $j$ and $s_{j+1}$ units in layer $j+1$, then $\Theta^{(j)}$ will be of dimension $s_{j+1} \times (s_j + 1)$.}
\]</div>
<h3 id="multiclass-classification">Multiclass Classification</h3>
<div class="math">
\[
\begin{align*}\begin{bmatrix}x_0 \newline x_1 \newline x_2 \newline\cdots \newline x_n\end{bmatrix} \rightarrow\begin{bmatrix}a_0^{(2)} \newline a_1^{(2)} \newline a_2^{(2)} \newline\cdots\end{bmatrix} \rightarrow\begin{bmatrix}a_0^{(3)} \newline a_1^{(3)} \newline a_2^{(3)} \newline\cdots\end{bmatrix} \rightarrow \cdots \rightarrow\begin{bmatrix}h_\Theta(x)_1 \newline h_\Theta(x)_2 \newline h_\Theta(x)_3 \newline h_\Theta(x)_4 \newline\end{bmatrix} \rightarrow\end{align*}
\]</div>
<p>We can define our set of resulting classes as y:</p>
<p><img src="../images/multi_neur_res.png" alt="Neur_multi_res" /></p>
<p>Our final value of our hypothesis for a set of inputs will be one of the elements in y.</p>

"""""
),
            ["""2016-12-11-Neural-Networks-Learning"""] = (new Dictionary<string, string> { ["path"]="Machine-Learning",["""title"""] =
"""""
 Neural Networks Learning
""""",
["""date"""] =
"""""
 2016-12-11
""""",
["""tags"""] =
"""""
 machine learning
""""",
["""categories"""] =
"""""
 learning
""""",
 },
"""""
<h3 id="cost-function">Cost Function</h3>
<ol type="a">
<li><p>L = total number of layers in the network</p>
</li>
<li><p><span class="math">\(s_l\)</span> = number of units (not counting bias unit) in layer l</p>
</li>
<li><p>K= number of output units/classes</p>
</li>
</ol>
<p><span class="math">\(\begin{gather*}\large J(\Theta) = - \frac{1}{m} \sum_{i=1}^m \sum_{k=1}^K \left[y^{(i)}_k \log ((h_\Theta (x^{(i)}))_k) + (1 - y^{(i)}_k)\log (1 - (h_\Theta(x^{(i)}))_k)\right] + \frac{\lambda}{2m}\sum_{l=1}^{L-1} \sum_{i=1}^{s_l} \sum_{j=1}^{s_{l+1}} ( \Theta_{j,i}^{(l)})^2\end{gather*}\)</span></p>
<h3 id="backpropagation-algorithm">Backpropagation Algorithm</h3>
<p>&quot;Backpropagation&quot; is neural-network terminology for minimizing our cost function, just like what we were doing with gradient descent in logistic and linear regression.</p>
<p>In back propagation we're going to compute for every node:</p>
<p><span class="math">\(\delta_j^{(l)}\)</span> = &quot;error&quot; of node j in layer l</p>
<p><span class="math">\(a_j^{(l)}\)</span> is activation node j in layer l.</p>
<p>For the last layer, we can compute the vector of delta values with:</p>
<div class="math">
\[
[\delta^{(L)} = a^{(L)} - y]
\]</div>
<p>To get the delta values of the layers before the last layer, we can use an equation that steps us back from right to left:</p>
<div class="math">
\[
[\delta^{(l)} = ((\Theta^{(l)})^T \delta^{(l+1)})\ .*\ g'(z^{(l)})]
\]</div>
<div class="math">
\[
[g'(z^{(l)}) = a^{(l)}\ .*\ (1 - a^{(l)})]
\]</div>
<h3 id="backpropagation-algorithm-1">Backpropagation algorithm</h3>
<p>Given training set <span class="math">\(\lbrace (x^{(1)}, y^{(1)}) \cdots (x^{(m)}, y^{(m)})\rbrace\)</span>;</p>
<ul>
<li>Set <span class="math">\(\Delta^{(l)}_{i,j}\)</span>= 0 for all (l,i,j)</li>
</ul>
<p>For training example t =1 to m:</p>
<ul>
<li>Set <span class="math">\(a^{(1)} := x^{(t)}\)</span></li>
<li>Perform forward propagation to compute <span class="math">\(a^{(l)}\)</span> for l=2,3,…,L</li>
<li>Using <span class="math">\(y^{(t)}\)</span>, compute <span class="math">\(\delta^{(L)} = a^{(L)} - y^{(t)}\)</span></li>
<li>Compute <span class="math">\(\delta^{(L-1)}, \delta^{(L-2)},\dots,\delta^{(2)}\)</span> using <span class="math">\(\delta^{(l)} = ((\Theta^{(l)})^T \delta^{(l+1)})\ .*\ a^{(l)}\ .*\ (1 - a^{(l)})\)</span></li>
<li><span class="math">\(\Delta^{(l)}_{i,j} := \Delta^{(l)}_{i,j} + a_j^{(l)} \delta_i^{(l+1)}\)</span> or with vectorization, <span class="math">\(\Delta^{(l)} := \Delta^{(l)} + \delta^{(l+1)}(a^{(l)})^T\)</span></li>
<li><span class="math">\(D^{(l)}_{i,j} := \dfrac{1}{m}\left(\Delta^{(l)}_{i,j} + \lambda\Theta^{(l)}_{i,j}\right)\)</span> If j≠0 NOTE: Typo in lecture slide omits outside parentheses. This version * is correct.</li>
<li><span class="math">\(D^{(l)}_{i,j} := \dfrac{1}{m}\Delta^{(l)}_{i,j}\)</span> If j=0</li>
</ul>
<h3 id="gradient-checking">Gradient Checking</h3>
<p>Gradient checking will assure that our backpropagation works as intended.</p>
<div class="math">
\[
[\dfrac{\partial}{\partial\Theta}J(\Theta) \approx \dfrac{J(\Theta + \epsilon) - J(\Theta - \epsilon)}{2\epsilon}]
\]</div>
<p>Once you've verified once that your backpropagation algorithm is correct, then you don't need to compute gradApprox again. The code to compute gradApprox is very slow.</p>
<h3 id="random-initialization">Random Initialization</h3>
<p>Initializing all theta weights to zero does not work with neural networks. When we backpropagate, all nodes will update to the same value repeatedly.</p>
<h3 id="summary">Summary</h3>
<p>First, pick a network architecture; choose the layout of your neural network, including how many hidden units in each layer and how many layers total.</p>
<ul>
<li>Number of input units = dimension of features <span class="math">\(x^{(i)}\)</span></li>
<li>Number of output units = number of classes</li>
<li>Number of hidden units per layer = usually more the better (must balance with cost of computation as it increases with more hidden units)</li>
<li>Defaults: 1 hidden layer. If more than 1 hidden layer, then the same number of units in every hidden * layer.</li>
</ul>
<p><strong>Training a Neural Network</strong></p>
<ol>
<li>Randomly initialize the weights</li>
<li>Implement forward propagation to get <span class="math">\(h_\theta(x^{(i)})\)</span></li>
<li>Implement the cost function</li>
<li>Implement backpropagation to compute partial derivatives</li>
<li>Use gradient checking to confirm that your backpropagation works. Then disable gradient checking.</li>
<li>Use gradient descent or a built-in optimization function to minimize the cost function with the weights in theta.</li>
</ol>
<p>When we perform forward and back propagation, we loop on every training example:</p>
<pre><code class="language-none">for i = 1:m,
   Perform forward propagation and backpropagation using example (x(i),y(i))
   (Get activations a(l) and delta terms d(l) for l = 2,...,L
</code></pre>
<p>More info:
<a href="https://www.coursera.org/learn/machine-learning">https://www.coursera.org/learn/machine-learning</a></p>

"""""
),
            ["""2016-12-27-Optimization-Objective"""] = (new Dictionary<string, string> { ["path"]="Machine-Learning",["""title"""] =
"""""
 Optimization Objective
""""",
["""date"""] =
"""""
 2016-12-27
""""",
["""tags"""] =
"""""
 machine learning
""""",
["""categories"""] =
"""""
 learning
""""",
 },
"""""
<p>The Support Vector Machine (SVM) is yet another type of supervised machine learning algorithm. It is sometimes cleaner and more powerful.</p>
<h3 id="cost-function">Cost function</h3>
<p><span class="math">\(\text{cost}_1(z)\)</span> and <span class="math">\(\text{cost}_0(z)\)</span> (respectively, note that <span class="math">\(\text{cost}_1(z)\)</span> is the cost for classifying when y=1, and <span class="math">\(\text{cost}_0(z)\)</span> is the cost for classifying when y=0)</p>
<p><img src="./images/Svm_hing.png" alt="image" />
<img src="./images/Svm_hinge_negative_class.png" alt="image" /></p>
<div class="math">
\[
[J(\theta) = C\sum_{i=1}^m y^{(i)} \ \text{cost}_1(\theta^Tx^{(i)}) + (1 - y^{(i)}) \ \text{cost}_0(\theta^Tx^{(i)}) + \dfrac{1}{2}\sum_{j=1}^n \Theta^2_j]
\]</div>
<p>Note that the hypothesis of the Support Vector Machine is not interpreted as the probability of y being 1 or 0 (as it is for the hypothesis of logistic regression). Instead, it outputs either 1 or 0. (In technical terms, it is a discriminant function.)</p>
<div class="math">
\[
[h_\theta(x) =\begin{cases}1 &amp; \text{if} \Theta^Tx \geq 0 \\0 &amp; \text{otherwise}\end{cases}]
\]</div>
<h3 id="large-margin-intuition">Large Margin Intuition</h3>
<p>A useful way to think about Support Vector Machines is to think of them as Large Margin Classifiers.</p>
<ul>
<li>If y=1, we want <span class="math">\(\Theta^Tx \geq 1\)</span> (not just ≥0)</li>
<li>If y=0, we want <span class="math">\(\Theta^Tx \leq -1\)</span> (not just &lt;0)</li>
</ul>
<p>In SVMs, the decision boundary has the special property that it is as far away as possible from both the positive and the negative examples.</p>
<p>This large margin is only achieved when C is very large. Data is linearly separable when a straight line can separate the positive and negative examples. If we have outlier examples that we don't want to affect the decision boundary, then we can reduce C. Increasing and decreasing C is similar to respectively decreasing and increasing λ, and can simplify our decision boundary.</p>
<h3 id="kernels">Kernels</h3>
<p>Kernels allow us to make complex, non-linear classifiers using Support Vector Machines.</p>
<div class="math">
\[
f_i = similarity(x, l^{(i)}) = \exp(-\dfrac{||x - l^{(i)}||^2}{2\sigma^2})
\]</div>
<p>This &quot;similarity&quot; function is called a Gaussian Kernel. It is a specific example of a kernel.</p>
<p>If <span class="math">\(x \approx l^{(i)}\)</span>, then <span class="math">\(f_i = \exp(-\dfrac{\approx 0^2}{2\sigma^2}) \approx 1\)</span>
If x is far from <span class="math">\(l^{(i)}\)</span>, then <span class="math">\(f_i = \exp(-\dfrac{(large\ number)^2}{2\sigma^2}) \approx 0\)</span></p>
<p>One way to get the landmarks is to put them in the exact same locations as all the training examples. This gives us m landmarks, with one landmark per training example.</p>
<p>Using kernels to generate f(i) is not exclusive to SVMs and may also be applied to logistic regression. However, because of computational optimizations on SVMs, kernels combined with SVMs is much faster than with other algorithms, so kernels are almost always found combined only with SVMs.</p>
<h3 id="choosing-svm-parameters">Choosing SVM Parameters</h3>
<ul>
<li><p>If C is large, then we get higher variance/lower bias</p>
</li>
<li><p>If C is small, then we get lower variance/higher bias</p>
</li>
<li><p>With a large <span class="math">\(σ^2\)</span>, the features fi vary more smoothly, causing higher bias and lower variance.</p>
</li>
<li><p>With a small <span class="math">\(σ^2\)</span>, the features fi vary less smoothly, causing lower bias and higher variance.</p>
</li>
</ul>
<h3 id="using-an-svm">Using An SVM</h3>
<ul>
<li>Choice of parameter C</li>
<li>Choice of kernel (similarity function)</li>
<li>No kernel (&quot;linear&quot; kernel) -- gives standard linear classifier</li>
<li>Choose when n is large and when m is small</li>
<li>Gaussian Kernel (above) -- need to choose σ2</li>
<li>Choose when n is small and m is large</li>
</ul>
<h3 id="logistic-regression-vs.svms">Logistic Regression vs. SVMs</h3>
<ul>
<li>If n is large (relative to m), then use logistic regression, or SVM without a kernel (the &quot;linear kernel&quot;)</li>
<li>If n is small and m is intermediate, then use SVM with a Gaussian Kernel</li>
<li>If n is small and m is large, then manually create/add more features, then use logistic regression or SVM without a kernel.
In the first case, we don't have enough examples to need a complicated polynomial hypothesis. In the second example, we have enough examples that we may need a complex non-linear hypothesis. In the last case, we want to increase our features so that logistic regression becomes applicable.</li>
</ul>
<p><strong>Note</strong>: a neural network is likely to work well for any of these situations, but may be slower to train.</p>
<p>More info:
<a href="https://www.coursera.org/learn/machine-learning">https://www.coursera.org/learn/machine-learning</a></p>

"""""
),
            ["""2017-01-14-Machine-Learning-links"""] = (new Dictionary<string, string> { ["path"]="Machine-Learning",["""title"""] =
"""""
 Machine Learning links
""""",
["""date"""] =
"""""
 2017-01-14
""""",
["""tags"""] =
"""""
 machine learning
""""",
["""categories"""] =
"""""
 learning
""""",
 },
"""""
<p>This info is from <a href="https://www.coursera.org/learn/machine-learning">Machine Learning recourses</a></p>
<ul>
<li><a href="./assets/MachineLearning/MachineLearning1.html">Week 1</a></li>
<li><a href="./assets/MachineLearning/MachineLearning2.html">Week 2</a></li>
<li><a href="./assets/MachineLearning/MachineLearning3.html">Week 3</a></li>
<li><a href="./assets/MachineLearning/MachineLearning4.html">Week 4</a></li>
<li><a href="./assets/MachineLearning/MachineLearning5.html">Week 5</a></li>
<li><a href="./assets/MachineLearning/MachineLearning6.html">Week 6</a></li>
<li><a href="./assets/MachineLearning/MachineLearning7.html">Week 7</a></li>
<li><a href="./assets/MachineLearning/MachineLearning8.html">Week 8</a></li>
<li><a href="./assets/MachineLearning/MachineLearning9.html">Week 9</a></li>
<li><a href="./assets/MachineLearning/MachineLearning10.html">Week 10</a></li>
<li><a href="./assets/MachineLearning/UsefulResources.html">Links</a></li>
</ul>

"""""
),
            ["""2000-01-01-herewearego"""] = (new Dictionary<string, string> { ["path"]="Music",["""title"""] =
"""""
 herewego
""""",
["""tags"""] =
"""""
 music
""""",
["""categories"""] =
"""""
 music
""""",
["""date"""] =
"""""
2000-1-1
""""",
 },
"""""
<p><iframe src="https://www.youtube.com/embed/Ad8OT0S7l6k" class="youtube" width="500" height="281" frameborder="0" allowfullscreen=""></iframe></p>

"""""
),
            ["""2024-06-18-Understanding-Validity-and-Soundness-in-Arguments"""] = (new Dictionary<string, string> { ["path"]="philosophy",["""title"""] =
"""""
 Understanding Validity and Soundness in Arguments
""""",
["""date"""] =
"""""
 2024-06-18
""""",
["""tags"""] =
"""""
 valid sound
""""",
["""categories"""] =
"""""
 philosophy
""""",
 },
"""""
<p>Certainly! Here's an article discussing the concepts of valid and sound arguments, incorporating the Ontological Argument for context:</p>
<hr />
<h2 id="understanding-validity-and-soundness-in-arguments">Understanding Validity and Soundness in Arguments</h2>
<h3 id="introduction">Introduction</h3>
<p>In the realm of logic and critical thinking, it's essential to distinguish between valid and sound arguments. This distinction helps in evaluating the strength and reliability of arguments we encounter in various discussions. To illustrate these concepts, we'll also look at the Ontological Argument, a famous philosophical argument for the existence of God.</p>
<h3 id="valid-arguments">Valid Arguments</h3>
<p>An argument is <strong>valid</strong> if the conclusion logically follows from the premises. This means that if the premises are true, the conclusion must necessarily be true. Validity is all about the form or structure of the argument, not the actual truth of the premises.</p>
<h4 id="example-of-a-valid-argument">Example of a Valid Argument:</h4>
<ol>
<li>All humans are mortal. (Premise)</li>
<li>Socrates is a human. (Premise)</li>
<li>Therefore, Socrates is mortal. (Conclusion)</li>
</ol>
<p>Here, the conclusion follows logically from the premises. If both premises are true, the conclusion cannot be false, making the argument valid.</p>
<h3 id="sound-arguments">Sound Arguments</h3>
<p>An argument is <strong>sound</strong> if it is both valid and all its premises are true. Soundness is a stricter condition because it requires not only a valid form but also the truth of the premises.</p>
<h4 id="example-of-a-sound-argument">Example of a Sound Argument:</h4>
<ol>
<li>All humans are mortal. (True Premise)</li>
<li>Socrates is a human. (True Premise)</li>
<li>Therefore, Socrates is mortal. (Conclusion)</li>
</ol>
<p>This argument is sound because it is valid and the premises are true, leading to a true conclusion.</p>
<h3 id="differences-between-validity-and-soundness">Differences Between Validity and Soundness</h3>
<ul>
<li><strong>Scope</strong>: Validity pertains to the logical form of an argument, ensuring that if the premises are true, the conclusion must follow. Soundness requires both a valid form and true premises.</li>
<li><strong>Truth of Premises</strong>: A valid argument can have false premises and still be valid. However, a sound argument must have all true premises.</li>
<li><strong>Guarantee of Truth</strong>: A valid argument guarantees that the conclusion follows logically from the premises. A sound argument guarantees that the conclusion is true because it combines valid reasoning with true premises.</li>
</ul>
<h3 id="evaluating-arguments">Evaluating Arguments</h3>
<p>To evaluate whether an argument is valid and/or sound:</p>
<ol>
<li><strong>Check Validity</strong>: Examine the structure to ensure the conclusion logically follows from the premises.</li>
<li><strong>Check Truth of Premises</strong>: Verify the factual accuracy of the premises.</li>
</ol>
<h4 id="example-analysis">Example Analysis:</h4>
<ol>
<li>If it rains, the ground gets wet. (Premise)</li>
<li>The ground is wet. (Premise)</li>
<li>Therefore, it rained. (Conclusion)</li>
</ol>
<ul>
<li><strong>Validity Check</strong>: This argument is invalid because the wet ground could be due to other reasons, such as sprinklers.</li>
<li><strong>Truth Check</strong>: Regardless of the premises' truth, the argument is invalid due to its flawed structure.</li>
</ul>
<h4 id="another-example">Another Example:</h4>
<ol>
<li>All birds can fly. (Premise - False)</li>
<li>Penguins are birds. (Premise - True)</li>
<li>Therefore, penguins can fly. (Conclusion - False)</li>
</ol>
<ul>
<li><strong>Validity Check</strong>: The argument is valid because if the premises were true, the conclusion would logically follow.</li>
<li><strong>Truth Check</strong>: The first premise is false, making the argument unsound.</li>
</ul>
<h3 id="the-ontological-argument-a-case-study">The Ontological Argument: A Case Study</h3>
<p>The Ontological Argument, proposed by St. Anselm in the 11th century, is a classic example that helps illustrate these concepts. The argument aims to prove God's existence through reasoning alone:</p>
<ol>
<li>God is defined as the greatest being conceivable. (Premise)</li>
<li>It is greater to exist in reality than merely as an idea. (Premise)</li>
<li>Therefore, God must exist in reality because if God existed only as an idea, He would not be the greatest conceivable being. (Conclusion)</li>
</ol>
<ul>
<li><strong>Validity Check</strong>: The argument is valid; the conclusion logically follows from the premises.</li>
<li><strong>Truth Check</strong>: The truth of the premises is debated. Critics argue that the definition and assumptions made in the premises are questionable, thus challenging the soundness of the argument.</li>
</ul>
<h3 id="conclusion">Conclusion</h3>
<p>Understanding the distinction between validity and soundness is crucial for evaluating arguments effectively. Validity ensures the correct logical form, while soundness ensures both logical form and factual accuracy. By mastering these concepts, we can critically assess the strength and reliability of the arguments we encounter, as illustrated by the Ontological Argument. This careful evaluation helps in forming well-reasoned beliefs and decisions.</p>
<hr />

"""""
),
            ["""2021-07-05-Slowy"""] = (new Dictionary<string, string> { ["path"]="Polish",["""title"""] =
"""""
 Slowy
""""",
["""date"""] =
"""""
 2021-07-05
""""",
["""tags"""] =
"""""
 polish slowy
""""",
["""categories"""] =
"""""
 learning
""""",
 },
"""""
<h1 id="czasowniki">Czasowniki</h1>
<ol>
<li>stać</li>
<li>siedzieć</li>
<li>leżeć</li>
<li>klęczeć</li>
<li>chodzić - iść</li>
<li>biegać</li>
<li>skakać</li>
<li>przewracać się</li>
<li>spacerować</li>
<li>latać (ptak)</li>
<li>lecieć</li>
<li>pływać</li>
<li>płynąć (statek)</li>
<li>jechać</li>
<li>wsiadać</li>
<li>wysiadać</li>
<li>wchodzić</li>
<li>wychodzić</li>
<li>wjeżdżać</li>
<li>wyjeżdżać</li>
<li>przechodzić</li>
<li>błądzić</li>
<li>wracać</li>
<li>otwierać</li>
<li>zamykać</li>
<li>włączać</li>
<li>wyłączać</li>
<li>zapalać (papierosa)</li>
<li>gasić</li>
<li>ciągnąć</li>
<li>phać</li>
<li>łapać</li>
<li>rzucać</li>
<li>trzymać</li>
<li>puszczać</li>
<li>dawać</li>
<li>brać</li>
<li>budować</li>
<li>burzyć</li>
<li>wygrywać</li>
<li>przegrywać</li>
<li>pukać</li>
<li>dzwonić</li>
<li>zaczynać</li>
<li>kończyć</li>
<li>ciąć</li>
<li>stryc</li>
<li>drzeć</li>
<li>rąbać</li>
<li>łamać</li>
<li>kroić</li>
<li>obierać</li>
<li>zrywać</li>
<li>zbierać</li>
<li>sprzątać</li>
<li>prać</li>
<li>prasować</li>
<li>suszyć</li>
<li>zamiatać</li>
<li>odkurzać</li>
<li>podlewać</li>
<li>czyścić (buty)</li>
<li>pakować</li>
<li>telefonować</li>
<li>spać</li>
<li>gimnastykować się</li>
<li>budzić się</li>
<li>wstawać</li>
<li>myć się</li>
<li>kąpać się</li>
<li>ubierać się</li>
<li>czesać się</li>
<li>golić się</li>
<li>malować się</li>
<li>pracować</li>
<li>odpoczywać</li>
<li>rozbierać się</li>
<li>urodzić się</li>
<li>nazywać się</li>
<li>rosnąć</li>
<li>uczyć się</li>
<li>studiować</li>
<li>brać ślub</li>
<li>starzeć się</li>
<li>umierać</li>
<li>jeść</li>
<li>pić</li>
<li>gotować</li>
<li>smażyć</li>
<li>piec</li>
</ol>
<h1 id="czowiek">Człowiek</h1>
<h2 id="twarz">Twarz</h2>
<ol>
<li>włosy</li>
<li>czoło</li>
<li>brew</li>
<li>ucho</li>
<li>rzęsa</li>
<li>oko</li>
<li>nos</li>
<li>policzek</li>
<li>wąs</li>
<li>usta</li>
<li>język</li>
<li>ząb</li>
<li>warga</li>
<li>broda</li>
</ol>
<h2 id="szkielet">Szkielet</h2>
<ol>
<li>czaszka</li>
<li>obojczyk</li>
<li>mostek</li>
<li>żebro</li>
<li>kręgosłup</li>
<li>miednica</li>
<li>kość</li>
</ol>
<h2 id="narzady-wewnetrzne">Narządy wewnętrzne</h2>
<ol>
<li>mózg</li>
<li>płuco</li>
<li>serce</li>
<li>mięsień</li>
<li>tętnica</li>
<li>krew</li>
<li>wątroba</li>
<li>żołądek</li>
<li>jelito</li>
<li>nerka</li>
<li>pęcherz</li>
<li>żyła</li>
</ol>
<h2 id="ciao-ludzkie">Ciało ludzkie</h2>
<ol>
<li>głowa</li>
<li>szyja</li>
<li>gardło</li>
<li>ręka</li>
<li>ramię</li>
<li>lokieć</li>
<li>dłoń</li>
<li>palec</li>
<li>paznokieć</li>
<li>pacha</li>
<li>tułów</li>
<li>brzuch</li>
<li>biodro</li>
<li>noga</li>
<li>udo</li>
<li>kołano</li>
<li>łydka</li>
<li>stopa</li>
<li>kostka</li>
<li>pięta</li>
<li>kark</li>
<li>pierś</li>
<li>plecy</li>
<li>talia</li>
<li>pośladek</li>
</ol>
<h1 id="dom-i-jego-urzadnenie">Dom i jego urządnenie</h1>
<h2 id="dom-i-ogrod">Dom i ogród</h2>
<ol>
<li>komin</li>
<li>dach</li>
<li>antena</li>
<li>rynna</li>
<li>balkon</li>
<li>okno</li>
<li>ściana</li>
<li>dzrwi</li>
<li>trawnik</li>
<li>ścieżka</li>
<li>żywopłot</li>
<li>ogrodzenie</li>
<li>furtka</li>
<li>skzynka na listy</li>
<li>garaż</li>
<li>ogród</li>
<li>drzewo</li>
<li>krzew</li>
<li>fontanna</li>
<li>klomb</li>
<li>kwiat</li>
</ol>
<h2 id="przedpokoj">Przedpokój</h2>
<ol>
<li>lampa</li>
<li>zegar</li>
<li>pawłacz</li>
<li>szafa</li>
<li>lustro</li>
<li>wazon</li>
<li>kwiat</li>
<li>półka</li>
<li>wieszak</li>
<li>wyłącznik</li>
<li>drzwi</li>
<li>schody</li>
<li>chodnik</li>
<li>wycieraczka</li>
<li>stolik</li>
<li>telefon</li>
<li>książka telefoniczna</li>
</ol>
<h2 id="pokoj">Pokój</h2>
<ol>
<li>sufit</li>
<li>żyrandol</li>
<li>regal</li>
<li>akwarium</li>
<li>obraz</li>
<li>okno</li>
<li>ściana</li>
<li>barek</li>
<li>telewizor</li>
<li>radiomagnetofon</li>
<li>kominek</li>
<li>kaloryfer</li>
<li>dywan</li>
<li>ława</li>
<li>lampa</li>
<li>poduszka</li>
<li>kanapa</li>
<li>fotel</li>
<li>krzesło</li>
<li>stół</li>
<li>popielniczka</li>
<li>wazon</li>
<li>podłoga</li>
</ol>
<h2 id="sypialnia">Sypialnia</h2>
<ol>
<li>szafa</li>
<li>wieszak</li>
<li>lóżko</li>
<li>lustro</li>
<li>toaletka</li>
<li>koszula nocna</li>
<li>posuszka</li>
<li>kołdra</li>
<li>prześcieradło</li>
<li>materac</li>
<li>piżama</li>
<li>lóżeczko</li>
<li>miś</li>
<li>lalka</li>
<li>pajacyk</li>
<li>grzechotka</li>
<li>nocnik</li>
<li>śliniak</li>
<li>pielucha</li>
<li>butelka</li>
<li>smoczek</li>
</ol>
<h2 id="azienla-i-ubikacja">Łazienla i ubikacja</h2>
<ol>
<li>lustro</li>
<li>wieszak</li>
<li>ręcznik</li>
<li>kabina</li>
<li>ubikacja</li>
<li>papier toaletowy</li>
<li>szczotka</li>
<li>umywalka</li>
<li>prysznic</li>
<li>wanna</li>
<li>korek</li>
<li>kurek</li>
<li>waga</li>
<li>dywanik</li>
<li>kosz</li>
<li>miednica</li>
<li>pralka</li>
<li>proszek</li>
</ol>
<h2 id="kosmetyki-i-przybory-toaletowe">Kosmetyki i przybory toaletowe</h2>
<ol>
<li>dezodorant</li>
<li>perfumy</li>
<li>krem</li>
<li>puder</li>
<li>szminka</li>
<li>tusz</li>
<li>cienie do powiek</li>
<li>lakier do paznokci</li>
<li>szczotka do włosów</li>
<li>grzebień</li>
<li>spinka do wlosów</li>
<li>lokówka</li>
<li>suszarka</li>
<li>mydło</li>
<li>gąbka</li>
<li>szczoteczka do rąk</li>
<li>szczoteczka do zębów</li>
<li>pasta fo zębów</li>
<li>płyn do kąpieli</li>
<li>szampon</li>
<li>pędzel do golenia</li>
<li>krem do golenia</li>
<li>maszynka do golenia</li>
<li>żyletka</li>
<li>pianka do golenia</li>
</ol>
<h2 id="pomieszczenie-gospodarcze">Pomieszczenie gospodarcze</h2>
<ol>
<li>słoik</li>
<li>żarówka</li>
<li>butelka</li>
<li>deska do prasowania</li>
<li>żelazko</li>
<li>odkurzacz</li>
<li>szczotka do ubrania</li>
<li>gniazdko</li>
<li>konserwa</li>
<li>wieszak</li>
<li>szufelka</li>
<li>drabinka</li>
<li>szczotka</li>
<li>miotła</li>
<li>wiaderko</li>
<li>węgiel</li>
</ol>
<h2 id="przybory-do-szycia">Przybory do szycia</h2>
<ol>
<li>maszyna do szycia</li>
<li>igła</li>
<li>wełna</li>
<li>druty</li>
<li>szydełko</li>
<li>nici</li>
<li>guzik</li>
</ol>
<h2 id="drzwi">Drzwi</h2>
<ol>
<li>dzwonek</li>
<li>zawias</li>
<li>wizjer</li>
<li>zamek</li>
<li>zasuwa</li>
<li>klamka</li>
<li>klucz</li>
<li>łańcuch</li>
</ol>
<h2 id="okno">Okno</h2>
<ol>
<li>roleta</li>
<li>żaluzja</li>
<li>szyba</li>
<li>parapet</li>
<li>firanka</li>
<li>zasłona</li>
</ol>
<h1 id="gry-pozrywki-i-hobby">Gry, pozrywki i hobby</h1>
<h2 id="szachy">Szachy</h2>
<ol>
<li>pole</li>
<li>pionek</li>
<li>wieża</li>
<li>goniec</li>
<li>król</li>
<li>hetman</li>
<li>koń</li>
<li>szachownica</li>
</ol>
<h2 id="warcaby">Warcaby</h2>
<h2 id="domino">Domino</h2>
<h2 id="karty">Karty</h2>
<ol>
<li>pik</li>
<li>kier</li>
<li>karo</li>
<li>refl</li>
<li>talia</li>
<li>as</li>
<li>król</li>
<li>dama</li>
<li>walet</li>
</ol>
<h2 id="kino">Kino</h2>
<ol>
<li>ekran</li>
<li>widz</li>
<li>rząd</li>
<li>miejsce</li>
<li>kabina</li>
<li>projekcyjna</li>
<li>film</li>
</ol>
<h2 id="teatr">Teatr</h2>
<ol>
<li>scena</li>
<li>aktorka</li>
<li>dekoracja</li>
<li>aktor</li>
<li>kurtyna</li>
<li>reflektor</li>
<li>balkon</li>
<li>galeria</li>
<li>loża</li>
<li>sztuka</li>
<li>szatnia</li>
<li>program</li>
<li>bilet</li>
</ol>
<h2 id="muzyka">Muzyka</h2>
<ol>
<li>dyrygent</li>
<li>batura</li>
<li>partytura</li>
<li>orkiestra</li>
<li>koncert</li>
<li>pięciolinia</li>
<li>klucz wiolinowy</li>
<li>klucz basowy</li>
<li>cala nuta</li>
<li>półnuta</li>
<li>ćwierćnuta</li>
<li>ósemka</li>
<li>szesnastka</li>
</ol>
<h2 id="instrumenty-myzyczne">Instrumenty myzyczne</h2>
<ol>
<li>skzrzypce</li>
<li>altówka</li>
<li>wiolonczela</li>
<li>kontrabas</li>
<li>flet</li>
<li>klarnet</li>
<li>obój</li>
<li>fagot</li>
<li>saksofon</li>
<li>waltornia</li>
<li>puzon</li>
<li>trąbka</li>
<li>fortepian</li>
</ol>
<h2 id="ksiazki">Książki</h2>
<ol>
<li>biblioteka</li>
<li>bibliotekarka</li>
<li>czetelnia</li>
<li>książka</li>
<li>okładka</li>
<li>grzbiet</li>
<li>autor</li>
<li>tytuł</li>
<li>zakładka</li>
<li>strona</li>
<li>gazeta</li>
<li>magazyn</li>
<li>tekst</li>
<li>ilustracja</li>
</ol>
<h2 id="filatelistyka">Filatelistyka</h2>
<ol>
<li>znaczek</li>
<li>seria</li>
<li>klaser</li>
<li>pęseta</li>
</ol>
<h2 id="fotografia">Fotografia</h2>
<ol>
<li>aparat</li>
<li>obiektyw</li>
<li>migawka</li>
<li>film</li>
</ol>
<h2 id="audio-i-video">Audio i video</h2>
<ol>
<li>wypożyczalnia</li>
<li>kaseta video</li>
<li>magnetofon</li>
<li>płyta kompaktowa</li>
<li>odtwarzacz CD</li>
</ol>
<h1 id="handel">Handel</h1>
<h2 id="pieniadze">Pieniądze</h2>
<ol>
<li>banknot</li>
<li>moneta</li>
</ol>
<h2 id="sklepy">Sklepy</h2>
<ol>
<li>centrum handlowe</li>
<li>sklep spożywczy</li>
<li>sklep jazrzynowy</li>
<li>sklep obuwniczy</li>
<li>perfurmeria</li>
<li>sklep odzieżowy</li>
<li>dom towarowy</li>
<li>wystawa</li>
<li>supermarket</li>
</ol>
<h2 id="zakupy">Zakupy</h2>
<ol>
<li>półka</li>
<li>butelka</li>
<li>słoik</li>
<li>stoisko</li>
<li>klient</li>
<li>kolejka</li>
<li>ekspedientka</li>
<li>lada</li>
<li>waga</li>
<li>kasjerka</li>
<li>kasa</li>
<li>portmonetka</li>
<li>rachunek</li>
<li>cena</li>
<li>koszyk</li>
<li>torba</li>
<li>siatka</li>
</ol>
<h1 id="jedzenie-i-napoje">Jedzenie i napoje</h1>
<h2 id="artykuy-spozywcze">Artykuły spożywcze</h2>
<ol>
<li>mleko</li>
<li>śmietana</li>
<li>jajko</li>
<li>ser biały</li>
<li>ser żółty</li>
<li>serek topiony</li>
<li>masło</li>
<li>margaryna</li>
<li>chleb</li>
<li>bułka</li>
<li>graham</li>
<li>bagietka</li>
<li>ciastko</li>
<li>cukierek</li>
<li>herbatnik</li>
<li>pomadka</li>
<li>czekolada</li>
<li>baton</li>
<li>szynka</li>
<li>kiełbasa</li>
<li>wołowina</li>
<li>cielęcina</li>
<li>wieprzowina</li>
<li>baranina</li>
<li>drób</li>
</ol>
<h2 id="napoje">Napoje</h2>
<ol>
<li>kawa</li>
<li>herbata</li>
<li>kako</li>
<li>woda mineralna</li>
<li>lemoniada</li>
<li>sok owocowy</li>
<li>coca-cola</li>
<li>piwo</li>
<li>wino</li>
<li>wódka</li>
<li>szampan</li>
</ol>
<h1 id="kuchnia-i-nakrycia-stoowe">Kuchnia i nakrycia stołowe</h1>
<h2 id="kuchnia">Kuchnia</h2>
<ol>
<li>lodówka</li>
<li>sito</li>
<li>chochelka</li>
<li>wałek</li>
<li>tłuczek</li>
<li>tasak</li>
<li>mikrofalówka</li>
<li>toster</li>
<li>waga</li>
<li>robot</li>
<li>patelnia</li>
<li>piekarnik</li>
<li>pokrywka</li>
<li>garnek</li>
<li>rondel</li>
<li>zmywarka</li>
<li>kuchenka</li>
<li>forma do pieczenia</li>
<li>taca</li>
<li>książka kucharska</li>
<li>przepis</li>
<li>deska do krojenia</li>
<li>otwieracz do konserw</li>
<li>stół</li>
<li>taboret</li>
<li>kosz</li>
<li>kran</li>
<li>zlewozmywak</li>
<li>ściereczka</li>
<li>płyn do mycia butelek</li>
<li>korkociąg</li>
</ol>
<h2 id="nakrycia-stoowe">Nakrycia stołowe</h2>
<ol>
<li>talerz glęboki</li>
<li>talerz płytki</li>
<li>talerz deserowy</li>
<li>szklanka</li>
<li>filiżanka</li>
<li>spodek</li>
<li>dzbanek</li>
<li>dzbanuszek</li>
<li>kieliszek</li>
<li>miska</li>
<li>półmisek</li>
<li>salaterka</li>
<li>waza</li>
<li>cukierniczka</li>
<li>maselniczka</li>
<li>kubek</li>
</ol>
<h2 id="sztucce">Sztućce</h2>
<ol>
<li>nóż</li>
<li>widelec</li>
<li>łyżka</li>
<li>łyżeczka</li>
</ol>
<h1 id="ludzi">Ludzi</h1>
<h2 id="dorosli">Dorośli</h2>
<ol>
<li>mężczyzna</li>
<li>kobieta</li>
<li>staruszek</li>
<li>staruszka</li>
</ol>
<h2 id="modziez">Młodzież</h2>
<ol start="5">
<li>chłopiec</li>
<li>dziewczyna</li>
</ol>
<h2 id="dzieci">Dzieci</h2>
<ol start="7">
<li>niemowlę</li>
<li>dziewczynka</li>
<li>chłopczyk</li>
<li>dziecko</li>
</ol>
<h1 id="miasto">Miasto</h1>
<h2 id="centrum">Centrum</h2>
<ol>
<li>fabryka</li>
<li>kościół</li>
<li>neon</li>
<li>reklama</li>
<li>klub</li>
<li>kiosk</li>
<li>parking</li>
<li>trawnik</li>
<li>ogłoszenie</li>
<li>plakat</li>
<li>kosz</li>
<li>drogowskaz</li>
<li>znak drogowy</li>
<li>ściek</li>
<li>budka telefoni</li>
<li>stragan</li>
<li>ławka</li>
<li>sygnalizator</li>
<li>laratnia</li>
</ol>
<h2 id="swiata-i-kirunki">Światłą i kirunki</h2>
<ol>
<li>czerwone</li>
<li>żółte</li>
<li>zielone</li>
<li>prostp</li>
<li>w lewo</li>
<li>w prawo</li>
</ol>
<h2 id="skrzyzowanie">Skrzyżowanie</h2>
<ol>
<li>osiedle</li>
<li>blok</li>
<li>restauracja</li>
<li>dom towarowy</li>
<li>kino</li>
<li>most</li>
<li>park</li>
<li>wejście</li>
<li>wyjście</li>
<li>postój taksówek</li>
<li>ulica</li>
<li>tramwaj</li>
<li>przystanek tramwajowy</li>
<li>rower</li>
<li>autobus</li>
<li>samochód</li>
<li>przejście</li>
<li>przystanek autobusowy</li>
<li>reklama</li>
<li>ciężarówka</li>
<li>krawężnik</li>
<li>chodnik</li>
<li>kawiarnia</li>
</ol>
<h1 id="nazwy-zawodow">Nazwy zawodów</h1>
<ol>
<li>profesor</li>
<li>student</li>
<li>lekarz</li>
<li>pielęgniarka</li>
<li>żołnierz</li>
<li>kucharz</li>
<li>kelner</li>
<li>pierkarz</li>
<li>marynarz</li>
<li>rolnik</li>
<li>murarz</li>
<li>kierowca</li>
<li>mechanik</li>
<li>ksiądz</li>
<li>zakonnica</li>
<li>policjant</li>
<li>sprzedawca</li>
<li>sprzątaczka</li>
<li>elektryk</li>
<li>stolarz</li>
<li>aktor</li>
<li>górnik</li>
<li>malarz</li>
<li>pilot</li>
<li>listonosz</li>
<li>fryzjer</li>
<li>dentysta</li>
<li>zegarmistrz</li>
<li>fotograf</li>
<li>rzeźnik</li>
<li>sędzia</li>
<li>strażak</li>
<li>taksówkarz</li>
<li>pianista</li>
<li>spiker</li>
<li>urzędnik</li>
<li>serkretarka</li>
<li>ogrodnik</li>
<li>rzeźbiarz</li>
<li>inżynier</li>
<li>kominiarz</li>
<li>hutnik</li>
<li>weterynarz</li>
<li>krawiec</li>
</ol>
<h1 id="pogoda-pory-roky-i-przyroda">Pogoda, pory roky i przyroda</h1>
<ul>
<li>wiosna</li>
<li>łato</li>
<li>jesień</li>
<li>zima</li>
</ul>
<h2 id="mapa-pogody">Mapa pogody</h2>
<ol>
<li>słońce</li>
<li>zachmurzenie małe</li>
<li>zachmurzenie umiarkowane</li>
<li>zachmurzenie duże</li>
<li>opady deszczu / deszcz</li>
<li>opady śniegu / śnieg</li>
<li>burza</li>
<li>wiatr</li>
<li>temperatura</li>
</ol>
<h2 id="termometr">Termometr</h2>
<ol>
<li>rtęć</li>
<li>skala</li>
<li>temperatura</li>
</ol>
<h2 id="przyroda">Przyroda</h2>
<ol>
<li>słońce</li>
<li>powietrze</li>
<li>woda</li>
<li>ziemia</li>
<li>niebo</li>
<li>tęcza</li>
<li>wiatr</li>
<li>błyskawica</li>
<li>chmura</li>
</ol>
<h1 id="posiki">Posiłki</h1>
<h2 id="sniadanie">Śniadanie</h2>
<ol>
<li>jajko</li>
<li>ser żółty</li>
<li>ser biały</li>
<li>masło</li>
<li>bułka</li>
<li>dżem</li>
<li>kanapka</li>
<li>kiełbasa</li>
</ol>
<h2 id="obiad">Obiad</h2>
<ol>
<li>zupa</li>
<li>makaron</li>
<li>frytki</li>
<li>ziemniaki</li>
<li>kurczak</li>
<li>sznycel</li>
<li>sałatka</li>
<li>sól</li>
<li>pieprz</li>
<li>ciasto</li>
</ol>
<h2 id="podwieczorek">Podwieczorek</h2>
<ol>
<li>kawa</li>
<li>cukier</li>
<li>herbata</li>
<li>ciastko</li>
<li>herbatnik</li>
<li>tort</li>
<li>ciasto</li>
<li>lody</li>
</ol>
<h2 id="kolacja">Kolacja</h2>
<ol>
<li>chleb</li>
<li>szynka</li>
<li>ryba</li>
<li>pomidor</li>
<li>owoce</li>
</ol>
<h2 id="restauracja">Restauracja</h2>
<ol>
<li>bar</li>
<li>barman</li>
<li>barmanka</li>
<li>zapalniczka</li>
<li>papieros</li>
<li>gość</li>
<li>kelner</li>
<li>rachunek</li>
<li>słomka</li>
<li>kaktajl</li>
<li>stolik</li>
<li>przyprawy</li>
<li>pudełko zapałek</li>
<li>zapałka</li>
<li>karta</li>
</ol>
<h1 id="rodzina">Rodzina</h1>
<ol>
<li>pradziadek</li>
<li>prababcia</li>
<li>dziadek</li>
<li>babcia</li>
<li>teść</li>
<li>teściowa</li>
<li>ojciec</li>
<li>matka</li>
<li>wuj</li>
<li>ciotka</li>
<li>brat</li>
<li>siostra</li>
<li>kuzyn</li>
<li>kuzynka</li>
<li>syn</li>
<li>synowa</li>
<li>córka</li>
<li>zięć</li>
<li>bratanek</li>
<li>bratanica</li>
<li>siostrzeniec</li>
<li>siostrzenica</li>
<li>wnuk</li>
<li>wnuczka</li>
<li>prawnuk</li>
<li>prawnuczka</li>
<li>mąż</li>
<li>żona</li>
</ol>
<h1 id="swiat-roslin">Świat roślin</h1>
<h2 id="owoce">Owoce</h2>
<ol>
<li>jabłko</li>
<li>gruszka</li>
<li>śliwka</li>
<li>truskawka</li>
<li>porzeczka</li>
<li>agrest</li>
<li>malina</li>
<li>czereśnia</li>
<li>orzech</li>
<li>poziomka</li>
<li>jagoda</li>
<li>brzoskwinia</li>
<li>winogrono</li>
<li>banan</li>
<li>pomarańcza</li>
<li>cytryna</li>
<li>ananas</li>
<li>grejprfryt</li>
</ol>
<h2 id="warzywa">Warzywa</h2>
<ol>
<li>ziemniak</li>
<li>burak</li>
<li>papryka</li>
<li>marchewka</li>
<li>pietruszka</li>
<li>por</li>
<li>seler</li>
<li>kapusta</li>
<li>sałata</li>
<li>kalafior</li>
<li>groch</li>
<li>pomidor</li>
<li>ogórek</li>
<li>cebula</li>
<li>rzodkiewka</li>
</ol>
<h2 id="zboza">Zboża</h2>
<ol>
<li>żyto</li>
<li>pszenica</li>
<li>jęczmień</li>
<li>owies</li>
<li>kukurydza</li>
</ol>
<h2 id="kwiaty">Kwiaty</h2>
<ol>
<li>róża</li>
<li>goździk</li>
<li>gerbera</li>
<li>żonkil</li>
<li>tulipan</li>
<li>frezja</li>
<li>stokrotka</li>
<li>fiołek</li>
<li>konwalia</li>
<li>słonecznik</li>
<li>lilia</li>
<li>mak</li>
</ol>
<h2 id="drzewa">Drzewa</h2>
<ol>
<li>brzoza</li>
<li>dąb</li>
<li>klon</li>
<li>kasztan</li>
<li>wierzba płaczącz</li>
<li>topola</li>
<li>sosna</li>
</ol>
<h2 id="drzewo-elementy-drzewa">Drzewo - elementy drzewa</h2>
<ol>
<li>pień</li>
<li>gałąź</li>
<li>kora</li>
<li>liść</li>
</ol>
<h2 id="kwiat-elementy-kwiatu">Kwiat - elementy kwiatu</h2>
<ol>
<li>łodyga</li>
<li>pąk</li>
<li>płatek</li>
</ol>
<h1 id="sport-dyscypliny-sportowe">Sport - dyscypliny sportowe</h1>
<h2 id="pika-nozna">Piłka nożna</h2>
<ol>
<li>stadion</li>
<li>trybuna</li>
<li>bieżnia</li>
<li>boisko</li>
<li>sędzia</li>
<li>chorągiewka</li>
<li>piłka</li>
<li>gwizdek</li>
<li>piłkarz</li>
<li>pomocnik</li>
<li>napastnik</li>
<li>obrończ</li>
<li>bramkarz</li>
<li>pole karne</li>
<li>pole bramkowe</li>
<li>linia</li>
</ol>
<h2 id="siatkowka">Siatkówka</h2>
<ol>
<li>siatkarz</li>
<li>siatka</li>
</ol>
<h2 id="koszykowka">Koszykówka</h2>
<ol>
<li>koszykarz</li>
<li>kosz</li>
<li>tablica</li>
</ol>
<h2 id="pywanie">Pływanie</h2>
<ol>
<li>trampolina</li>
<li>słupek</li>
<li>basen</li>
<li>pływak</li>
</ol>
<h2 id="tenis">Tenis</h2>
<ol>
<li>rakieta</li>
<li>tenisista</li>
<li>siatka</li>
<li>kort</li>
</ol>
<h2 id="hokej">Hokej</h2>
<ol>
<li>kask</li>
<li>hokeista</li>
<li>kij</li>
<li>lodowisko</li>
<li>krążek</li>
</ol>
<h2 id="kolarstwo">Kolarstwo</h2>
<ol>
<li>meta</li>
<li>rower</li>
<li>kolarz</li>
</ol>
<h2 id="narciarstwo">Narciarstwo</h2>
<ol>
<li>trasa</li>
<li>gogle</li>
<li>narciarz</li>
<li>kijek</li>
<li>narta</li>
</ol>
<h2 id="yzwiarstwo">Łyżwiarstwo</h2>
<ol>
<li>łyżwiarz</li>
<li>tor</li>
<li>łyżwa</li>
</ol>
<h2 id="saneczkarstwo">Saneczkarstwo</h2>
<ol>
<li>saneczkarz</li>
<li>sanki</li>
</ol>
<h2 id="boks">Boks</h2>
<ol>
<li>bokser</li>
<li>rękawica</li>
<li>ring</li>
</ol>
<h2 id="kajakarstwo">Kajakarstwo</h2>
<ol>
<li>kajakarz</li>
<li>kajak</li>
</ol>
<h2 id="zapasy">Zapasy</h2>
<ol>
<li>zapaśnik</li>
<li>mata</li>
</ol>
<h2 id="rzut-oszczepem">Rzut oszczepem</h2>
<ol>
<li>oszczepnik</li>
<li>oszczep</li>
</ol>
<h2 id="skok-o-tyczce">Skok o tyczce</h2>
<ol>
<li>tyszkarz</li>
<li>poprzeczka</li>
<li>tyczka</li>
</ol>
<h2 id="skok-w-dal">Skok w dal</h2>
<ol>
<li>skoczek</li>
<li>deska</li>
<li>piaskownica</li>
</ol>
<h2 id="bieg-przez-potki">Bieg przez płotki</h2>
<ol>
<li>bieżnia</li>
<li>płotek</li>
<li>płotkarz</li>
<li>tor</li>
<li>blok</li>
</ol>
<h2 id="gimnastyka">Gimnastyka</h2>
<ol>
<li>gimnastyk</li>
<li>gimnastyczka</li>
<li>kozioł</li>
<li>równoważnia</li>
</ol>
<h2 id="olimpiada">Olimpiada</h2>
<ol>
<li>zwycięzca</li>
<li>medal</li>
<li>podium</li>
</ol>
<h1 id="szkoa">Szkoła</h1>
<h2 id="klasa">Klasa</h2>
<ol>
<li>nauczyciel</li>
<li>tablica</li>
<li>zdanie</li>
<li>słowo</li>
<li>błąd</li>
<li>kreda</li>
<li>gąbka</li>
<li>ścierka</li>
<li>uczeń</li>
<li>uczennica</li>
<li>ławka</li>
<li>biurko</li>
<li>katedra</li>
<li>globus</li>
<li>mapa</li>
<li>alfabet</li>
<li>litera</li>
</ol>
<h2 id="przybory-szkolne">Przybory szkolne</h2>
<ol>
<li>tornister</li>
<li>plecak</li>
<li>zeszyt</li>
<li>podręcznik</li>
<li>piórnik</li>
<li>pióro</li>
<li>długopis</li>
<li>linijka</li>
<li>ekierka</li>
<li>kątomierz</li>
<li>krzywka</li>
<li>cyrkel</li>
<li>atrament</li>
<li>kredka</li>
<li>farbka</li>
<li>pędzel</li>
<li>gumka</li>
<li>klej</li>
<li>nożyczki</li>
</ol>
<h2 id="figury-geometryczne">Figury geometryczne</h2>
<ol>
<li>okrąg</li>
<li>koło</li>
<li>kwadrat</li>
<li>prostokąt</li>
<li>trójkąt</li>
</ol>
<h2 id="bryy">Bryły</h2>
<ol>
<li>sześcian</li>
<li>prostopadłościan</li>
<li>ostrosłup</li>
<li>kula</li>
</ol>
<h2 id="przedmioty-szkolne">Przedmioty szkolne</h2>
<ol>
<li>matematyka</li>
<li>biologia</li>
<li>fizyka</li>
<li>geografia</li>
<li>chemia</li>
<li>historia</li>
<li>język polski</li>
<li>wychowanie fizyczne</li>
<li>przerwa</li>
<li>plan lekcji</li>
</ol>
<h2 id="oceny">Oceny</h2>
<ol>
<li>szóstka</li>
<li>piątka</li>
<li>czwórka</li>
<li>trójka</li>
<li>dwójka</li>
<li>jedynka</li>
</ol>
<h1 id="transport-i-komunikacja">Transport i komunikacja</h1>
<h2 id="autostrada">Autostrada</h2>
<ol>
<li>jezdnia</li>
<li>estakada</li>
<li>zjazd</li>
<li>rondo</li>
<li>drogowskaz</li>
<li>linia przerywana</li>
<li>linia ciągła</li>
<li>pas ruchu</li>
<li>znak drogowy</li>
<li>stacja benzynowa</li>
<li>dystrybutor</li>
</ol>
<h2 id="srodki-transportu-samochodowego">Środki transportu samochodowego</h2>
<ol>
<li>somochód</li>
<li>przyczepa campingowa</li>
<li>ciężarówka</li>
<li>przyczepa</li>
<li>wywrotka</li>
<li>autobus</li>
<li>samochód kombi</li>
<li>furgonetka</li>
<li>motor</li>
<li>cysterna</li>
<li>karetka</li>
</ol>
<h2 id="dworzec-autobusowy">Dworzec autobusowy</h2>
<ol>
<li>kasa biletowa</li>
<li>rozkład jazdy</li>
<li>stanowisko</li>
<li>bagaż</li>
<li>pasażer</li>
<li>kierowca</li>
</ol>
<h2 id="dworzec-kolejowy">Dworzec kolejowy</h2>
<ol>
<li>dworzec kolejowy</li>
<li>kasa biletowa</li>
<li>rozkład jazdy</li>
<li>przyjazdy pociągów</li>
<li>odjazdy pociągów</li>
<li>pasażer</li>
<li>poczekalnia</li>
<li>przechowalnia bagaźu</li>
<li>informacja</li>
<li>peron</li>
<li>pociąg</li>
<li>wagon</li>
<li>lokomotywa</li>
<li>maszynista</li>
<li>zawiadowca</li>
<li>chorągiewka</li>
<li>semafor</li>
<li>przedział</li>
<li>miejsce dla palących</li>
<li>miejsce dla niepalących</li>
<li>miejsce</li>
<li>bilet</li>
<li>konduktor</li>
</ol>
<h2 id="samochod-karoseria">Samochód - karoseria</h2>
<ol>
<li>lusterko</li>
<li>antena</li>
<li>bagażnik</li>
<li>migacz</li>
<li>światło stop</li>
<li>rejestracja</li>
<li>zderzak</li>
<li>bak</li>
<li>chlapacz</li>
<li>rura wydechowa</li>
<li>opona</li>
<li>silnik</li>
<li>reflektor</li>
</ol>
<h2 id="samochod-fotel-kierowcy">Samochód - fotel kierowcy</h2>
<ol>
<li>przednia szyna</li>
<li>kierownica</li>
<li>wycieraczka</li>
<li>deska rozdzielcza</li>
<li>siedzenie</li>
<li>stacyjka</li>
<li>sprzęgło</li>
<li>hamulec</li>
<li>gaz</li>
<li>pas</li>
<li>hamulec ręczny</li>
<li>skrzynia biegów</li>
<li>apteczka</li>
</ol>
<h2 id="rower">Rower</h2>
<ol>
<li>lusterko</li>
<li>hamulec</li>
<li>lampa</li>
<li>dzwonek</li>
<li>błotnik</li>
<li>koło</li>
<li>szprycha</li>
<li>siodełko</li>
<li>rama</li>
<li>pompka</li>
<li>pedał</li>
<li>łańcuch</li>
<li>bagażnik</li>
<li>światło odblaskowe</li>
<li>wentyl</li>
</ol>
<h2 id="port">Port</h2>
<ol>
<li>reda</li>
<li>żuraw</li>
<li>nabrzeże</li>
<li>ładunek</li>
<li>lina</li>
<li>dok</li>
<li>kotwica</li>
<li>statek</li>
</ol>
<h2 id="srodki-lokomocji-wodnej">Środki lokomocji wodnej</h2>
<ol>
<li>jacht</li>
<li>łódka</li>
<li>kajak</li>
<li>motoróka</li>
<li>statek</li>
<li>kuter</li>
<li>barka</li>
<li>prom</li>
<li>tankowiec</li>
</ol>
<h2 id="lotnisko">Lotnisko</h2>
<ol>
<li>szybowiec</li>
<li>helikopter</li>
<li>pas startowy</li>
<li>samolot</li>
<li>hangar</li>
<li>port lotniczy</li>
<li>wieża kontroli lotów</li>
</ol>
<h2 id="samolot">Samolot</h2>
<ol>
<li>pilot</li>
<li>stewardessa</li>
<li>pasażer</li>
</ol>
<h2 id="port-lotniczy">Port lotniczy</h2>
<ol>
<li>sala odpraw</li>
<li>celnik</li>
<li>paszport</li>
<li>walizka</li>
<li>neseser</li>
<li>torba</li>
<li>podróżny</li>
</ol>
<h1 id="ubranie">Ubranie</h1>
<h2 id="ubranie-damskie">Ubranie damskie</h2>
<ol>
<li>kapelusz</li>
<li>kostium</li>
<li>żakiet</li>
<li>spódnica</li>
<li>bluzka</li>
<li>rajstopy</li>
<li>półbut</li>
<li>czapka</li>
<li>sweter</li>
<li>płaszcz</li>
<li>but</li>
<li>sukienka</li>
<li>beret</li>
<li>golf</li>
<li>bluza</li>
<li>dżinsy</li>
<li>skarpetka</li>
<li>adidasy</li>
<li>bielizna</li>
<li>biustonosz</li>
<li>figi</li>
<li>halka</li>
<li>podkolanówka</li>
<li>sandal</li>
<li>szlafrok</li>
<li>koszula nocna</li>
</ol>
<h2 id="dodatki-damskie">Dodatki damskie</h2>
<ol>
<li>pasek</li>
<li>torebka</li>
<li>apaszka</li>
<li>szalik</li>
<li>parasolka</li>
<li>rękawiczka</li>
</ol>
<h2 id="bizuteria">Biżuteria</h2>
<ol>
<li>pierścionek</li>
<li>kolia</li>
<li>bransoletka</li>
<li>łańcuszek</li>
<li>kolczyk</li>
<li>klips</li>
</ol>
<h2 id="ubranie-i-dodatki-meskie">Ubranie i dodatki męskie</h2>
<ol>
<li>kapelusz</li>
<li>płaszcz</li>
<li>szalik</li>
<li>rękawiczka</li>
<li>laska</li>
<li>okulary</li>
<li>garnitur</li>
<li>marynarka</li>
<li>kamizelka</li>
<li>krawat</li>
<li>spodnie</li>
<li>koszula</li>
<li>kołnierzyk</li>
<li>rękaw</li>
<li>mankiet</li>
<li>kieszeń</li>
<li>szorty</li>
<li>skarpetka</li>
<li>kurtka</li>
<li>dżinsy</li>
<li>but</li>
<li>bielizna</li>
<li>slipy</li>
<li>podkoszulek</li>
<li>piżama</li>
</ol>
<h1 id="wakacje-i-rekreacja">Wakacje i rekreacja</h1>
<h2 id="pole-namiotowe">Pole namiotowe</h2>
<ol>
<li>przyczepa campingowa</li>
<li>namiot</li>
<li>tropik</li>
<li>linka</li>
<li>śledź</li>
<li>latarka</li>
<li>kuchenka gazowa</li>
<li>śpiwór</li>
<li>materac</li>
<li>plecak</li>
</ol>
<h2 id="plaza">Plaża</h2>
<ol>
<li>hotel</li>
<li>domek campingowy</li>
<li>kosz</li>
<li>parasol</li>
<li>okulary słoneczne</li>
<li>kąpielówki</li>
<li>koc</li>
<li>kostium kąpielowy</li>
<li>leżak</li>
<li>parawan</li>
<li>piasek</li>
<li>muszelka</li>
<li>kamyk</li>
<li>woda</li>
<li>fala</li>
<li>żaglówka</li>
<li>motorówka</li>
<li>kajak</li>
<li>rower wodny</li>
<li>łódka</li>
<li>czepek</li>
<li>deska surfingowa</li>
</ol>
<h1 id="wies-i-okolica">Wieś i okolica</h1>
<h2 id="wies">Wieś</h2>
<ol>
<li>góra</li>
<li>strumyk</li>
<li>las</li>
<li>rzeka</li>
<li>kościół</li>
<li>cmentarz</li>
<li>dom</li>
<li>droga</li>
<li>staw</li>
<li>pastwisko</li>
<li>pole</li>
<li>strach na wróble</li>
<li>snopek</li>
<li>ścieżka</li>
<li>łąka</li>
<li>stóg</li>
<li>furmanka</li>
</ol>
<h2 id="gospodarstwo">Gospodarstwo</h2>
<ol>
<li>dom</li>
<li>stodoła</li>
<li>stajnia</li>
<li>obora</li>
<li>szopa</li>
<li>traktor</li>
<li>pług</li>
<li>ogrodzenie</li>
<li>buda</li>
<li>studnia</li>
<li>trawa</li>
<li>kosa</li>
<li>sierp</li>
<li>kurnik</li>
<li>ogród</li>
<li>ul</li>
<li>sad</li>
<li>kombajn</li>
</ol>
<h1 id="swiat-zwierzat">Świat zwierząt</h1>
<h2 id="zwierzeta-domowe">Zwierzęta domowe</h2>
<ol>
<li>pies</li>
<li>szczeniak</li>
<li>kot</li>
<li>kotek</li>
<li>koń</li>
<li>źrebak</li>
<li>krowa</li>
<li>cielak</li>
<li>baran</li>
<li>owca</li>
<li>świnia</li>
<li>królik</li>
<li>kura</li>
<li>kogut</li>
<li>kurczątko</li>
<li>indyk</li>
<li>kaczka</li>
<li>kaczątko</li>
<li>gęś</li>
<li>koza</li>
</ol>
<h2 id="zwierzeta-lesne">Zwierzęta leśne</h2>
<ol>
<li>lis</li>
<li>wilk</li>
<li>borsuk</li>
<li>niedźwiedż</li>
<li>żubr</li>
<li>ryś</li>
<li>loś</li>
<li>sarna</li>
<li>jeleń</li>
<li>zając</li>
<li>wiewiórka</li>
<li>jeż</li>
<li>mysz</li>
<li>dzik</li>
</ol>
<h2 id="zwierzeta-egzotyczne">Zwierzęta egzotyczne</h2>
<ol>
<li>lama</li>
<li>wielbląd</li>
<li>kangur</li>
<li>sloń</li>
<li>żyrafa</li>
<li>tygrys</li>
<li>lew</li>
<li>lampart</li>
<li>pantera</li>
<li>zebra</li>
<li>nosorożec</li>
<li>małpa</li>
<li>hipopotam</li>
<li>antylopa</li>
<li>foka</li>
<li>osioł</li>
<li>delfin</li>
</ol>
<h2 id="ryby-gady-pazy">Ryby, gady, płazy</h2>
<ol>
<li>karp</li>
<li>rekin</li>
<li>węgorz</li>
<li>śledź</li>
<li>wąż</li>
<li>jaszczurka</li>
<li>kameleon</li>
<li>krokodyl</li>
<li>żaba</li>
<li>zółw</li>
</ol>
<h2 id="ptaki">Ptaki</h2>
<ol>
<li>orzeł</li>
<li>sowa</li>
<li>jastrząb</li>
<li>bażant</li>
<li>wróbel</li>
<li>jaskółka</li>
<li>wrona</li>
<li>struś</li>
<li>pingwin</li>
<li>łabędź</li>
<li>gołąb</li>
<li>papuga</li>
<li>paw</li>
<li>kanarek</li>
<li>bocian</li>
<li>dzięcioł</li>
</ol>
<h2 id="owady">Owady</h2>
<ol>
<li>mucha</li>
<li>pszczoła</li>
<li>osa</li>
<li>chrząszcz</li>
<li>konil polny</li>
<li>ważka</li>
<li>motyl</li>
<li>ćma</li>
<li>komar</li>
<li>mrówka</li>
<li>pająk</li>
</ol>
<h1 id="bank">Bank</h1>
<ol>
<li>okienko</li>
<li>pieniądze</li>
<li>wymiana walut</li>
<li>kupno</li>
<li>sprzedaż</li>
<li>ochroniarz</li>
<li>alarm</li>
<li>bankomat</li>
<li>karta</li>
<li>depozyt</li>
</ol>
<h1 id="biuro">Biuro</h1>
<ol>
<li>kalendarz</li>
<li>sekretarka</li>
<li>urzędnik</li>
<li>segregator</li>
<li>korespondencja</li>
<li>terminarz</li>
<li>komputer</li>
<li>klawiatura</li>
<li>monitor</li>
<li>mysz</li>
<li>biurko</li>
<li>wentylator</li>
<li>telefon</li>
<li>kalkulator</li>
<li>notes</li>
<li>drukarka</li>
<li>telefon komórkowy</li>
<li>faks</li>
<li>internet</li>
<li>laptop</li>
<li>adres e-mailowy</li>
<li>dziurkacz</li>
<li>zszywacz</li>
<li>spinacz</li>
<li>teczka</li>
</ol>
<h1 id="czas">Czas</h1>
<h2 id="dni-tygodnia">Dni tygodnia</h2>
<ol>
<li>poniedziałek</li>
<li>wtorek</li>
<li>środa</li>
<li>czwartek</li>
<li>platek</li>
<li>sobota</li>
<li>niedziela</li>
</ol>
<h2 id="kalendarz">Kalendarz</h2>
<ol>
<li>styczeń</li>
<li>luty</li>
<li>marzec</li>
<li>kwiecień</li>
<li>maj</li>
<li>czerwiec</li>
<li>lipiec</li>
<li>sierpien</li>
<li>wrzesien</li>
<li>pażdziernik</li>
<li>listopad</li>
<li>grudzien</li>
</ol>
<h2 id="zegary">Zegary</h2>
<ol>
<li>zegar ścienny</li>
<li>zegarek</li>
<li>budzik</li>
<li>mała wskazówka</li>
<li>duża wskazówka</li>
<li>sekundnik</li>
</ol>
<h2 id="okreslenia-czasu">Okreslenia czasu</h2>
<ol>
<li>dziś</li>
<li>jutro</li>
<li>pojutrze</li>
<li>wczoraj</li>
<li>przedwczoraj</li>
</ol>
<h2 id="pory-dnia">Pory dnia</h2>
<ol>
<li>rano</li>
<li>popołudnie</li>
<li>wieczór</li>
<li>noc</li>
</ol>
<h2 id="miary-czasu">Miary czasu</h2>
<ol>
<li>sekunda</li>
<li>minuta</li>
<li>godzina</li>
<li>dzień</li>
<li>tydzien</li>
<li>miesiąc</li>
<li>rok</li>
</ol>
<h1 id="poczta-i-telekomunikacja">Poczta i telekomunikacja</h1>
<h2 id="poczta">Poczta</h2>
<ol>
<li>urząd pocztowy</li>
<li>skrzynka na listy</li>
<li>okienko</li>
<li>listonosz</li>
<li>urzędniczka</li>
<li>pieczątka</li>
<li>waga</li>
<li>telefon</li>
<li>książka telefoniczna</li>
<li>karta telefoniczna</li>
</ol>
<h2 id="listy-i-przesyki">Listy i przesyłki</h2>
<ol>
<li>papeteria</li>
<li>papier listowy</li>
<li>koperta</li>
<li>znaczek</li>
<li>list polecony</li>
<li>list lotniczy</li>
<li>ekspres</li>
<li>widokówka</li>
<li>paczka</li>
</ol>
<h2 id="list-zwyky">List zwykły</h2>
<ol>
<li>stempel</li>
<li>adres</li>
<li>kod</li>
<li>imię</li>
<li>nazwisko</li>
</ol>
<h2 id="blankiety">Blankiety</h2>
<ol>
<li>telegram</li>
<li>przekaz pocztowy</li>
<li>adres pomocniczy</li>
</ol>
<h1 id="policja-i-wojsko">Policja i wojsko</h1>
<h2 id="policja">Policja</h2>
<ol>
<li>posterunek</li>
<li>policjant</li>
<li>mundur</li>
<li>czapka</li>
<li>pałka</li>
<li>przestępca</li>
<li>kajdanki</li>
<li>pies policyjny</li>
<li>kaganiec</li>
<li>smycz</li>
<li>radiowóz</li>
<li>szkło powiększające</li>
<li>odciski palców</li>
<li>więzienie</li>
<li>cela</li>
<li>krata</li>
<li>strażnik</li>
</ol>
<h2 id="wojsko">Wojsko</h2>
<ol>
<li>żołnierz</li>
<li>oficer</li>
<li>marynarz</li>
<li>pilot</li>
<li>czołg</li>
<li>działo</li>
<li>wóz pancerny</li>
<li>dżip</li>
<li>myśliwiec</li>
<li>bombowiec</li>
<li>spadochron</li>
<li>spadochroniarz</li>
<li>okręt</li>
<li>łódź podwodna</li>
<li>lotniskowiec</li>
</ol>
<h2 id="bron">Broń</h2>
<ol>
<li>pistolet maszynowy</li>
<li>karabin</li>
<li>rewolwer</li>
<li>granat</li>
<li>kula</li>
<li>pocisk</li>
<li>rakieta</li>
<li>bomba</li>
<li>torpeda</li>
</ol>
<h1 id="polskie-swieta">Polskie święta</h1>
<h2 id="boze-narodzenie">Boże narodzenie</h2>
<ol>
<li>choinka</li>
<li>bombka</li>
<li>łańcuch</li>
<li>świeczka</li>
<li>gwiazda</li>
<li>prezent</li>
<li>opłatek</li>
<li>kolędnicy</li>
<li>anioł</li>
<li>diabeł</li>
<li>szopka</li>
<li>kolęda</li>
</ol>
<h2 id="wielkanoc">Wielkanoc</h2>
<ol>
<li>koszyk</li>
<li>pisanka</li>
<li>bazie</li>
<li>baranek</li>
<li>palma</li>
<li>śmigus-dyngus</li>
</ol>
<h1 id="straz-pozarna">Straż pożarna</h1>
<ol>
<li>pożar</li>
<li>dym</li>
<li>ogień</li>
<li>wóz strażacki</li>
<li>strażak</li>
<li>hełm</li>
<li>toporek</li>
<li>lina</li>
<li>pompa</li>
<li>wąż</li>
<li>sikawka</li>
<li>woda</li>
<li>drabina</li>
<li>płachta</li>
<li>gaśnica</li>
</ol>
<h1 id="warsztat-i-narzedzia">Warsztat i narzędzia</h1>
<h2 id="narzedzia">Narzędzia</h2>
<ol>
<li>śrubokręt</li>
<li>papier ścierny</li>
<li>dłuto</li>
<li>imadło</li>
<li>pilnik</li>
<li>scyzoryk</li>
<li>klucz</li>
<li>młotek</li>
<li>kielnia</li>
<li>hebel</li>
<li>wiertarka ręczna</li>
<li>wiertarka elektryczna</li>
<li>kombinerki</li>
<li>obcęgi</li>
<li>piłka do metalu</li>
<li>piła do drewna</li>
<li>siekierka</li>
<li>gwóźdź</li>
<li>gwoździk</li>
<li>wkręt</li>
<li>nożyce</li>
</ol>
<h2 id="sruba">Śruba</h2>
<ol>
<li>gwint</li>
<li>podkładka</li>
<li>nakrętka</li>
</ol>
<h2 id="narzedzia-ogrodowe">Narzędzia ogrodowe</h2>
<ol>
<li>widły</li>
<li>łopata</li>
<li>szpadel</li>
<li>motyka</li>
<li>grabie</li>
<li>taczki</li>
<li>pazurki</li>
<li>sekator</li>
<li>konewka</li>
</ol>
<h1 id="zdrowie-opieka-zdrowotna">Zdrowie, opieka zdrowotna</h1>
<h2 id="przychodnia">Przychodnia</h2>
<ol>
<li>rejestracja</li>
<li>pacjent</li>
</ol>
<h2 id="apteka">Apteka</h2>
<ol>
<li>lekarstwo</li>
<li>tabletka</li>
<li>pigułka</li>
<li>krople</li>
<li>maść</li>
<li>bandaż</li>
<li>presto plaster</li>
<li>poloplastr</li>
<li>wata</li>
<li>ampułka</li>
</ol>
<h2 id="gabinet-dentystyczny">Gabinet dentystyczny</h2>
<ol>
<li>dentysta</li>
<li>asystentka</li>
<li>fotel dentystyczny</li>
<li>sonda</li>
<li>lusterko</li>
<li>kleszcze</li>
</ol>
<h2 id="gabinet-internistyczny">Gabinet internistyczny</h2>
<ol>
<li>lekarz</li>
<li>słuchawki</li>
<li>patyk</li>
<li>kozetka</li>
<li>recepta</li>
<li>chory</li>
</ol>
<h2 id="gabinet-zabiegowy">Gabinet zabiegowy</h2>
<ol>
<li>pielęgniarka</li>
<li>pacjent</li>
<li>strzykawka</li>
<li>igła</li>
<li>bandaż</li>
<li>opatrunek</li>
<li>termometr</li>
</ol>
<h2 id="szpital">Szpital</h2>
<ol>
<li>karetka</li>
<li>sanitariusz</li>
<li>nosze</li>
<li>chory</li>
</ol>

"""""
),
            ["""2018-09-01-Celownik"""] = (new Dictionary<string, string> { ["path"]="Polish|Gramatyka",["""title"""] =
"""""
 Rzecownik, przymiotnik
""""",
["""date"""] =
"""""
 2018-09-01
""""",
["""tags"""] =
"""""
 polish gramatyka
""""",
["""categories"""] =
"""""
 learning
""""",
 },
"""""
<h1 id="rzecownik">Rzecownik</h1>
<ol>
<li>liczba pojedyncza</li>
</ol>
<ul>
<li>rodzaj męski
ufam Piotrowi, mojemu profesorowi
Ufam panu, ojcu.</li>
<li>rodzaj żeński</li>
</ul>
<ul>
<li>końcówka -e - rzeczowniki twardotematowe
Ufam mojej mamie.
Ufam przyjaciółce, Kindze, siostrze (k:c, g:dz, r:rz)</li>
<li>końcówka -i - rzeczowniki miękkotematowe
Ufam Ani, mojej cioci, Marii</li>
</ul>
<ul>
<li>rodzaj niaki
Ufam mojemu dzecku.</li>
</ul>
<ol start="2">
<li>liczba mnoga
Ufam moim rodzicam, profesorom, przyjaciołom.</li>
</ol>
<h1 id="przymiotnik">Przymiotnik</h1>
<ol>
<li>liczba pojedyncza</li>
</ol>
<ul>
<li>rodzaj męski
Powiem to mojemy małemy synowi.</li>
<li>rodzaj żeński
Powiem to mojej starszej córce.</li>
<li>rodzaj niaki
Powiem to mojemu młodzemy dziecku.</li>
</ul>
<ol start="2">
<li>liczba mnoga
Powiem to moim dobrym kolegom.</li>
</ol>

"""""
),
            ["""2018-09-01-Czas-przeszły"""] = (new Dictionary<string, string> { ["path"]="Polish|Gramatyka",["""title"""] =
"""""
 Czas przeszły
""""",
["""date"""] =
"""""
 2018-09-01
""""",
["""tags"""] =
"""""
 polish gramatyka
""""",
["""categories"""] =
"""""
 learning
""""",
 },
"""""
<table>
<thead>
<tr>
<th>robić</th>
<th>rodzaj męski</th>
<th>rodzaj żeński</th>
<th>rodzaj nijaki</th>
</tr>
</thead>
<tbody>
<tr>
<td>ja</td>
<td>robiłem</td>
<td>robiłam</td>
<td></td>
</tr>
<tr>
<td>ty</td>
<td>robiłeś</td>
<td>robiłaś</td>
<td></td>
</tr>
<tr>
<td>on/ona/ono</td>
<td>robił</td>
<td>robiła</td>
<td>robiło</td>
</tr>
<tr>
<td>my</td>
<td>robiliśmy</td>
<td>robiłyśmy</td>
<td></td>
</tr>
<tr>
<td>wy</td>
<td>robiliście</td>
<td>robiłyście</td>
<td></td>
</tr>
<tr>
<td>oni/one</td>
<td>robili</td>
<td>robiły</td>
<td></td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>jeść</th>
<th>rodzaj męski</th>
<th>rodzaj żeński</th>
<th>rodzaj nijaki</th>
</tr>
</thead>
<tbody>
<tr>
<td>ja</td>
<td>jadłem</td>
<td>jadłam</td>
<td></td>
</tr>
<tr>
<td>ty</td>
<td>jadłeś</td>
<td>jadłaś</td>
<td></td>
</tr>
<tr>
<td>on/ona/ono</td>
<td>jadł</td>
<td>jadła</td>
<td>jadło</td>
</tr>
<tr>
<td>my</td>
<td>jedliśmy</td>
<td>jadłyśmy</td>
<td></td>
</tr>
<tr>
<td>wy</td>
<td>jedliście</td>
<td>jedłyście</td>
<td></td>
</tr>
<tr>
<td>oni/one</td>
<td>jedli</td>
<td>jedły</td>
<td></td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>moć</th>
<th>rodzaj męski</th>
<th>rodzaj żeński</th>
<th>rodzaj nijaki</th>
</tr>
</thead>
<tbody>
<tr>
<td>ja</td>
<td>mogłem</td>
<td>mogłam</td>
<td></td>
</tr>
<tr>
<td>ty</td>
<td>mogłeś</td>
<td>mogłaś</td>
<td></td>
</tr>
<tr>
<td>on/ona/ono</td>
<td>mógł</td>
<td>mogła</td>
<td>mogło</td>
</tr>
<tr>
<td>my</td>
<td>mogliśmy</td>
<td>mogłyśmy</td>
<td></td>
</tr>
<tr>
<td>wy</td>
<td>mogliście</td>
<td>mogłyście</td>
<td></td>
</tr>
<tr>
<td>oni/one</td>
<td>mogli</td>
<td>mogły</td>
<td></td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>iść</th>
<th>rodzaj męski</th>
<th>rodzaj żeński</th>
<th>rodzaj nijaki</th>
</tr>
</thead>
<tbody>
<tr>
<td>ja</td>
<td>szedłem</td>
<td>szłam</td>
<td></td>
</tr>
<tr>
<td>ty</td>
<td>szedłeś</td>
<td>szłaś</td>
<td></td>
</tr>
<tr>
<td>on/ona/ono</td>
<td>szedł</td>
<td>szła</td>
<td>szło</td>
</tr>
<tr>
<td>my</td>
<td>szliśmy</td>
<td>szłyśmy</td>
<td></td>
</tr>
<tr>
<td>wy</td>
<td>szliście</td>
<td>szłyście</td>
<td></td>
</tr>
<tr>
<td>oni/one</td>
<td>szli</td>
<td>szły</td>
<td></td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>(-eć)</th>
<th>rodzaj męski</th>
<th>rodzaj żeński</th>
<th>rodzaj nijaki</th>
</tr>
</thead>
<tbody>
<tr>
<td>ja</td>
<td>miałem</td>
<td>miałam</td>
<td></td>
</tr>
<tr>
<td>ty</td>
<td>miałeś</td>
<td>miałaś</td>
<td></td>
</tr>
<tr>
<td>on/ona/ono</td>
<td>miał</td>
<td>miała</td>
<td>miało</td>
</tr>
<tr>
<td>my</td>
<td>mieliśmy</td>
<td>miałyśmy</td>
<td></td>
</tr>
<tr>
<td>wy</td>
<td>mieliście</td>
<td>miałyście</td>
<td></td>
</tr>
<tr>
<td>oni/one</td>
<td>mieli</td>
<td>miały</td>
<td></td>
</tr>
</tbody>
</table>

"""""
),
            ["""2018-09-01-Czas-przyszły"""] = (new Dictionary<string, string> { ["path"]="Polish|Gramatyka",["""title"""] =
"""""
 Czas przyszły
""""",
["""date"""] =
"""""
 2018-09-01
""""",
["""tags"""] =
"""""
 polish gramatyka
""""",
["""categories"""] =
"""""
 learning
""""",
 },
"""""
<table>
<thead>
<tr>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>ja będę</td>
<td>bezokolicznik</td>
<td>Co będziesz robić jutro?</td>
</tr>
<tr>
<td>ty będziesz</td>
<td>bezokolicznik</td>
<td>Jutro będę uczyć się polskiego</td>
</tr>
<tr>
<td>on/ona/ono będzie</td>
<td>bezokolicznik</td>
<td></td>
</tr>
<tr>
<td>my będzeimy</td>
<td>bezokolicznik</td>
<td>Kiedy będziecie w Krakowie?</td>
</tr>
<tr>
<td>wy będziecie</td>
<td>bezokolicznik</td>
<td>Będziemy w Krakowie w przyszłym tygodniu.</td>
</tr>
<tr>
<td>oni/one będą</td>
<td>bezokolicznik</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>ja będę</td>
<td>+3 os. I poj.</td>
<td>Będę mógł robić to, co będę chciał.</td>
</tr>
<tr>
<td>ty będziesz</td>
<td>+3 os. I poj.</td>
<td>Będę mógła robić to, co będę chciała.</td>
</tr>
<tr>
<td>on/ona/ono będzie</td>
<td>+3 os. I poj.</td>
<td></td>
</tr>
<tr>
<td>my będzeimy</td>
<td>+3 os. I mn.</td>
<td>Będziemy mogli robić to, co będziemy chcieli.</td>
</tr>
<tr>
<td>wy będziecie</td>
<td>+3 os. I mn.</td>
<td>Będziemy mogły robić to, co będziemy chciały.</td>
</tr>
<tr>
<td>oni/one będą</td>
<td>+3 os. I mn.</td>
<td></td>
</tr>
</tbody>
</table>

"""""
),
            ["""2018-09-01-Czasownik"""] = (new Dictionary<string, string> { ["path"]="Polish|Gramatyka",["""title"""] =
"""""
 Czasownik
""""",
["""date"""] =
"""""
 2018-09-01
""""",
["""tags"""] =
"""""
 polish gramatyka
""""",
["""categories"""] =
"""""
 learning
""""",
 },
"""""
<table>
<thead>
<tr>
<th></th>
<th>być</th>
<th>mieć</th>
<th>mieszkać</th>
<th>rozumieć</th>
<th>przepraszać</th>
<th>czytać</th>
<th>pytać</th>
<th>mówić</th>
<th>lubić</th>
<th>robić</th>
<th>uczyć się</th>
<th>tańczyć</th>
</tr>
</thead>
<tbody>
<tr>
<td>(ja) -ę, -m</td>
<td>jestem</td>
<td>mam</td>
<td>mieszkam</td>
<td>rozumiem</td>
<td>przepraszam</td>
<td>czytam</td>
<td>pytam</td>
<td>mówię</td>
<td>lubię</td>
<td>robię</td>
<td>uczę się</td>
<td>tańczę</td>
</tr>
<tr>
<td>(ty) -sz, -ś</td>
<td>jesteś</td>
<td>masz</td>
<td>mieszkasz</td>
<td>rozumiesz</td>
<td>przepraszasz</td>
<td>czytasz</td>
<td>pytasz</td>
<td>mówisz</td>
<td>lubisz</td>
<td>robisz</td>
<td>uczysz się</td>
<td>tańczysz</td>
</tr>
<tr>
<td>(on/ona/ono) -Ø</td>
<td>jest</td>
<td>ma</td>
<td>mieszka</td>
<td>rozumie</td>
<td>przeprasza</td>
<td>czyta</td>
<td>pyta</td>
<td>mówi</td>
<td>lubi</td>
<td>robi</td>
<td>uczy się</td>
<td>tańczy</td>
</tr>
<tr>
<td>(my) -my</td>
<td>jesteśmy</td>
<td>mamy</td>
<td>mieszkamy</td>
<td>rozymiemy</td>
<td>przepraszamy</td>
<td>czytamy</td>
<td>pytamy</td>
<td>mówimy</td>
<td>lubimy</td>
<td>robimy</td>
<td>uczymy się</td>
<td>tańczymy</td>
</tr>
<tr>
<td>(wy) -cie</td>
<td>jesteście</td>
<td>macie</td>
<td>mieszkacie</td>
<td>rozumiecie</td>
<td>prepraszacie</td>
<td>czytacie</td>
<td>pytacie</td>
<td>mówicie</td>
<td>lubicie</td>
<td>robicie</td>
<td>uczycie się</td>
<td>taczycie</td>
</tr>
<tr>
<td>(oni/one) -ą, -ją</td>
<td>są</td>
<td>mają</td>
<td>mieszkają</td>
<td>rozumieją</td>
<td>przepraszają</td>
<td>czytają</td>
<td>pytają</td>
<td>mówią</td>
<td>lubią</td>
<td>robią</td>
<td>uczą się</td>
<td>tańczą</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th></th>
<th>jeść</th>
<th>wiedzieć</th>
<th>chodzić</th>
<th>chcieć</th>
<th>pisać</th>
<th>moć</th>
<th>pracować</th>
<th>iść</th>
<th>jechać</th>
<th>jeździć</th>
<th>brać</th>
<th>pić</th>
<th>umrzeć</th>
</tr>
</thead>
<tbody>
<tr>
<td>(ja) -ę, -m</td>
<td>jem</td>
<td>wiem</td>
<td>chodzę</td>
<td>chcę</td>
<td>piszę</td>
<td>mogę</td>
<td>pracuję</td>
<td>idę</td>
<td>jadę</td>
<td>jeżdżę</td>
<td>biorę</td>
<td>piję</td>
<td>umrę</td>
</tr>
<tr>
<td>(ty) -sz, -ś</td>
<td>jesz</td>
<td>wiedziesz</td>
<td>chdzisz</td>
<td>chcesz</td>
<td>piszesz</td>
<td>możesz</td>
<td>pracujesz</td>
<td>idziesh</td>
<td>jedziesz</td>
<td>jeździsz</td>
<td>bierzesz</td>
<td>pijesz</td>
<td>umrzesz</td>
</tr>
<tr>
<td>(on/ona/ono) -Ø</td>
<td>je</td>
<td>wie</td>
<td>chodzi</td>
<td>chce</td>
<td>pisze</td>
<td>może</td>
<td>pracuje</td>
<td>idzie</td>
<td>jedzie</td>
<td>jeździ</td>
<td>bierze</td>
<td>pije</td>
<td>umrze</td>
</tr>
<tr>
<td>(my) -my</td>
<td>jemy</td>
<td>wiemy</td>
<td>chodzimy</td>
<td>chcemy</td>
<td>piszemy</td>
<td>możemy</td>
<td>pracujemy</td>
<td>idziemy</td>
<td>jedziemy</td>
<td>jeżdzimy</td>
<td>bierzemy</td>
<td>pijemy</td>
<td>umrzemy</td>
</tr>
<tr>
<td>(wy) -cie</td>
<td>jecie</td>
<td>wiecie</td>
<td>chodzicie</td>
<td>chcecie</td>
<td>piszecie</td>
<td>możecie</td>
<td>pracujecie</td>
<td>idziecie</td>
<td>jedziecie</td>
<td>jeżdzicie</td>
<td>bierzecie</td>
<td>pijecie</td>
<td>umrzecie</td>
</tr>
<tr>
<td>(oni/one) -ą, -ją</td>
<td>jedzą</td>
<td>wiedzą</td>
<td>chodzą</td>
<td>chcą</td>
<td>piszą</td>
<td>mogą</td>
<td>pracują</td>
<td>idą</td>
<td>jadą</td>
<td>jeżdżą</td>
<td>bierzą</td>
<td>piją</td>
<td>umrą</td>
</tr>
</tbody>
</table>

"""""
),
            ["""2018-09-01-Dopełniacz"""] = (new Dictionary<string, string> { ["path"]="Polish|Gramatyka",["""title"""] =
"""""
 Dopełniacz
""""",
["""date"""] =
"""""
 2018-09-01
""""",
["""tags"""] =
"""""
 polish gramatyka
""""",
["""categories"""] =
"""""
 learning
""""",
 },
"""""
<h1 id="dopeniacz-kogo-czego-liczba-pojedyncza-24-september-2018">Dopełniacz (kogo? czego?), liczba pojedyncza - 24 September, 2018</h1>
<p>jakiego? jakiej? jakiego?</p>
<table>
<thead>
<tr>
<th></th>
<th></th>
<th>przymiotnik</th>
<th>rzeczownik</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>jedziemy do:</td>
<td>Paryża, nowego klubu</td>
<td>-ego</td>
<td>-a/-u</td>
<td>rodzaj męski nieżywotny</td>
</tr>
<tr>
<td>nie lubię:</td>
<td>żółtego sera, makaronu</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td>mojego kuzyna</td>
<td>-ego</td>
<td>-a</td>
<td>rodzaj męski żywotny</td>
</tr>
<tr>
<td></td>
<td>dobrej restauracji</td>
<td>-ej</td>
<td>-y /(-k, -g, -j, miękkie) -i</td>
<td>rodzaj żenski</td>
</tr>
<tr>
<td></td>
<td>nowego kina</td>
<td>-ego</td>
<td>-a</td>
<td>rodzaj nijaki</td>
</tr>
</tbody>
</table>
<h1 id="dopeniacz-kogo-czego-liczba-mnoga">Dopełniacz (kogo? czego?), liczba mnoga</h1>
<table>
<thead>
<tr>
<th></th>
<th>przymiotnik, rzeczownik</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td>kiło młodych ziemniaków, hiszpańskich cytryn, polskich jabłek</td>
</tr>
<tr>
<td>przymiotnik:</td>
<td>-ych / (-k, -g) -ich</td>
</tr>
<tr>
<td>rzeczownik:</td>
<td></td>
</tr>
<tr>
<td>-ów:</td>
<td>(mianownik liczba pojedyncza spółgłoska - ziemniak, pomidor, banan)</td>
</tr>
<tr>
<td></td>
<td>kilo ziemniaków, pomidorów, bananów</td>
</tr>
<tr>
<td>-Ø</td>
<td>(mianownik liczba pojedyncza -a, -i, -e, -o - cytryna, jabłko, jajko)</td>
</tr>
<tr>
<td></td>
<td>kiło cytryn, jabłek, jajek</td>
</tr>
</tbody>
</table>

"""""
),
            ["""2018-09-01-Który"""] = (new Dictionary<string, string> { ["path"]="Polish|Gramatyka",["""title"""] =
"""""
 Który
""""",
["""date"""] =
"""""
 2018-09-01
""""",
["""tags"""] =
"""""
 polish gramatyka
""""",
["""categories"""] =
"""""
 learning
""""",
 },
"""""
<p>Czlowiek, który...</p>
<p>Osoba, która...</p>
<p>Dzrewo, które...</p>
<p>Ludzie, którzy...</p>
<p>Osoby, które...</p>

"""""
),
            ["""2018-09-01-Lat-złoty-minutę-godzinę"""] = (new Dictionary<string, string> { ["path"]="Polish|Gramatyka",["""title"""] =
"""""
 Lat|lata, złoty|złotych, minutę|minuty, godzinę|godziny
""""",
["""date"""] =
"""""
 2018-09-01
""""",
["""tags"""] =
"""""
 polish gramatyka
""""",
["""categories"""] =
"""""
 learning
""""",
 },
"""""
<h2 id="lat-czy-lata">Lat czy lata?</h2>
<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>rok</td>
</tr>
<tr>
<td>x5 - x1</td>
<td>lat</td>
</tr>
<tr>
<td>x2, x3, x4</td>
<td>lata</td>
</tr>
</tbody>
</table>
<h2 id="zoty-czy-zotych">Złoty czy złotych</h2>
<table>
<thead>
<tr>
<th></th>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>złoty</td>
<td>1</td>
<td>grosz</td>
</tr>
<tr>
<td>x2, x3, x4</td>
<td>złote</td>
<td>x2, x3, x4</td>
<td>grosze</td>
</tr>
<tr>
<td>x1, x5-x9</td>
<td>złotych</td>
<td>x1, x5-x9</td>
<td>groszy</td>
</tr>
</tbody>
</table>
<h2 id="jak-dlugo">Jak dlugo?</h2>
<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>1 (jedną)</td>
<td>minutę/godzinę</td>
</tr>
<tr>
<td>x2, x3, x4</td>
<td>minuty / godziny</td>
</tr>
<tr>
<td>x5 - x1</td>
<td>minut / godzin</td>
</tr>
<tr>
<td>30 minut</td>
<td>pół godziny</td>
</tr>
</tbody>
</table>

"""""
),
            ["""2018-09-01-Liczebniki"""] = (new Dictionary<string, string> { ["path"]="Polish|Gramatyka",["""title"""] =
"""""
 Liczebniki
""""",
["""date"""] =
"""""
 2018-09-01
""""",
["""tags"""] =
"""""
 polish gramatyka
""""",
["""categories"""] =
"""""
 learning
""""",
 },
"""""
<table>
<thead>
<tr>
<th>mianownik</th>
<th>dopełniacz</th>
<th>miejscownik</th>
</tr>
</thead>
<tbody>
<tr>
<td>perwszy/a/e</td>
<td>pierwszego/ej</td>
<td>perwszym/ej</td>
</tr>
<tr>
<td>drugi</td>
<td>-giego</td>
<td>-im</td>
</tr>
<tr>
<td>trzeci</td>
<td>-iego</td>
<td>-im</td>
</tr>
<tr>
<td>czwarty</td>
<td>-ego</td>
<td>-ym</td>
</tr>
<tr>
<td>pięty</td>
<td>-ego</td>
<td>-ym</td>
</tr>
<tr>
<td>szósty</td>
<td>-ego</td>
<td>-ym</td>
</tr>
<tr>
<td>siódmy</td>
<td>-ego</td>
<td>-ym</td>
</tr>
<tr>
<td>ósmy</td>
<td>-ego</td>
<td>-ym</td>
</tr>
<tr>
<td>dziewiąty</td>
<td>-ego</td>
<td>-ym</td>
</tr>
<tr>
<td>dziesiąty</td>
<td>-ego</td>
<td>-ym</td>
</tr>
<tr>
<td>jedenasty</td>
<td>-ego</td>
<td>-ym</td>
</tr>
<tr>
<td>dwunasty</td>
<td>-ego</td>
<td>-ym</td>
</tr>
<tr>
<td>trzynasty</td>
<td>-ego</td>
<td>-ym</td>
</tr>
<tr>
<td>czternasty</td>
<td>-ego</td>
<td>-ym</td>
</tr>
<tr>
<td>piętnasty</td>
<td>-ego</td>
<td>-ym</td>
</tr>
<tr>
<td>szesnasty</td>
<td>-ego</td>
<td>-ym</td>
</tr>
<tr>
<td>siedemnasty</td>
<td>-ego</td>
<td>-ym</td>
</tr>
<tr>
<td>osiemnasty</td>
<td>-ego</td>
<td>-ym</td>
</tr>
<tr>
<td>dziewiętnasty</td>
<td>-ego</td>
<td>-ym</td>
</tr>
<tr>
<td>dwudziesty</td>
<td>-ego</td>
<td>-ym</td>
</tr>
<tr>
<td>dwudziesy pierwszy</td>
<td>-ego</td>
<td>-ym</td>
</tr>
<tr>
<td>trzydziesty</td>
<td>-ego</td>
<td>-ym</td>
</tr>
<tr>
<td>czterdziesty</td>
<td>-ego</td>
<td>-ym</td>
</tr>
<tr>
<td>pięćdziesiąty</td>
<td>-ego</td>
<td>-ym</td>
</tr>
<tr>
<td>sześćdziesiąty</td>
<td>-ego</td>
<td>-ym</td>
</tr>
<tr>
<td>siedemdziesiąty</td>
<td>-ego</td>
<td>-ym</td>
</tr>
<tr>
<td>osiemdziesiąty</td>
<td>-ego</td>
<td>-ym</td>
</tr>
<tr>
<td>dziewięćdziesiąty</td>
<td>-ego</td>
<td>-ym</td>
</tr>
<tr>
<td>setny</td>
<td>-ego</td>
<td>-ym</td>
</tr>
<tr>
<td>sto perwszy</td>
<td>-ego</td>
<td>-ym</td>
</tr>
<tr>
<td>dwutysięczny</td>
<td>-ego</td>
<td>-ym</td>
</tr>
<tr>
<td>dwa tysiące perwszy</td>
<td>-ego</td>
<td>-ym</td>
</tr>
</tbody>
</table>

"""""
),
            ["""2018-09-01-Mianownik-biernik-liczby-mnogiej"""] = (new Dictionary<string, string> { ["path"]="Polish|Gramatyka",["""title"""] =
"""""
 Mianownik i biernik
""""",
["""date"""] =
"""""
 2018-09-01
""""",
["""tags"""] =
"""""
 polish gramatyka
""""",
["""categories"""] =
"""""
 learning
""""",
 },
"""""
<h1 id="mianownik-i-biernik-liczby-mnogiej">Mianownik i biernik liczby mnogiej</h1>
<table>
<thead>
<tr>
<th></th>
<th>rodzaj męski i żeński</th>
<th>rodzaj nijaki</th>
</tr>
</thead>
<tbody>
<tr>
<td>rzeczownik</td>
<td>-y sofa - sofy<br>-k,-g + -i stolik - stoliki<br>-ni,ń,sz,cz,rz,ż,l,j,c,dz,ś,ć,ź + -e materac - materace</td>
<td>-a lustro - lustra</td>
</tr>
<tr>
<td>przymiotnik</td>
<td>-e biurowy - biurowe<br>-k,-g + -ie drogi - drogie</td>
<td></td>
</tr>
</tbody>
</table>

"""""
),
            ["""2018-09-01-Miescownik"""] = (new Dictionary<string, string> { ["path"]="Polish|Gramatyka",["""title"""] =
"""""
 Miescownik
""""",
["""date"""] =
"""""
 2018-09-01
""""",
["""tags"""] =
"""""
 polish gramatyka
""""",
["""categories"""] =
"""""
 learning
""""",
 },
"""""
<h1 id="miescownik-o-kim-o-czym-w-na-o-po-przy-liczba-poejdyncza">Miescownik (o kim? o czym? w, na, o, po, przy), liczba poejdyncza</h1>
<h2 id="przymiotnik">Przymiotnik</h2>
<table>
<thead>
<tr>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>Od roku pracuję w novym biurze.</td>
<td>-ym/(-k, -g) -im</td>
<td>rodzay męski, rodzaj nijaki</td>
</tr>
<tr>
<td>Uczę się w polskiej szkole w Warszawie</td>
<td>-ej/(-k, -g) -iej</td>
<td>rodzaj żeński</td>
</tr>
</tbody>
</table>
<h2 id="rzeczownik">Rzeczownik</h2>
<table>
<thead>
<tr>
<th>mianownik</th>
<th>rodzaj męski, rodzay żeński,rodzaj niajki</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>b,p,m,n,w,f,s,z</td>
<td>w klubie, w sklepie, o mamie, na oknie, w Warszawie, o szefie, w klasie, w Efexie</td>
<td>-ie</td>
</tr>
<tr>
<td>t:cie,d:dzie,st:ście,zd:żdzie,sł:śle,r:rze,ł:le</td>
<td>na uniwersytecie, na snowboardzie, w mieście, o gwieździe, na krześle, w teatrze, na stole</td>
<td>-e</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>mianownik</th>
<th>rodzaj męski</th>
<th>rodzay żeński</th>
<th>rodzaj niajki</th>
</tr>
</thead>
<tbody>
<tr>
<td>k,g,ch,h</td>
<td>-u<br> w kiosku, w rogu, na dachu</td>
<td>-e<br> w Polsce k:ce <br> w Pradze g:dze <br> o musze ch:sze</td>
<td>-u <br> w jabłku <br> w tangu <br> w uchu</td>
</tr>
<tr>
<td>c,dz,cz,sz,rz,ż</td>
<td>-u<br>na kocu, w Grudziądzu, o meczu, w koszu, o mężu</td>
<td>-y<br>w pracy, o władzy, na daczy, o suszy, na wieży</td>
<td>-u<br>w slońcu</td>
</tr>
<tr>
<td>l,j,i,ś,ń,ć,ź</td>
<td>-u<br>w fotelu, w maju, o Jasiu, na koniu</td>
<td>-i<br>w sali, w restauracji, w Belgii, o Kasi, w kuchni, o babci, o Zuzi</td>
<td></td>
</tr>
</tbody>
</table>
<blockquote>
<p>syn - o synu, pan - o panu, dom - w domu, muzeum - w muzeum, liceum - w liceum</p>
</blockquote>
<blockquote>
<p>wieś - na wsi, Austria - w Austrii, ekonomia - o ekonomii</p>
</blockquote>
<blockquote>
<p>ó:o/e stół - na stole, kościól - w kościole</p>
</blockquote>
<blockquote>
<p>a:e miasto - w mieście</p>
</blockquote>
<h1 id="miescownik-o-kim-o-czym-w-na-o-po-przy-liczba-mnoga">Miescownik (o kim? o czym? w, na, o, po, przy), liczba mnoga</h1>
<p>Ubrania kupuję w drogich sklepach. Studenci uczą się w nowoczesnych bibliotekach. Premiery filmów są w dużych kinach.</p>
<p>przymiotnik: -ych / (-k, -g) -ich
rzeczownik: -ach</p>
<blockquote>
<p>Niemcy - w Niemczech, Włochy - we Włoszech, Węgry - na Węgrzech</p>
</blockquote>

"""""
),
            ["""2018-09-01-Narzędnik"""] = (new Dictionary<string, string> { ["path"]="Polish|Gramatyka",["""title"""] =
"""""
 Narzędnik
""""",
["""date"""] =
"""""
 2018-09-01
""""",
["""tags"""] =
"""""
 polish gramatyka
""""",
["""categories"""] =
"""""
 learning
""""",
 },
"""""
<h1 id="narzednik-kim-czym-liczba-pojedyncza">Narzędnik ( kim? czym?) liczba pojedyncza</h1>
<table>
<thead>
<tr>
<th></th>
<th>mianownik: kto? co?</th>
<th>narzędnik: kim? czym?</th>
<th>końcówki</th>
<th>końcówki</th>
</tr>
</thead>
<tbody>
<tr>
<td>M</td>
<td>sympatyczny nauczyciel</td>
<td>sympatycznym nauczycielem</td>
<td>-ym</td>
<td>-em</td>
</tr>
<tr>
<td>M</td>
<td>sympatyczny Polak</td>
<td>sympatycznym Polakiem</td>
<td></td>
<td>-k, -g + -iem</td>
</tr>
<tr>
<td>M</td>
<td>wysoki mężczyzna</td>
<td>wysokim mężczyzną</td>
<td>-k, -g + im</td>
<td>-ą</td>
</tr>
<tr>
<td>Ż</td>
<td>sympatyczna nauczycielka</td>
<td>sympatyczną nauczycielką</td>
<td>-ą</td>
<td>-ą</td>
</tr>
<tr>
<td>Ż</td>
<td>wysoka kobita</td>
<td>wysoką kobietą</td>
<td>-ą</td>
<td>-ą</td>
</tr>
<tr>
<td>Ż</td>
<td>mila pani</td>
<td>milą panią</td>
<td>-ą</td>
<td>-ą</td>
</tr>
<tr>
<td>N</td>
<td>polskie kino</td>
<td>polskim kinem</td>
<td>-k, -g + im</td>
<td>-em</td>
</tr>
<tr>
<td>N</td>
<td>sympatyczne dziecko</td>
<td>sympatycznym dzieckiem</td>
<td>-ym</td>
<td>-k, -g + -iem</td>
</tr>
</tbody>
</table>
<blockquote>
<p>-e/-ie:Ø
minist<strong>e</strong>r - ministrem
Niem<strong>ie</strong>c - Niemcem</p>
</blockquote>
<h1 id="narzednikkim-czym-liczba-mnoga">Narzędnik(kim? czym?), liczba mnoga</h1>
<table>
<thead>
<tr>
<th></th>
<th>mianownik: kto? co? liczba pojedyncza</th>
<th>narzędnik: kim? czym?</th>
<th>końcówki</th>
<th>końcówki</th>
</tr>
</thead>
<tbody>
<tr>
<td>M</td>
<td>sympatyczny nauczyciel</td>
<td>sympatycznymi nauczycielami</td>
<td>-ymi</td>
<td>-ami</td>
</tr>
<tr>
<td>M</td>
<td>sympatyczny Polak</td>
<td>sympatycznymi mężczyznami</td>
<td>-ymi</td>
<td>-ami</td>
</tr>
<tr>
<td>Ż</td>
<td>wysoka kobita</td>
<td>wysokimi kobietami</td>
<td>-k, -g + -imi</td>
<td>-ami</td>
</tr>
<tr>
<td>Ż</td>
<td>sympatyczna nauczycielka</td>
<td>sympatycznymi nauczycielkami</td>
<td>-ymi</td>
<td>-ami</td>
</tr>
<tr>
<td>N</td>
<td>dobre auto</td>
<td>dobrymi autami</td>
<td>-ymi</td>
<td>-ami</td>
</tr>
</tbody>
</table>
<blockquote>
<p>dziecko - dziećmi</p>
</blockquote>

"""""
),
            ["""2018-09-01-Powinien"""] = (new Dictionary<string, string> { ["path"]="Polish|Gramatyka",["""title"""] =
"""""
 Powinien
""""",
["""date"""] =
"""""
 2018-09-01
""""",
["""tags"""] =
"""""
 polish gramatyka
""""",
["""categories"""] =
"""""
 learning
""""",
 },
"""""
<h1 id="liczba-poedyncza">Liczba poedyncza</h1>
<p>powinienen/powinnam</p>
<p>powinieneś / powinnaś</p>
<p>powinien / powinna / powinno</p>
<h1 id="liczba-mnoga">Liczba mnoga</h1>
<p>powinniśmy / powinnyśmy</p>
<p>powinniście / powinnyście</p>
<p>powinni / powinny</p>

"""""
),
            ["""2018-09-01-Prymiotnik-Mianownik-Liczba-Mnoga"""] = (new Dictionary<string, string> { ["path"]="Polish|Gramatyka",["""title"""] =
"""""
 Przymiotnik
""""",
["""date"""] =
"""""
 2018-09-01
""""",
["""tags"""] =
"""""
 polish gramatyka
""""",
["""categories"""] =
"""""
 learning
""""",
 },
"""""
<h1 id="mianownik-liczba-mnoga">Mianownik liczba mnoga</h1>
<h1 id="rodzaj-meskoosobowy">Rodzaj męskoosobowy</h1>
<table>
<thead>
<tr>
<th>Przykład</th>
<th>Końcówki</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>towaryski - towarzyscy</td>
<td>-ki -cy</td>
<td>-y</td>
</tr>
<tr>
<td>drogi - dordzy</td>
<td>-gi -dzy</td>
<td>-y</td>
</tr>
<tr>
<td>dobry - dobrzy</td>
<td>-ry -rzy</td>
<td>-y</td>
</tr>
<tr>
<td>interecujący - interecujący</td>
<td>-cy -cy</td>
<td>-y</td>
</tr>
<tr>
<td>bogaty - bogaci</td>
<td>-ty -ci</td>
<td>-i</td>
</tr>
<tr>
<td>tłusty - tłuści</td>
<td>-sty -ści</td>
<td>-i</td>
</tr>
<tr>
<td>młody - młodzi</td>
<td>-dy -dzi</td>
<td>-i</td>
</tr>
<tr>
<td>głuchy - głusi</td>
<td>-chy -si</td>
<td>-i</td>
</tr>
<tr>
<td>lepszy - lepsi</td>
<td>-szy -si</td>
<td>-i</td>
</tr>
<tr>
<td>miły - mili</td>
<td>-ły -li</td>
<td>-i</td>
</tr>
<tr>
<td>smutny - smutni</td>
<td>inne -i</td>
<td>-i</td>
</tr>
<tr>
<td>ciekawy - ciekawi</td>
<td>inne -i</td>
<td>-i</td>
</tr>
</tbody>
</table>

"""""
),
            ["""2018-09-01-Przyimki"""] = (new Dictionary<string, string> { ["path"]="Polish|Gramatyka",["""title"""] =
"""""
 Przyimki
""""",
["""date"""] =
"""""
 2018-09-01
""""",
["""tags"""] =
"""""
 polish gramatyka
""""",
["""categories"""] =
"""""
 learning
""""",
 },
"""""
<h1 id="przyimki-statycznie-i-dynamicznie">Przyimki (statycznie i dynamicznie)</h1>
<p>Tags: polish</p>
<table>
<thead>
<tr>
<th>dynamicznie</th>
<th>do+... <br>do kogo?<br>dopełniacz</th>
<th>do+...<br>dokąd?<br>dopełniacz</th>
<th>na+...<br>dokąd?<br>biernik</th>
<th>na+...<br>na co?<br>biernik</th>
<th>w+...<br>dokąd?<br>biernik</th>
<th>nad+...<br>dokąd?<br>biernik</th>
</tr>
</thead>
<tbody>
<tr>
<td>idę, jadę, iecę</td>
<td>do kolegi<br>do przyjaciół<br>do rodziny<br>do fryzjera</td>
<td>do Polski<br>do Krakowa<br>do domu<br>do kawiarni<br>do kina<br>do parku</td>
<td>na plac<br>na peron<br>na parking<br>na Mazury<br><strong>na pacztę</strong><br><strong>na uniwersytet</strong><br><strong>na dworzec</strong></td>
<td>na kawę<br>na piwo<br>na spacer<br>na wykład<br>na kurs</td>
<td>w góry<br>w Tatry<br>w Alpy<br>w Sudety<br>w Bieszczady</td>
<td>nad morze<br>nad jezioro<br>nad rzekę<br>nad Bałtyk<br>nad Wisłę</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>statycznie</th>
<th>u+... <br>u kogo?<br>dopełniacz</th>
<th>w+...<br>gdzie?<br>miescownik</th>
<th>na+...<br>gdzie?<br>miescownik</th>
<th>na+...<br>na czym?<br>miescownik</th>
<th>w+...<br>gdzie?<br>miescownik</th>
<th>nad+...<br>gdzie?<br>narzędnik</th>
</tr>
</thead>
<tbody>
<tr>
<td>jestem mieszkam</td>
<td>u kolegi<br>u przyjaciół<br>u rodziny<br>u fryzjera</td>
<td>w Polsce<br>w Krakowie<br>w domu<br>w kawiarni<br>w kinie<br>w parku</td>
<td>na placu<br>na peronie<br>na parkingu<br>na Mazurach<br><strong>na paczcie</strong><br><strong>na uniwersytecie</strong><br><strong>na dworcu</strong></td>
<td>na kawie<br>na piwie<br> na spacerze<br>na wykładzie<br>na kursie</td>
<td>w górach<br>w Tatrach<br>w Alpach<br>w Sudetach<br>w Bieszczadach</td>
<td>nad morzem<br>nad jeziorem<br>nad rzeką<br>nad Bałtykiem<br>nad Wislą</td>
</tr>
</tbody>
</table>

"""""
),
            ["""2018-09-01-Przymiotnik"""] = (new Dictionary<string, string> { ["path"]="Polish|Gramatyka",["""title"""] =
"""""
 Przymiotnik
""""",
["""date"""] =
"""""
 2018-09-01
""""",
["""tags"""] =
"""""
 polish gramatyka
""""",
["""categories"""] =
"""""
 learning
""""",
 },
"""""
<table>
<thead>
<tr>
<th>rodzaj męski - jaki?</th>
<th>rodzaj żeński - jaka?</th>
<th>rodzaj nijaki - jakie?</th>
</tr>
</thead>
<tbody>
<tr>
<td>Jaki to (jest) samochód?</td>
<td>Jaka to (jest) literatura?</td>
<td>Jakie to (jest) nazwisko?</td>
</tr>
<tr>
<td>To (jest) japoński samochód</td>
<td>To (jest) literatura francuska</td>
<td>To (jest) hiszpańskie nazwisko</td>
</tr>
<tr>
<td>-y</td>
<td>-a</td>
<td>-e</td>
</tr>
<tr>
<td>(-k, -g) -i</td>
<td></td>
<td>(-k, -g) -ie</td>
</tr>
</tbody>
</table>

"""""
),
            ["""2018-09-01-Przypadki"""] = (new Dictionary<string, string> { ["path"]="Polish|Gramatyka",["""title"""] =
"""""
 Przypadki
""""",
["""date"""] =
"""""
 2018-09-01
""""",
["""tags"""] =
"""""
 polish gramatyka
""""",
["""categories"""] =
"""""
 learning
""""",
 },
"""""
<h2 id="liczba-pojeduncza">Liczba pojeduncza</h2>
<table>
<thead>
<tr>
<th>skrót</th>
<th>nazwa</th>
<th>pytanie</th>
<th>M</th>
<th>Ż</th>
<th>N</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>M.</td>
<td>Mianownik</td>
<td>Kto? Co?</td>
<td>lekarz, pies</td>
<td>książka</td>
<td>okno</td>
<td></td>
</tr>
<tr>
<td>D.</td>
<td>Dopełniacz</td>
<td>Kogo? Czego?</td>
<td>lekarza, psa</td>
<td>książki</td>
<td>okna</td>
<td></td>
</tr>
<tr>
<td>C.</td>
<td>Celownik</td>
<td>Komu? Czemu?</td>
<td>lekarzowi, psu</td>
<td>książce</td>
<td>oknu</td>
<td></td>
</tr>
<tr>
<td>B.</td>
<td>Biernik</td>
<td>Kogo? Co?</td>
<td>lekarza, psa</td>
<td>książkę</td>
<td>okno</td>
<td></td>
</tr>
<tr>
<td>N.</td>
<td>Narzędnik</td>
<td>Z kim? Z czym?</td>
<td>lekrzem, psem</td>
<td>książką</td>
<td>oknem</td>
<td></td>
</tr>
<tr>
<td>Msc.</td>
<td>Miejscownik</td>
<td>O kim? O czym?</td>
<td>(o) lekarzu, psie</td>
<td>książce</td>
<td>oknie</td>
<td></td>
</tr>
<tr>
<td>W.</td>
<td>Wolacz</td>
<td>O!</td>
<td>lekarzu! psie!</td>
<td>książko!</td>
<td>okno!</td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="liczba-mnoga">Liczba mnoga</h2>
<table>
<thead>
<tr>
<th>skrót</th>
<th>nazwa</th>
<th>pytanie</th>
<th>M</th>
<th>nie M</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>M.</td>
<td>Mianownik</td>
<td>Kto? Co?</td>
<td>lekarze</td>
<td>psy, książki, okna</td>
<td></td>
</tr>
<tr>
<td>D.</td>
<td>Dopełniacz</td>
<td>Kogo? Czego?</td>
<td>lekarzy</td>
<td>psów, książek, okien</td>
<td></td>
</tr>
<tr>
<td>C.</td>
<td>Celownik</td>
<td>Komu? Czemu?</td>
<td>lekarzom</td>
<td>psom, książkom, oknom</td>
<td></td>
</tr>
<tr>
<td>B.</td>
<td>Biernik</td>
<td>Kogo? Co?</td>
<td>lekarzy</td>
<td>psy, książki, okna</td>
<td></td>
</tr>
<tr>
<td>N.</td>
<td>Narzędnik</td>
<td>Z kim? Z czym?</td>
<td>lekrzami</td>
<td>psami, książkami, oknami</td>
<td></td>
</tr>
<tr>
<td>Msc.</td>
<td>Miejscownik</td>
<td>O kim? O czym?</td>
<td>(o) lekarzach</td>
<td>psach, książkach, oknach</td>
<td></td>
</tr>
<tr>
<td>W.</td>
<td>Wolacz</td>
<td>O!</td>
<td>lekarze!</td>
<td>psy! książki! okna!</td>
<td></td>
</tr>
</tbody>
</table>

"""""
),
            ["""2018-09-01-Przysłówek"""] = (new Dictionary<string, string> { ["path"]="Polish|Gramatyka",["""title"""] =
"""""
 Przysłówek
""""",
["""date"""] =
"""""
 2018-09-01
""""",
["""tags"""] =
"""""
 polish gramatyka
""""",
["""categories"""] =
"""""
 learning
""""",
 },
"""""
<h1 id="przysowek-jak">Przysłówek (jak?)</h1>
<p>-o lub -e</p>
<p>Dziś jest zimno, ale słonecznie.</p>

"""""
),
            ["""2018-09-01-Rzeczownik-Mianownik-Liczba-Mnoga"""] = (new Dictionary<string, string> { ["path"]="Polish|Gramatyka",["""title"""] =
"""""
 Rzeczownik
""""",
["""date"""] =
"""""
 2018-09-01
""""",
["""tags"""] =
"""""
 polish gramatyka
""""",
["""categories"""] =
"""""
 learning
""""",
 },
"""""
<h1 id="mianownik-liczba-mnoga">Mianownik liczba mnoga</h1>
<h1 id="rodzaj-meskoosobowy">Rodzaj męskoosobowy</h1>
<table>
<thead>
<tr>
<th>Przykład</th>
<th>Końcówki</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>pan-panowie</td>
<td></td>
<td>-owie</td>
</tr>
<tr>
<td>profesor-profesorowie</td>
<td></td>
<td>-owie</td>
</tr>
<tr>
<td>ojciec-ojcowie</td>
<td></td>
<td>-owie</td>
</tr>
<tr>
<td>syn-synowie</td>
<td></td>
<td>-owie</td>
</tr>
<tr>
<td>mąż-mężowie</td>
<td></td>
<td>-owie</td>
</tr>
<tr>
<td>Polak-Polacy</td>
<td>-k -cy</td>
<td>-y</td>
</tr>
<tr>
<td>pedagog-pedagodzy</td>
<td>-g(a) -dzy</td>
<td>-y</td>
</tr>
<tr>
<td>kolega-koledzy</td>
<td>-g(a) -dzy</td>
<td>-y</td>
</tr>
<tr>
<td>aktor-aktorzy</td>
<td>-r -rzy</td>
<td>-y</td>
</tr>
<tr>
<td>Niemiec-Niemcy</td>
<td>-ec -cy</td>
<td>y</td>
</tr>
<tr>
<td>student-studenci</td>
<td>-t -ci</td>
<td>-i</td>
</tr>
<tr>
<td>artysta-artyści</td>
<td>-sta -ści</td>
<td>-i</td>
</tr>
<tr>
<td>Szwed-Szwedzi</td>
<td>-d -dzi</td>
<td>-i</td>
</tr>
<tr>
<td>Włoch-Włosi</td>
<td>-ch -si</td>
<td>-i</td>
</tr>
<tr>
<td>lekarz-lekarze</td>
<td>-rz</td>
<td>-e</td>
</tr>
<tr>
<td>listonosz-listonosze</td>
<td>-sz</td>
<td>-e</td>
</tr>
<tr>
<td>gracz-gracze</td>
<td>-cz</td>
<td>-e</td>
</tr>
<tr>
<td>gość-goście</td>
<td>-ść</td>
<td>-e</td>
</tr>
<tr>
<td>nauczyciel-nauczyciele</td>
<td>-l</td>
<td>-e</td>
</tr>
<tr>
<td>Amerykanin-Amerykanie</td>
<td>-anin -anie</td>
<td>-e</td>
</tr>
</tbody>
</table>
<blockquote>
<p>mężczyzna - mężczyzni, brat - bracia, ksiądz - księża</p>
</blockquote>

"""""
),
            ["""2018-09-01-Rzeczownik-odczasownikowy"""] = (new Dictionary<string, string> { ["path"]="Polish|Gramatyka",["""title"""] =
"""""
 Rzeczownik odczasownikowy
""""",
["""date"""] =
"""""
 2018-09-01
""""",
["""tags"""] =
"""""
 polish gramatyka
""""",
["""categories"""] =
"""""
 learning
""""",
 },
"""""
<p>-nie: bezakolicznik -ać, -ować, -eć - plywanie, fotografowanie, rozumienie</p>
<p>-enie: bezakolicznik -ić, -yć - chodzenie, uczenie się</p>
<p>-enie: bezakolicznik -ić, -yć - chodzenie, uczenie się</p>
<p>-cie: krótkie czasowniki typu myć, pić i bezakolicznik -ąć - mycie, zamknięcie</p>

"""""
),
            ["""2018-09-01-Się"""] = (new Dictionary<string, string> { ["path"]="Polish|Gramatyka",["""title"""] =
"""""
 Się
""""",
["""date"""] =
"""""
 2018-09-01
""""",
["""tags"""] =
"""""
 polish gramatyka
""""",
["""categories"""] =
"""""
 learning
""""",
 },
"""""
<ul>
<li>Dopełniacz - siebie</li>
<li>Celownik - sobie</li>
<li>Biernik - siebie</li>
<li>Narędnik - sobą</li>
<li>Miejscownik - sobie</li>
</ul>

"""""
),
            ["""2018-09-01-Stopniowanie-przymiotnika"""] = (new Dictionary<string, string> { ["path"]="Polish|Gramatyka",["""title"""] =
"""""
 Stopniowanie przymiotnika
""""",
["""date"""] =
"""""
 2018-09-01
""""",
["""tags"""] =
"""""
 polish gramatyka
""""",
["""categories"""] =
"""""
 learning
""""",
 },
"""""
<h1 id="stopien-wyzszy">Stopień wyższy</h1>
<ul>
<li>gruby - grubszy, stary - starszy</li>
<li>ładny - łądniejszy, piękny - piękniejszy, -ny -niejszy</li>
<li>wysoki - wyższy, drogi - droższy -k, -ok:-., -s:ż, -g:ż</li>
<li>impulsywny - bardziej/mniej impulsywny</li>
<li>otwarty - bardziej/mniej otwarty</li>
<li>znany - bardziej/mniej znany</li>
<li>nieśmiały - bardziej/mniej nieśmiały</li>
<li>bezradny - bardziej/mniej bezradny</li>
</ul>
<blockquote>
<p>mały -mniejszy</p>
</blockquote>
<blockquote>
<p>duży - większy</p>
</blockquote>
<blockquote>
<p>dobry - lapszy</p>
</blockquote>
<blockquote>
<p>zły - gorszy</p>
</blockquote>
<p>niż + mianownik / od + dopełniacz</p>
<h1 id="stopien-najwyzszy">Stopień najwyższy</h1>
<ul>
<li>grubszy - najgrybszy</li>
<li>łądniejszy - najłądniejszy</li>
<li>wyższy - najwyższy</li>
<li>bardziej impulsywny - najbardziej impulsywny</li>
<li>mniej otwarty - najmniej otwarty</li>
</ul>
<p>z(ze) + dopełniacz</p>
<h1 id="porownawcze-formy-przymiotnika">Porownawcze formy przymiotnika</h1>
<table>
<thead>
<tr>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>duży</td>
<td>większy</td>
<td>największy</td>
</tr>
<tr>
<td>mały</td>
<td>mniejszy</td>
<td>najmnieszy</td>
</tr>
<tr>
<td>drogi</td>
<td>droższy</td>
<td>najdroższy</td>
</tr>
<tr>
<td>tani</td>
<td>tańszy</td>
<td>najtańszy</td>
</tr>
<tr>
<td></td>
<td>bardzej</td>
<td></td>
</tr>
</tbody>
</table>

"""""
),
            ["""2018-09-01-Stopniowanie-przysłówków"""] = (new Dictionary<string, string> { ["path"]="Polish|Gramatyka",["""title"""] =
"""""
 Stopniowanie przysłówków
""""",
["""date"""] =
"""""
 2018-09-01
""""",
["""tags"""] =
"""""
 polish gramatyka
""""",
["""categories"""] =
"""""
 learning
""""",
 },
"""""
<ul>
<li><p>trudno - trudniej - najtrudniej</p>
</li>
<li><p>drogo - drożej - najdrożej g:ż</p>
</li>
<li><p>wysoko - wyżej - najwyżej, krótko - krócej - najkrócej s:ż t:c</p>
</li>
<li><p>dobrze - lepiej -najlepiej, żle - gorszej - najgorszej</p>
</li>
<li><p>dużo - więcej - najwięcej, mało - mniej - najmniej</p>
</li>
<li><p>lekko - lżej</p>
</li>
<li><p>intensywnie - bardziej intensywnie - najbardziej intensywnie</p>
</li>
<li><p>elegancko - mniej elegancko - najmniej elegancko</p>
</li>
</ul>

"""""
),
            ["""2018-09-01-Tryb-rozkazujący"""] = (new Dictionary<string, string> { ["path"]="Polish|Gramatyka",["""title"""] =
"""""
 Tryb rozkazujący
""""",
["""date"""] =
"""""
 2018-09-01
""""",
["""tags"""] =
"""""
 polish gramatyka
""""",
["""categories"""] =
"""""
 learning
""""",
 },
"""""
<p>-ę, -esz</p>
<ul>
<li>piszę - piszesz Pisz! Piszmy! Piszcie!</li>
<li>piję - pijesz Pij! pijmy! Pijcie!</li>
<li>biorę - bierzesz Bierz! Bierzmy! Bierzcie!</li>
</ul>
<hr />
<ul>
<li>Jesli dwie spółgłoski - ij</li>
<li>ciągnę - ciągniesz Ciągnij! Ciągnijmy! Ciągnijcie!</li>
<li>śpię - śpisz Śpij! Śpijcie! Śpijcie!</li>
</ul>
<hr />
<p>-ę, -ysz, -ę -isz</p>
<ul>
<li>suszę - suszysz Susz! Suszmy! Suszcie!</li>
<li>radzę - radzisz Radź! Radźmy! Radżcie!</li>
<li>robię - robisz Rób! Róbmy! Róbcie!</li>
</ul>
<hr />
<p>-m, -sz</p>
<ul>
<li><p>gram - grasz - grają Graj! Grajmy! Grajcie!</p>
</li>
<li><p>być - bądź - bądźmy - bądźcie</p>
</li>
<li><p>mieć - miej - miejmy - miejcie</p>
</li>
<li><p>widzieć - patrz</p>
</li>
<li><p>wziąć - weż</p>
</li>
<li><p>zrobić - zrób</p>
</li>
<li><p>pokazać - pokaż</p>
</li>
<li><p>brać - bierz</p>
</li>
<li><p>wyjąć - wyjmij</p>
</li>
</ul>

"""""
),
            ["""2018-09-01-Wymowa"""] = (new Dictionary<string, string> { ["path"]="Polish|Gramatyka",["""title"""] =
"""""
 Wymowa
""""",
["""date"""] =
"""""
 2018-09-01
""""",
["""tags"""] =
"""""
 polish gramatyka
""""",
["""categories"""] =
"""""
 learning
""""",
 },
"""""
<table>
<thead>
<tr>
<th>Samogłoski</th>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>a</td>
<td>e</td>
<td>i</td>
</tr>
<tr>
<td>y</td>
<td>ę</td>
<td>ą</td>
</tr>
<tr>
<td>o</td>
<td>u//ó</td>
<td></td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>Spółgłoski</th>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>k</td>
<td>g</td>
<td></td>
</tr>
<tr>
<td>t</td>
<td>d</td>
<td></td>
</tr>
<tr>
<td>p</td>
<td>b</td>
<td></td>
</tr>
<tr>
<td>f</td>
<td>w</td>
<td></td>
</tr>
<tr>
<td>j</td>
<td></td>
<td></td>
</tr>
<tr>
<td>h//ch</td>
<td></td>
<td></td>
</tr>
<tr>
<td>m</td>
<td>n</td>
<td>ń//ni</td>
</tr>
<tr>
<td>l</td>
<td>r</td>
<td>ł</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>s</td>
<td>ś//si</td>
<td>sz</td>
</tr>
<tr>
<td>z</td>
<td>ż//zi</td>
<td>ż//rz</td>
</tr>
<tr>
<td>c</td>
<td>ć//ci</td>
<td>cz</td>
</tr>
<tr>
<td>dz</td>
<td>dź//dzi</td>
<td>dż</td>
</tr>
</tbody>
</table>
<blockquote>
<p>Inna ortografia, taka sama wymowa!
ó = u, ch = h, rz = ż, ci = ć, dzi = dź, ni = ń, si = ś, zi = ż</p>
</blockquote>

"""""
),
            ["""2018-09-01-Zaimki-osobowe"""] = (new Dictionary<string, string> { ["path"]="Polish|Gramatyka",["""title"""] =
"""""
 Zaimki osobowe
""""",
["""date"""] =
"""""
 2018-09-01
""""",
["""tags"""] =
"""""
 polish gramatyka
""""",
["""categories"""] =
"""""
 learning
""""",
 },
"""""
<table>
<thead>
<tr>
<th>Mianownik</th>
<th>Dopełniacz(kogo? czego?)</th>
<th>Celownik(komu? czemy?)</th>
<th>Biernik(kogo? co?)</th>
<th>Narzędnik(z kim? z czym?)</th>
<th>Miejscownik(o kim? o czym?)</th>
</tr>
</thead>
<tbody>
<tr>
<td>ja</td>
<td>mnie</td>
<td>mi, mnie</td>
<td>mnie</td>
<td>mną</td>
<td>mnie</td>
</tr>
<tr>
<td>ty</td>
<td>ciebie, cię</td>
<td>ci, tobie</td>
<td>ciebie, cię</td>
<td>tobą</td>
<td>tobie</td>
</tr>
<tr>
<td>on</td>
<td>go, jego, niego</td>
<td>mu, jemu, niemu</td>
<td>go, niego, jego</td>
<td>nim</td>
<td>nim</td>
</tr>
<tr>
<td>ona</td>
<td>jej, niej</td>
<td>jej, niej</td>
<td>ją, nią</td>
<td>nią</td>
<td>niej</td>
</tr>
<tr>
<td>ono</td>
<td>go, jego, niego</td>
<td>mu, jemu, niemu</td>
<td>je, nie</td>
<td>nim</td>
<td>nim</td>
</tr>
<tr>
<td>pan</td>
<td>pana</td>
<td>panu</td>
<td>pana</td>
<td>panem</td>
<td>panu</td>
</tr>
<tr>
<td>panowie</td>
<td>panów</td>
<td>panim</td>
<td>panów</td>
<td>panami</td>
<td>panach</td>
</tr>
<tr>
<td>pani</td>
<td>pani</td>
<td>pani</td>
<td>panią</td>
<td>panią</td>
<td>pani</td>
</tr>
<tr>
<td>panie</td>
<td>pań</td>
<td>paniom</td>
<td>panie</td>
<td>paniami</td>
<td>paniach</td>
</tr>
<tr>
<td>państwo</td>
<td>państwa</td>
<td>państwu</td>
<td>państwa</td>
<td>państwem</td>
<td>państwu</td>
</tr>
<tr>
<td>my</td>
<td>nas</td>
<td>nam</td>
<td>nas</td>
<td>nami</td>
<td>nas</td>
</tr>
<tr>
<td>wy</td>
<td>was</td>
<td>wam</td>
<td>was</td>
<td>wami</td>
<td>was</td>
</tr>
<tr>
<td>oni</td>
<td>ich, nich</td>
<td>im, nim</td>
<td>ich, nich</td>
<td>nimi</td>
<td>nich</td>
</tr>
<tr>
<td>one</td>
<td>ich, nich</td>
<td>im, nim</td>
<td>je, nie</td>
<td>nimi</td>
<td>nich</td>
</tr>
<tr>
<td>reflexive</td>
<td>siebie, się</td>
<td>sobie</td>
<td>siebie, się</td>
<td>sobą</td>
<td>sobie</td>
</tr>
<tr>
<td>ten</td>
<td>tego</td>
<td>temu</td>
<td>ten, tego</td>
<td>tym</td>
<td>tym</td>
</tr>
<tr>
<td>tamten</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>to</td>
<td>tego</td>
<td>temu</td>
<td>to</td>
<td>tym</td>
<td>tym</td>
</tr>
<tr>
<td>ta</td>
<td>tej</td>
<td>tej</td>
<td>tę</td>
<td>tą</td>
<td>tej</td>
</tr>
<tr>
<td>ci</td>
<td>tych</td>
<td>tym</td>
<td>tych</td>
<td>tymi</td>
<td>tych</td>
</tr>
<tr>
<td>tamci</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>te</td>
<td>tych</td>
<td>tym</td>
<td>te</td>
<td>tymi</td>
<td>tych</td>
</tr>
<tr>
<td>co</td>
<td>czego</td>
<td>czemu</td>
<td>co</td>
<td>czym</td>
<td>czym</td>
</tr>
<tr>
<td>kto</td>
<td>kogo</td>
<td>komu</td>
<td>kogo</td>
<td>kim</td>
<td>kim</td>
</tr>
<tr>
<td>nic</td>
<td>nic, niczego</td>
<td>niczemu</td>
<td>nic</td>
<td>niczym</td>
<td>nikim</td>
</tr>
<tr>
<td>nikt</td>
<td>nikogo</td>
<td>nikomu</td>
<td>nikogo</td>
<td>nikim</td>
<td>nikim</td>
</tr>
<tr>
<td>mój</td>
<td>mojego,mego</td>
<td>mojemu,memu</td>
<td>mój/mojego</td>
<td>moim, mym</td>
<td>moim, mym</td>
</tr>
<tr>
<td>moi</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>moja, ma</td>
<td>mojej,mej</td>
<td>mojej,mej</td>
<td>moich,mych</td>
<td>moją,mą</td>
<td>mojej, mej</td>
</tr>
<tr>
<td>moje, me</td>
<td>mojego,mego</td>
<td>mojemu, memu</td>
<td>moją, mą</td>
<td>moim, mym</td>
<td>moim, mym</td>
</tr>
<tr>
<td>twój</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>twoi</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>twoja</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>twoje</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>jego</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>jej</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>nasz</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>nasi</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>nasza</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>nasze</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>wasz</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>wasi</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>wasza</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>wasze</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>ich</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody>
</table>

"""""
),
            ["""2018-09-01-Zdania-warunkowe"""] = (new Dictionary<string, string> { ["path"]="Polish|Gramatyka",["""title"""] =
"""""
 Zdania warunkowe
""""",
["""date"""] =
"""""
 2018-09-01
""""",
["""tags"""] =
"""""
 polish gramatyka
""""",
["""categories"""] =
"""""
 learning
""""",
 },
"""""
<h1 id="liczba-pojedyncza">Liczba pojedyncza</h1>
<table>
<thead>
<tr>
<th>by</th>
<th>rodzaj męski</th>
<th>rodzaj żeński</th>
<th>rodzaj nijaki</th>
</tr>
</thead>
<tbody>
<tr>
<td>ja</td>
<td>miałbym</td>
<td>miałabym</td>
<td>miałoby</td>
</tr>
<tr>
<td>ty</td>
<td>miałbyś</td>
<td>miałabyś</td>
<td>miałoby</td>
</tr>
<tr>
<td>on/ona/ono</td>
<td>miałby</td>
<td>miałaby</td>
<td>miałoby</td>
</tr>
<tr>
<td>my</td>
<td>mielibyśmy</td>
<td>miałybyśmy</td>
<td></td>
</tr>
<tr>
<td>wy</td>
<td>mielibyście</td>
<td>miałybyście</td>
<td></td>
</tr>
<tr>
<td>oni/one</td>
<td>mieliby</td>
<td>miałyby</td>
<td></td>
</tr>
</tbody>
</table>

"""""
),
            ["""2018-09-22-Biernik"""] = (new Dictionary<string, string> { ["path"]="Polish|Gramatyka",["""title"""] =
"""""
 Biernik, liczba pojedyncza
""""",
["""date"""] =
"""""
 2018-09-22
""""",
["""tags"""] =
"""""
 polish gramatyka
""""",
["""categories"""] =
"""""
 learning
""""",
 },
"""""
<h1 id="biernik-kogo-co-dokad-liczba-pojedyncza">Biernik (kogo? co? dokąd?), liczba pojedyncza</h1>
<p>Jaki? Jakiego? Jaką? Jakie?</p>
<table>
<thead>
<tr>
<th>S</th>
<th>V</th>
<th>O</th>
<th>przymiotnik</th>
<th>rzeczownik</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>on</td>
<td>ma</td>
<td>sympatyczną matkę, siostrę i córkę</td>
<td>-ą</td>
<td>-ę</td>
<td>rodzaj żeński</td>
</tr>
<tr>
<td>ja<br>ty</td>
<td>mam<br>masz</td>
<td>dobrego ojca, brata i syna<br>ładnego psa i kota</td>
<td>-ego</td>
<td>-a</td>
<td>rodzaj męski żywotny</td>
</tr>
<tr>
<td>my</td>
<td>mamy</td>
<td>ładny dom i samochód</td>
<td>= mianownik</td>
<td></td>
<td>rodzaj męski nieżywotny</td>
</tr>
<tr>
<td>oni</td>
<td>mają</td>
<td>małe dziecko</td>
<td>= mianownik</td>
<td></td>
<td>rodzaj nijaki</td>
</tr>
</tbody>
</table>
<blockquote>
<p>tak + biernik, nie + dopełniacz
Ale: nie interesuję się sportem, interesuję się teatrem; nie jestem Polakiem, jestem Francuzem.</p>
</blockquote>

"""""
),
            ["""2024-03-25-Things-to-get"""] = (new Dictionary<string, string> { ["path"]="travelling",["""title"""] =
"""""
 Things to get to the trip
""""",
["""date"""] =
"""""
 2024-03-25
""""",
["""tags"""] =
"""""
 trip outdoor
""""",
["""categories"""] =
"""""
 travelling
""""",
 },
"""""

"""""
),
            ["""2024-08-28-My-Trip-to-Spain"""] = (new Dictionary<string, string> { ["path"]="travelling",["""title"""] =
"""""
 My Trip to Spain
""""",
["""date"""] =
"""""
 2024-08-28
""""",
["""tags"""] =
"""""
 Spain, travel, vacation, beach, family, accommodation, budget, local market, entertainment, summer, outdoor
""""",
["""categories"""] =
"""""
 travelling
""""",
 },
"""""
<h1 id="my-trip-to-spain">My Trip to Spain</h1>
<p>Recently, I had the pleasure of visiting Spain, and I wanted to share some highlights and observations from the trip.</p>
<h2 id="accommodation">Accommodation</h2>
<p>I stayed at an apartment which you can check out <a href="http://www.justaapartamento.com/">here</a>. While the location was convenient, I noticed a couple of downsides:</p>
<ul>
<li><strong>Lack of a Work Table</strong>: Unfortunately, the apartment didn’t have a table suitable for working with a laptop, which was a bit inconvenient.</li>
<li><strong>Fan Issues</strong>: One of the bedrooms had a fan that didn’t work, making it a bit uncomfortable, especially during the warm nights.</li>
</ul>
<h2 id="pool-experience">Pool Experience</h2>
<p>The apartment complex had a pool, but it was often crowded. Many local people seemed to use it as a social gathering spot, so it wasn’t always the most relaxing place for a swim.</p>
<h2 id="beach-and-swimming">Beach and Swimming</h2>
<p>The nearby beach was fantastic, with great sandy areas that are ideal for families with small children. However, during my stay, the waves were quite big. Thankfully, there's a safer spot to swim during such conditions, which you can find <a href="https://www.openstreetmap.org/#map=19/38.032165/-0.651117">here</a>.</p>
<h2 id="local-amenities">Local Amenities</h2>
<h3 id="supermarket">Supermarket</h3>
<p>The closest supermarket was conveniently located, which made it easy to pick up daily essentials. You can find it <a href="https://www.openstreetmap.org/node/7126908485#map=19/38.025324/-0.654105&amp;layers=N">here</a>. They even had normal milk available, which was great!</p>
<p><img src="./images/image_1724359267933_0.png" alt="example" /></p>
<h3 id="local-market">Local Market</h3>
<p>On Wednesday morning (7:00 - 12:00), there is a local market where you can buy fresh fruits, chicken, honey, and other local goods at reasonable prices. The market is located <a href="https://www.openstreetmap.org/search?lat=38.024076&amp;lon=-0.654880#map=19/38.024075/-0.654880&amp;layers=N">here</a>.</p>
<h2 id="weather">Weather</h2>
<p>The weather during my stay was quite windy, which was a bit of a challenge. However, it changed to a calm, no-wind condition on the 17th of August, making the latter part of the trip more enjoyable.</p>
<h2 id="entertainment">Entertainment</h2>
<p>One of the highlights of the trip was a fantastic show designed for kids. It’s a high-octane car show that you can learn more about <a href="https://costablancakids.com/high-octane-car-show-for-kids-in-costa-blanca/">here</a>. It was a great experience for the entire family!</p>
<h2 id="budget">Budget</h2>
<p>The total cost of the trip (4 weeks) was around 5000 EUR, broken down as follows:</p>
<ul>
<li><strong>Apartments</strong>: 2500 EUR</li>
<li><strong>Road expenses</strong>: 1000 EUR</li>
<li><strong>Interim apartments</strong>: 500 EUR</li>
<li><strong>Shopping, restaurants, and shows</strong>: 1000 EUR (This included shopping, dining at restaurants twice, and attending two shows.)</li>
</ul>
<p>Overall, it was a memorable trip with a mix of relaxation, local culture, and fun experiences.</p>

"""""
),
        };
    }
}
