@page "/{articleName}"
@page "/"
@using Microsoft.AspNetCore.Components
@using Services
@inject HttpClient Http
@inject IJSRuntime JSRuntime
@inject ArticleService articleService

<PageTitle>Yauhen Pyl Blog</PageTitle>

@if (articleService.IsThereArticleWithName(SelectedArticleName)) {
    @(new MarkupString(articleService.Content(SelectedArticleName)))
    <MudPaper Class="d-flex pa-4 flex-row-reverse flex-wrap" Elevation="0">
        @if (!string.IsNullOrEmpty(Date))
        {
            <MudChip T="string" Size="Size.Small">@Date</MudChip>
        }
        @foreach(var tag in Tags)
        {
            <MudChip T="string" Size="Size.Small" Color="Color.Info">@tag</MudChip>
        }
        @if (!string.IsNullOrEmpty(Categories))
        {
            <MudChip T="string" Size="Size.Small" Color="Color.Warning">@Categories</MudChip>
        }
    </MudPaper>
}
else
{
    <span>There is no content.</span>
}

@code {
    [Parameter]
    public string? ArticleName { get; set; }

    string SelectedArticleName => ArticleName ?? articleService.FirstArticle();

    string Title => articleService.Title(SelectedArticleName);
    string Categories => articleService.Categories(SelectedArticleName);
    IEnumerable<string> Tags => articleService.Tags(SelectedArticleName);
    string Date => articleService.Date(SelectedArticleName);

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await JSRuntime.InvokeVoidAsync("callKatex");
        articleService.ArticleName = SelectedArticleName;
    }
}
